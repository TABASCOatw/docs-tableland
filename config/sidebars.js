/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */

// For text section headers / dividers, pass the name of the section
function sectionTitle(text) {
  return {
    type: "html",
    value: `<h6 class="margin-top--md margin-bottom--none sidebar-section">${text.toUpperCase()}</h6>`,
    defaultStyle: true,
  };
}

function hr() {
  return {
    type: "html",
    value: "<hr />",
    defaultStyle: true,
    className: "sidebar-hr",
  };
}

function section(text) {
  return [sectionTitle(text), hr()];
}

function sidepageHeader(text) {
  return [
    {
      type: "link",
      label: "Back to Home",
      className: "sidepage-back-home",
      href: "/",
    },
    {
      type: "html",
      value: `<h4 class="margin-top--md margin-bottom--sm sidepage-heading">${text}</h4>`,
      defaultStyle: true,
    },
  ];
}

const concepts = [
  ...sidepageHeader("Concepts"),
  "concepts/README",
  ...section("Concepts"),
  "concepts/network/what-is-tableland",
  "concepts/network/considerations-tradeoffs",
  "concepts/network/tableland-state",
  "concepts/network/use-cases",
  "concepts/network/open-beta",
];

const related = [
  {
    type: "category",
    label: "Related topics",
    link: {
      type: "doc",
      id: "concepts/related/README",
    },
    items: [
      "concepts/related/databases",
      "concepts/related/uri-encoding",
      "concepts/related/roadmap",
    ],
  },
];

const tools = {
  type: "category",
  label: "Tools",
  link: {
    type: "doc",
    id: "develop/tools/README",
  },
  items: ["develop/tools/local-tableland"],
};

const sql = [
  ...sidepageHeader("SQL"),
  "concepts/sql/README",
  "concepts/sql/create-a-table",
  {
    type: "category",
    label: "Mutating table data",
    link: {
      type: "doc",
      id: "concepts/sql/mutating-data",
    },
    items: [
      "concepts/sql/insert",
      "concepts/sql/update",
      "concepts/sql/upsert",
      "concepts/sql/delete",
    ],
  },
  "concepts/sql/read",
  "concepts/sql/access-control",
  "concepts/sql/incrementing-values",
  "concepts/sql/sql-spec",
];

const sdk = [
  ...section("SDK"),
  "sdk/README",
  "sdk/getting-started",
  "sdk/connect",
  "sdk/create",
  "sdk/write",
  "sdk/read",
];

const cli = [
  ...section("CLI"),
  "cli/README",
  "cli/getting-started",
  "cli/connect",
  "cli/create",
  "cli/write",
  "cli/read",
];

const validatorApi = [
  ...section("Validator API"),
  "validator-api/README",
  "validator-api/gateways",
  "validator-api/endpoints",
  "validator-api/errors",
];

const smartContracts = [
  ...section("Smart contracts"),
  "smart-contracts/README",
  "smart-contracts/getting-started",
  "smart-contracts/connect",
  "smart-contracts/create",
  "smart-contracts/write",
  "smart-contracts/read",
];

const guides = [
  ...sidepageHeader("Guides"),
  "guides/README",
  ...sdk,
  ...validatorApi,
  ...cli,
  ...smartContracts,
];

const reference = [
  ...sidepageHeader("Reference"),
  ...section("Protocol"),
  "reference/README",
  "reference/contracts",
  "reference/limits",
  ...section("Protocol"),
  "reference/README",
  "reference/response-times",
  "reference/table-names",
  "reference/repos",
];

const tutorials = [
  ...sidepageHeader("Tutorials"),
  "tutorials/README",
  ...section("Dynamic NFTs"),
  "tutorials/dynamic-nft-solidity",
  "tutorials/dynamic-nft-p5js",
  "tutorials/dynamic-nft-chainlink",
];

// @ts-check
/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
const sidebars = {
  home: [
    {
      type: "doc",
      id: "landing", // Custom ID for the `README` page in `docs` root
      className: "sidebar-landing",
    },
    {
      type: "doc",
      id: "concepts/README",
      label: "Get started",
      className: "sidebar-landing",
    },
    {
      type: "html",
      value: "<hr />",
      defaultStyle: true,
      className: "sidebar-hr",
    },
    {
      type: "doc",
      id: "concepts/README",
      label: "Concepts",
      className: "sidebar-landing",
    },
    {
      type: "doc",
      id: "guides/README",
      label: "Guides",
      className: "sidebar-landing",
    },
    {
      type: "doc",
      id: "tutorials/README",
      label: "Tutorials",
      className: "sidebar-landing",
    },
    {
      type: "doc",
      id: "reference/README",
      label: "Reference",
      className: "sidebar-landing",
    },
  ],
  concepts: concepts,
  sdk: sdk,
  cli: cli,
  validatorApi: validatorApi,
  smartContracts: smartContracts,
  sql: sql,
  guides: guides,
  reference: reference,
  tutorials: tutorials,
  // // By default, Docusaurus generates a sidebar from the docs folder structure
  // // tutorialSidebar: [{type: 'autogenerated', dirName: '.'}],
  // a: [
  //   "README",
  //   "concepts/faqs",
  //   {
  //     type: "html",
  //     value: ...section("Basics"),
  //     defaultStyle: true,
  //   },
  //   network,
  //   sql,
  //   related,
  //   "concepts/faqs",
  // ],
  // concepts: [
  //   "concepts/README",
  //   {
  //     type: "link",
  //     label: "‚Üê Home",
  //     href: "/",
  //   },
  //   {
  //     type: "html",
  //     value: ...section("Basics"),
  //     defaultStyle: true,
  //   },
  //   network,
  //   sql,
  //   related,
  //   "concepts/faqs",
  // ],
  // develop: [
  //   "develop/README",
  //   {
  //     type: "html",
  //     value: ...section(""),
  //     defaultStyle: true,
  //   },
  //   reference,
  //   {
  //     type: "html",
  //     value: ...section("Build"),
  //     defaultStyle: true,
  //   },
  //   sdk,
  //   cli,
  //   api,
  //   cli,
  //   api,
  //   cli,
  //   api,
  //   contracts,
  //   {
  //     type: "html",
  //     value: ...section("Integrations"),
  //     defaultStyle: true,
  //   },
  //   {
  //     type: "category",
  //     label: "Chains",
  //     link: {
  //       type: "doc",
  //       id: "develop/chains/README",
  //     },
  //     items: [
  //       "develop/chains/ethereum",
  //       "develop/chains/arbitrum",
  //       "develop/chains/optimism",
  //       "develop/chains/polygon",
  //       "develop/chains/local",
  //     ],
  //   },
  //   {
  //     type: "category",
  //     label: "Protocols",
  //     link: {
  //       type: "doc",
  //       id: "develop/integrations/ipfs",
  //     },
  //     items: [
  //       "develop/integrations/filecoin",
  //       "develop/integrations/chainlink",
  //       "develop/integrations/lit-protocol",
  //       "develop/integrations/nucypher",
  //       "develop/integrations/toucan",
  //     ],
  //   },
  //   {
  //     type: "html",
  //     value: ...section("Tools"),
  //     defaultStyle: true,
  //   },
  //   tools,
  // ],
  // tutorials: [
  //   {
  //     type: "category",
  //     label: "Tutorials",
  //     link: {
  //       type: "generated-index",
  //     },
  //     items: [
  //       "tutorials/dynamic-nft-solidity",
  //       "tutorials/dynamic-nft-p5js",
  //       "tutorials/dynamic-nft-chainlink",
  //     ],
  //   },
  // ],
  contribute: [
    ...sidepageHeader("Contribute"),
    "contribute/README",
    "contribute/style-guide",
    "contribute/maintainers",
  ],
  // rigs: [
  //   {
  //     type: "category",
  //     label: "Tableland Rigs NFT",
  //     link: {
  //       type: "doc",
  //       id: "products/rigs/README",
  //     },
  //     items: [
  //       "products/rigs/what-are-rigs",
  //       "products/rigs/the-garage",
  //       "products/rigs/rigs-discord",
  //     ],
  //   },
  // ],
};

module.exports = sidebars;
