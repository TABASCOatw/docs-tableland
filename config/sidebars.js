/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */

// For text section headers / dividers, pass the name of the section
function section(text) {
  return `<h6 class="margin-top--sm margin-bottom--none sidebar-section">${text.toUpperCase()}</h6>`;
}

const DiJsBadge = require("react-icons/di");

const reference = {
  type: "category",
  label: "Reference",
  link: {
    type: "doc",
    id: "develop/reference/README",
  },
  items: [
    "develop/reference/contracts",
    "develop/reference/limits",
    "develop/reference/response-times",
    "develop/reference/table-names",
    "develop/reference/repos",
  ],
};

const network = [
  {
    type: "category",
    label: "What is Tableland?",
    link: {
      type: "doc",
      id: "concepts/network/what-is-tableland",
    },
    items: [
      "concepts/network/considerations-tradeoffs",
      "concepts/network/tableland-state",
      "concepts/network/use-cases",
      "concepts/network/open-beta",
    ],
  },
];

const related = [
  {
    type: "category",
    label: "Related topics",
    link: {
      type: "doc",
      id: "concepts/related/README",
    },
    items: [
      "concepts/related/databases",
      "concepts/related/uri-encoding",
      "concepts/related/roadmap",
    ],
  },
];

const tools = {
  type: "category",
  label: "Tools",
  link: {
    type: "doc",
    id: "develop/tools/README",
  },
  items: ["develop/tools/local-tableland"],
};

const sql = [
  {
    type: "link",
    label: "← Home",
    href: "/",
  },
  {
    type: "html",
    value: "<hr />",
    defaultStyle: false,
    className: "menu-hr",
  },
  "concepts/sql/README",
  "concepts/sql/create-a-table",
  {
    type: "category",
    label: "Mutating table data",
    link: {
      type: "doc",
      id: "concepts/sql/mutating-data",
    },
    items: [
      "concepts/sql/insert",
      "concepts/sql/update",
      "concepts/sql/upsert",
      "concepts/sql/delete",
    ],
  },
  "concepts/sql/read",
  "concepts/sql/access-control",
  "concepts/sql/incrementing-values",
  "concepts/sql/sql-spec",
];

const sdk = {
  type: "category",
  label: "SDK",
  link: {
    type: "doc",
    id: "sdk/README",
  },
  items: [
    "sdk/getting-started",
    "sdk/connect",
    "sdk/create",
    "sdk/write",
    "sdk/read",
  ],
};

const cli = {
  type: "category",
  label: "CLI",
  link: {
    type: "doc",
    id: "cli/README",
  },
  items: [
    "cli/getting-started",
    "cli/connect",
    "cli/create",
    "cli/write",
    "cli/read",
  ],
};

const api = {
  type: "category",
  label: "REST API",
  link: {
    type: "doc",
    id: "api/README",
  },
  items: ["api/gateways", "api/endpoints", "api/errors"],
};

const contracts = {
  type: "category",
  label: "Smart contracts",
  link: {
    type: "doc",
    id: "smart-contracts/README",
  },
  items: [
    "smart-contracts/getting-started",
    "smart-contracts/connect",
    "smart-contracts/create",
    "smart-contracts/write",
    "smart-contracts/read",
  ],
};

// @ts-check
/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
const sidebars = {
  home: [
    {
      type: "doc",
      id: "landing", // Custom ID for the `README` page in `docs` root
      className: "menu-item-home",
    },
    "concepts/sql/README",
    {
      type: "link",
      label: "SQL",
      href: "/concepts/sql",
    },
  ],
  sql: sql,
  // // By default, Docusaurus generates a sidebar from the docs folder structure
  // // tutorialSidebar: [{type: 'autogenerated', dirName: '.'}],
  // a: [
  //   "README",
  //   "concepts/faqs",
  //   {
  //     type: "html",
  //     value: section("Basics"),
  //     defaultStyle: true,
  //   },
  //   network,
  //   sql,
  //   related,
  //   "concepts/faqs",
  // ],
  // concepts: [
  //   "concepts/README",
  //   {
  //     type: "link",
  //     label: "← Home",
  //     href: "/",
  //   },
  //   {
  //     type: "html",
  //     value: section("Basics"),
  //     defaultStyle: true,
  //   },
  //   network,
  //   sql,
  //   related,
  //   "concepts/faqs",
  // ],
  // develop: [
  //   "develop/README",
  //   {
  //     type: "html",
  //     value: section(""),
  //     defaultStyle: true,
  //   },
  //   reference,
  //   {
  //     type: "html",
  //     value: section("Build"),
  //     defaultStyle: true,
  //   },
  //   sdk,
  //   cli,
  //   api,
  //   cli,
  //   api,
  //   cli,
  //   api,
  //   contracts,
  //   {
  //     type: "html",
  //     value: section("Integrations"),
  //     defaultStyle: true,
  //   },
  //   {
  //     type: "category",
  //     label: "Chains",
  //     link: {
  //       type: "doc",
  //       id: "develop/chains/README",
  //     },
  //     items: [
  //       "develop/chains/ethereum",
  //       "develop/chains/arbitrum",
  //       "develop/chains/optimism",
  //       "develop/chains/polygon",
  //       "develop/chains/local",
  //     ],
  //   },
  //   {
  //     type: "category",
  //     label: "Protocols",
  //     link: {
  //       type: "doc",
  //       id: "develop/integrations/ipfs",
  //     },
  //     items: [
  //       "develop/integrations/filecoin",
  //       "develop/integrations/chainlink",
  //       "develop/integrations/lit-protocol",
  //       "develop/integrations/nucypher",
  //       "develop/integrations/toucan",
  //     ],
  //   },
  //   {
  //     type: "html",
  //     value: section("Tools"),
  //     defaultStyle: true,
  //   },
  //   tools,
  // ],
  // tutorials: [
  //   {
  //     type: "category",
  //     label: "Tutorials",
  //     link: {
  //       type: "generated-index",
  //     },
  //     items: [
  //       "tutorials/dynamic-nft-solidity",
  //       "tutorials/dynamic-nft-p5js",
  //       "tutorials/dynamic-nft-chainlink",
  //     ],
  //   },
  // ],
  // contribute: [
  //   "contribute/README",
  //   "contribute/style-guide",
  //   "contribute/maintainers",
  // ],
  // rigs: [
  //   {
  //     type: "category",
  //     label: "Tableland Rigs NFT",
  //     link: {
  //       type: "doc",
  //       id: "products/rigs/README",
  //     },
  //     items: [
  //       "products/rigs/what-are-rigs",
  //       "products/rigs/the-garage",
  //       "products/rigs/rigs-discord",
  //     ],
  //   },
  // ],
};

module.exports = sidebars;
