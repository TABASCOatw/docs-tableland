openapi: 3.0.0
info:
  title: Tableland Remote API
  version: 0.0.1
servers:
  - url: https://testnet.tableland.network
paths:
  /rpc:
    post:
      security:
        - bearerAuth: []
      summary: Lets you interact with Tableland's JSON-RPC calls
      description: >
        There are two available JSON-RPC methods: `createdTable` and `runSQL`.

        * The `createdTable` method allows you to create a table that was already minted.

        * The `runSQL` method allows you to run SQL statements on an existing table."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/runSQL"
                - $ref: "#/components/schemas/createTable"
            examples:
              createTable:
                value:
                  jsonrpc: "2.0"
                  method: tableland_createTable
                  id: 1
                  params:
                    id: "0"
                    description: "tableland rocks!"
                    controller: "0xbAb12215Ed94713A290e0c618fa8177fAb5eFd2D"
                    statement: "CREATE TABLE myname (column_a int, column_b text);"
              runSQL:
                value:
                  jsonrpc: "2.0"
                  method: tableland_runSQL
                  id: 1
                  params:
                    controller: "0xbAb12215Ed94713A290e0c618fa8177fAb5eFd2D"
                    statement: SELECT * FROM myname;
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: "Accept, Accept-Language, Content-Type, Authorization"
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: "GET, POST, OPTIONS"
            Trace-Id:
              schema:
                type: string
                example: "579bf7aa-9bcf-4405-9d9e-7fd6c1672d1b"
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                createTable:
                  value:
                    jsonrpc: "2.0"
                    id: 1
                    result:
                      name: "myname_0"
                runSQL:
                  value:
                    jsonrpc: "2.0"
                    id: 1
                    result:
                      data:
                        columns:
                          - name: column_a
                          - name: column_b
                        rows:
                          - ["e11", "e12"]
                          - ["e21", "e22"]
  /tables/controller/{ethAddress}:
    get:
      summary: Get all tables controlled by an ETH address
      parameters:
        - in: path
          name: ethAddress
          schema:
            type: string
          required: true
          description: An ETH address
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "object"
                  required:
                    - "uuid"
                    - "controller"
                    - "type"
                    - "created_at"
                  properties:
                    name:
                      type: "string"
                    controller:
                      type: "string"
                    description:
                      type: "string"
                    created_at:
                      type: "string"
                    structure:
                      type: "string"
                  example:
                    controller: "0xbAb12215Ed94713A290e0c618fa8177fAb5eFd2D"
                    name: "myname_0"
                    description: "tableland rocks!"
                    structure: "be1eb905f03347a439ecf9b612632fd53839b7f082dc2f9be6ef7da5dfddd660"
                    created_at: "2022-02-07T22:57:41.606803Z"
  /tables/{id}:
    get:
      summary: Get the metadata associated with a table
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The id of the table
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - name
                  - description
                  - external_url
                  - image
                  - attributes
                properties:
                  name:
                    type: "string"
                  description:
                    type: "string"
                  external_url:
                    type: "string"
                  image:
                    type: "string"
                  attributes:
                    type: array
                    items:
                      type: object
                      required:
                        - display_type
                        - trait_type
                        - value
                      properties:
                        display_type:
                          type: "string"
                        trait_type:
                          type: "string"
                        value:
                          type: "integer"
                example:
                  name: "myname"
                  description: "tableland rocks!"
                  external_url: "https://testnet.tableland.network/tables/0"
                  image: "https://hub.textile.io/thread/bafkqtqxkgt3moqxwa6rpvtuyigaoiavyewo67r3h7gsz4hov2kys7ha/buckets/bafzbeicpzsc423nuninuvrdsmrwurhv3g2xonnduq4gbhviyo5z4izwk5m/todo-list.png"
                  attributes:
                    - display_type: "date"
                      trait_type: "created"
                      value: 1644274661
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - message
                example:
                  message: "Failed to fetch metadata"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: "object"
                required:
                  - message
                example:
                  message: "Invalid id format"

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    runSQL:
      type: "object"
      required:
        - "method"
        - "id"
        - "jsonrpc"
        - "params"
      properties:
        method:
          type: "string"
          description: "Method name"
        id:
          type: "integer"
          default: 1
          format: int32
          description: "Request ID"
        jsonrpc:
          type: "string"
          default: "2.0"
          description: "JSON-RPC Version (2.0)"
        params:
          type: "array"
          items:
            type: "object"
            required:
              - "controller"
              - "statement"
            properties:
              controller:
                type: "string"
              statement:
                type: "string"
    createTable:
      type: "object"
      required:
        - "method"
        - "id"
        - "jsonrpc"
        - "params"
      properties:
        method:
          type: "string"
          description: "Method name"
        id:
          type: "integer"
          default: 1
          format: int32
          description: "Request ID"
        jsonrpc:
          type: "string"
          default: "2.0"
          description: "JSON-RPC Version (2.0)"
        params:
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "controller"
              - "statement"
              - "description"
            properties:
              id:
                type: "string"
              controller:
                type: "string"
              statement:
                type: "string"
              description:
                type: "string"
