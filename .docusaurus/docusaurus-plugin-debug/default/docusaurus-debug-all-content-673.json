{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/",
          "tagsPath": "/tags",
          "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs",
          "editUrlLocalized": "https://github.com/tablelandnetwork/docs/tree/main/i18n/en/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/dtb/tbl/docs/config/sidebars.js",
          "contentPath": "/Users/dtb/tbl/docs/docs",
          "contentPathLocalized": "/Users/dtb/tbl/docs/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "cli/commands",
              "id": "cli/commands",
              "title": "CLI commands",
              "description": "The Tableland CLI comes with purpose built commands, which slightly differs from the convention in other clients.",
              "source": "@site/docs/cli/commands.md",
              "sourceDirName": "cli",
              "slug": "/cli/commands",
              "permalink": "/cli/commands",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/commands.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "CLI commands",
                "sidebar_label": "Commands",
                "description": "The Tableland CLI comes with purpose built commands, which slightly differs from the convention in other clients.",
                "keywords": [
                  "cli",
                  "command line"
                ]
              },
              "sidebar": "cli",
              "previous": {
                "title": "Installation",
                "permalink": "/cli/"
              },
              "next": {
                "title": "Errors",
                "permalink": "/cli/errors"
              }
            },
            {
              "unversionedId": "cli/errors",
              "id": "cli/errors",
              "title": "CLI errors",
              "description": "Understand commons errors that occur when using the Tableland CLI.",
              "source": "@site/docs/cli/errors.md",
              "sourceDirName": "cli",
              "slug": "/cli/errors",
              "permalink": "/cli/errors",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/errors.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "CLI errors",
                "sidebar_label": "Errors",
                "description": "Understand commons errors that occur when using the Tableland CLI.",
                "keywords": [
                  "cli",
                  "command line",
                  "errors"
                ]
              },
              "sidebar": "cli",
              "previous": {
                "title": "Commands",
                "permalink": "/cli/commands"
              }
            },
            {
              "unversionedId": "cli/README",
              "id": "cli/README",
              "title": "Installation",
              "description": "Experiment with creating, editing, and querying tables from the comfort of the command line.",
              "source": "@site/docs/cli/README.md",
              "sourceDirName": "cli",
              "slug": "/cli/",
              "permalink": "/cli/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Installation",
                "description": "Experiment with creating, editing, and querying tables from the comfort of the command line.",
                "keywords": [
                  "CLI",
                  "command line"
                ]
              },
              "sidebar": "cli",
              "next": {
                "title": "Commands",
                "permalink": "/cli/commands"
              }
            },
            {
              "unversionedId": "contribute/maintainers",
              "id": "contribute/maintainers",
              "title": "Maintainers",
              "description": "Core contributors to the Tableland protocol's documentation.",
              "source": "@site/docs/contribute/maintainers.md",
              "sourceDirName": "contribute",
              "slug": "/contribute/maintainers",
              "permalink": "/contribute/maintainers",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/contribute/maintainers.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Maintainers",
                "description": "Core contributors to the Tableland protocol's documentation.",
                "keywords": [
                  "docs",
                  "tableland",
                  "maintainers",
                  "contributors"
                ]
              },
              "sidebar": "contribute",
              "previous": {
                "title": "Style guide",
                "permalink": "/contribute/style-guide"
              }
            },
            {
              "unversionedId": "contribute/README",
              "id": "contribute/README",
              "title": "How to contribute",
              "description": "Get involved and contribute to the Tableland ecosystem.",
              "source": "@site/docs/contribute/README.md",
              "sourceDirName": "contribute",
              "slug": "/contribute/",
              "permalink": "/contribute/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/contribute/README.md",
              "tags": [
                {
                  "label": "contributing",
                  "permalink": "/tags/contributing"
                }
              ],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "How to contribute",
                "sidebar_label": "Contributor guidelines",
                "description": "Get involved and contribute to the Tableland ecosystem.",
                "keywords": [
                  "docs",
                  "tableland",
                  "contribute",
                  "contributor",
                  "contributing"
                ],
                "tags": [
                  "contributing"
                ]
              },
              "sidebar": "contribute",
              "next": {
                "title": "Style guide",
                "permalink": "/contribute/style-guide"
              }
            },
            {
              "unversionedId": "contribute/style-guide",
              "id": "contribute/style-guide",
              "title": "Style guide",
              "description": "Learn the ins and outs of contributing to the Tableland docs site.",
              "source": "@site/docs/contribute/style-guide.md",
              "sourceDirName": "contribute",
              "slug": "/contribute/style-guide",
              "permalink": "/contribute/style-guide",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/contribute/style-guide.md",
              "tags": [
                {
                  "label": "contributing",
                  "permalink": "/tags/contributing"
                }
              ],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Style guide",
                "description": "Learn the ins and outs of contributing to the Tableland docs site.",
                "keywords": [
                  "docs",
                  "tableland",
                  "contribute",
                  "contributor",
                  "contributing"
                ],
                "tags": [
                  "contributing"
                ]
              },
              "sidebar": "contribute",
              "previous": {
                "title": "Contributor guidelines",
                "permalink": "/contribute/"
              },
              "next": {
                "title": "Maintainers",
                "permalink": "/contribute/maintainers"
              }
            },
            {
              "unversionedId": "fundamentals/about/general-faqs",
              "id": "fundamentals/about/general-faqs",
              "title": "General FAQs",
              "description": "Review commonly asked questions about the Tableland network and community.",
              "source": "@site/docs/fundamentals/about/general-faqs.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/general-faqs",
              "permalink": "/fundamentals/about/general-faqs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/general-faqs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "General FAQs",
                "description": "Review commonly asked questions about the Tableland network and community.",
                "keywords": [
                  "faq",
                  "faqs"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "NFT metadata",
                "permalink": "/fundamentals/concepts/nft-metadata"
              },
              "next": {
                "title": "Glossary",
                "permalink": "/fundamentals/about/glossary"
              }
            },
            {
              "unversionedId": "fundamentals/about/glossary",
              "id": "fundamentals/about/glossary",
              "title": "Glossary",
              "description": "Get familiar with common words and phrases in web3, databases, and Tableland.",
              "source": "@site/docs/fundamentals/about/glossary.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/glossary",
              "permalink": "/fundamentals/about/glossary",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/glossary.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Glossary",
                "description": "Get familiar with common words and phrases in web3, databases, and Tableland."
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "General FAQs",
                "permalink": "/fundamentals/about/general-faqs"
              },
              "next": {
                "title": "Open beta",
                "permalink": "/fundamentals/about/open-beta"
              }
            },
            {
              "unversionedId": "fundamentals/about/open-beta",
              "id": "fundamentals/about/open-beta",
              "title": "Open beta",
              "description": "Use Tableland on testnet and mainnet chains while the protocol is in development.",
              "source": "@site/docs/fundamentals/about/open-beta.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/open-beta",
              "permalink": "/fundamentals/about/open-beta",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/open-beta.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Open beta",
                "description": "Use Tableland on testnet and mainnet chains while the protocol is in development.",
                "keywords": [
                  "open beta",
                  "production"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Glossary",
                "permalink": "/fundamentals/about/glossary"
              },
              "next": {
                "title": "Roadmap",
                "permalink": "/fundamentals/about/roadmap"
              }
            },
            {
              "unversionedId": "fundamentals/about/repos",
              "id": "fundamentals/about/repos",
              "title": "Repositories",
              "description": "Open source reference for all official Tableland network software.",
              "source": "@site/docs/fundamentals/about/repos.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/repos",
              "permalink": "/fundamentals/about/repos",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/repos.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Repositories",
                "sidebar_label": "Repos",
                "description": "Open source reference for all official Tableland network software.",
                "keywords": [
                  "repos",
                  "repo",
                  "repositories",
                  "repository"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Roadmap",
                "permalink": "/fundamentals/about/roadmap"
              }
            },
            {
              "unversionedId": "fundamentals/about/roadmap",
              "id": "fundamentals/about/roadmap",
              "title": "Vision & roadmap",
              "description": "The protocol is still being developed and progressively decentralized.",
              "source": "@site/docs/fundamentals/about/roadmap.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/roadmap",
              "permalink": "/fundamentals/about/roadmap",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/roadmap.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Vision & roadmap",
                "sidebar_label": "Roadmap",
                "description": "The protocol is still being developed and progressively decentralized.",
                "keywords": [
                  "roadmap",
                  "vision"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Open beta",
                "permalink": "/fundamentals/about/open-beta"
              },
              "next": {
                "title": "Repos",
                "permalink": "/fundamentals/about/repos"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/cost-estimator",
              "id": "fundamentals/architecture/cost-estimator",
              "title": "Cost estimator",
              "description": "Understand cost approximations for table creates and writes based on statement size.",
              "source": "@site/docs/fundamentals/architecture/cost-estimator.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/cost-estimator",
              "permalink": "/fundamentals/architecture/cost-estimator",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/cost-estimator.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Cost estimator",
                "description": "Understand cost approximations for table creates and writes based on statement size.",
                "keywords": [
                  "query costs",
                  "cost"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Queries & gas",
                "permalink": "/fundamentals/architecture/query-optimization"
              },
              "next": {
                "title": "NFT metadata",
                "permalink": "/fundamentals/concepts/nft-metadata"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/gateway",
              "id": "fundamentals/architecture/gateway",
              "title": "Gateway & response times",
              "description": "Read responses follow typical HTTPS response expectation, but keep in mind that mutation processing (creates & writes) must occur before the data is made available.",
              "source": "@site/docs/fundamentals/architecture/gateway.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/gateway",
              "permalink": "/fundamentals/architecture/gateway",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/gateway.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Gateway & response times",
                "sidebar_label": "Gateway",
                "description": "Read responses follow typical HTTPS response expectation, but keep in mind that mutation processing (creates & writes) must occur before the data is made available.",
                "keywords": [
                  "response times",
                  "gateway"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Limits",
                "permalink": "/fundamentals/architecture/limits"
              },
              "next": {
                "title": "Choosing a chain",
                "permalink": "/fundamentals/chains/"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/limits",
              "id": "fundamentals/architecture/limits",
              "title": "Limits",
              "description": "A listing of table, data, and query limits.",
              "source": "@site/docs/fundamentals/architecture/limits.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/limits",
              "permalink": "/fundamentals/architecture/limits",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/limits.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Limits",
                "description": "A listing of table, data, and query limits.",
                "keywords": [
                  "limits",
                  "cell limit",
                  "row limit",
                  "column limit",
                  "data limit"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Table uniqueness",
                "permalink": "/fundamentals/architecture/table-token"
              },
              "next": {
                "title": "Gateway",
                "permalink": "/fundamentals/architecture/gateway"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/protocol-design",
              "id": "fundamentals/architecture/protocol-design",
              "title": "Protocol design",
              "description": "The Tableland protocol operates as a data scaling solution using chain-powered database mutations and a parallel adjacent network.",
              "source": "@site/docs/fundamentals/architecture/protocol-design.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/protocol-design",
              "permalink": "/fundamentals/architecture/protocol-design",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/protocol-design.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Protocol design",
                "description": "The Tableland protocol operates as a data scaling solution using chain-powered database mutations and a parallel adjacent network.",
                "keywords": [
                  "protocol",
                  "protocol design"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Use cases",
                "permalink": "/fundamentals/use-cases/"
              },
              "next": {
                "title": "Table uniqueness",
                "permalink": "/fundamentals/architecture/table-token"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/query-optimization",
              "id": "fundamentals/architecture/query-optimization",
              "title": "Query optimization & gas",
              "description": "Gas is paid for any on-chain query, so statement structure has an impact on cost.",
              "source": "@site/docs/fundamentals/architecture/query-optimization.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/query-optimization",
              "permalink": "/fundamentals/architecture/query-optimization",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/query-optimization.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Query optimization & gas",
                "sidebar_label": "Queries & gas",
                "description": "Gas is paid for any on-chain query, so statement structure has an impact on cost.",
                "keywords": [
                  "query optimization"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Local node",
                "permalink": "/fundamentals/chains/local"
              },
              "next": {
                "title": "Cost estimator",
                "permalink": "/fundamentals/architecture/cost-estimator"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/table-token",
              "id": "fundamentals/architecture/table-token",
              "title": "TABLE token & identification",
              "description": "Tables are guaranteed unique across all chains based on a combination of developer and environment defined information.",
              "source": "@site/docs/fundamentals/architecture/table-token.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/table-token",
              "permalink": "/fundamentals/architecture/table-token",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/table-token.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "TABLE token & identification",
                "sidebar_label": "Table uniqueness",
                "description": "Tables are guaranteed unique across all chains based on a combination of developer and environment defined information.",
                "keywords": [
                  "table",
                  "erc721"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Protocol design",
                "permalink": "/fundamentals/architecture/protocol-design"
              },
              "next": {
                "title": "Limits",
                "permalink": "/fundamentals/architecture/limits"
              }
            },
            {
              "unversionedId": "fundamentals/chains/arbitrum",
              "id": "fundamentals/chains/arbitrum",
              "title": "Arbitrum",
              "description": "An overview of using Arbitrum with Tableland.",
              "source": "@site/docs/fundamentals/chains/arbitrum.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/arbitrum",
              "permalink": "/fundamentals/chains/arbitrum",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/arbitrum.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Arbitrum",
                "description": "An overview of using Arbitrum with Tableland.",
                "keywords": [
                  "arbitrum"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Ethereum",
                "permalink": "/fundamentals/chains/ethereum"
              },
              "next": {
                "title": "Optimism",
                "permalink": "/fundamentals/chains/optimism"
              }
            },
            {
              "unversionedId": "fundamentals/chains/ethereum",
              "id": "fundamentals/chains/ethereum",
              "title": "Ethereum",
              "description": "An overview of using Ethereum with Tableland.",
              "source": "@site/docs/fundamentals/chains/ethereum.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/ethereum",
              "permalink": "/fundamentals/chains/ethereum",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/ethereum.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Ethereum",
                "description": "An overview of using Ethereum with Tableland.",
                "keywords": [
                  "ethereum"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Choosing a chain",
                "permalink": "/fundamentals/chains/"
              },
              "next": {
                "title": "Arbitrum",
                "permalink": "/fundamentals/chains/arbitrum"
              }
            },
            {
              "unversionedId": "fundamentals/chains/filecoin",
              "id": "fundamentals/chains/filecoin",
              "title": "Filecoin",
              "description": "An overview of using Filecoin with Tableland.",
              "source": "@site/docs/fundamentals/chains/filecoin.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/filecoin",
              "permalink": "/fundamentals/chains/filecoin",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/filecoin.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Filecoin",
                "description": "An overview of using Filecoin with Tableland.",
                "keywords": [
                  "filecoin"
                ]
              }
            },
            {
              "unversionedId": "fundamentals/chains/local",
              "id": "fundamentals/chains/local",
              "title": "Using a local chain",
              "description": "An overview of using a Hardhat node and a local Tableland instance.",
              "source": "@site/docs/fundamentals/chains/local.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/local",
              "permalink": "/fundamentals/chains/local",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/local.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Using a local chain",
                "sidebar_label": "Local node",
                "description": "An overview of using a Hardhat node and a local Tableland instance.",
                "keywords": [
                  "local tableland",
                  "hardhat"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Polygon",
                "permalink": "/fundamentals/chains/polygon"
              },
              "next": {
                "title": "Queries & gas",
                "permalink": "/fundamentals/architecture/query-optimization"
              }
            },
            {
              "unversionedId": "fundamentals/chains/optimism",
              "id": "fundamentals/chains/optimism",
              "title": "Optimism",
              "description": "An overview of using Optimism with Tableland.",
              "source": "@site/docs/fundamentals/chains/optimism.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/optimism",
              "permalink": "/fundamentals/chains/optimism",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/optimism.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Optimism",
                "description": "An overview of using Optimism with Tableland.",
                "keywords": [
                  "optimism"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Arbitrum",
                "permalink": "/fundamentals/chains/arbitrum"
              },
              "next": {
                "title": "Polygon",
                "permalink": "/fundamentals/chains/polygon"
              }
            },
            {
              "unversionedId": "fundamentals/chains/polygon",
              "id": "fundamentals/chains/polygon",
              "title": "Polygon",
              "description": "An overview of using Polygon with Tableland.",
              "source": "@site/docs/fundamentals/chains/polygon.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/polygon",
              "permalink": "/fundamentals/chains/polygon",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/polygon.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Polygon",
                "description": "An overview of using Polygon with Tableland.",
                "keywords": [
                  "polygon"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Optimism",
                "permalink": "/fundamentals/chains/optimism"
              },
              "next": {
                "title": "Local node",
                "permalink": "/fundamentals/chains/local"
              }
            },
            {
              "unversionedId": "fundamentals/chains/README",
              "id": "fundamentals/chains/README",
              "title": "Choosing a chain",
              "description": "Selecting a base chain is an important step in any application’s design and, especially, for tables.",
              "source": "@site/docs/fundamentals/chains/README.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/",
              "permalink": "/fundamentals/chains/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Choosing a chain",
                "description": "Selecting a base chain is an important step in any application’s design and, especially, for tables.",
                "keywords": [
                  "evm",
                  "chains",
                  "blockchains"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Gateway",
                "permalink": "/fundamentals/architecture/gateway"
              },
              "next": {
                "title": "Ethereum",
                "permalink": "/fundamentals/chains/ethereum"
              }
            },
            {
              "unversionedId": "fundamentals/concepts/nft-metadata",
              "id": "fundamentals/concepts/nft-metadata",
              "title": "NFT metadata",
              "description": "Understand the basics of storing and querying ERC721 metadata in table.",
              "source": "@site/docs/fundamentals/concepts/nft-metadata.md",
              "sourceDirName": "fundamentals/concepts",
              "slug": "/fundamentals/concepts/nft-metadata",
              "permalink": "/fundamentals/concepts/nft-metadata",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/concepts/nft-metadata.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "NFT metadata",
                "description": "Understand the basics of storing and querying ERC721 metadata in table.",
                "keywords": [
                  "nft metadata",
                  "erc721 metadata"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Cost estimator",
                "permalink": "/fundamentals/architecture/cost-estimator"
              },
              "next": {
                "title": "General FAQs",
                "permalink": "/fundamentals/about/general-faqs"
              }
            },
            {
              "unversionedId": "fundamentals/considerations-tradeoffs",
              "id": "fundamentals/considerations-tradeoffs",
              "title": "Considerations & tradeoffs",
              "description": "Tableland offers a new solution to suboptimal web3 data storage standards.",
              "source": "@site/docs/fundamentals/considerations-tradeoffs.md",
              "sourceDirName": "fundamentals",
              "slug": "/fundamentals/considerations-tradeoffs",
              "permalink": "/fundamentals/considerations-tradeoffs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/considerations-tradeoffs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Considerations & tradeoffs",
                "sidebar_label": "Why use Tableland?",
                "description": "Tableland offers a new solution to suboptimal web3 data storage standards."
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "What is Tableland?",
                "permalink": "/fundamentals/what-is-tableland"
              },
              "next": {
                "title": "Databases & SQL",
                "permalink": "/fundamentals/databases"
              }
            },
            {
              "unversionedId": "fundamentals/databases",
              "id": "fundamentals/databases",
              "title": "Databases & SQL",
              "description": "Briefly look under the hood at relational databases.",
              "source": "@site/docs/fundamentals/databases.md",
              "sourceDirName": "fundamentals",
              "slug": "/fundamentals/databases",
              "permalink": "/fundamentals/databases",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/databases.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Databases & SQL",
                "description": "Briefly look under the hood at relational databases.",
                "keywords": [
                  "databases",
                  "relational database"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Why use Tableland?",
                "permalink": "/fundamentals/considerations-tradeoffs"
              },
              "next": {
                "title": "Use cases",
                "permalink": "/fundamentals/use-cases/"
              }
            },
            {
              "unversionedId": "fundamentals/README",
              "id": "fundamentals/README",
              "title": "Introduction",
              "description": "Figure out where to begin with Tableland, whether that's starting to build or figuring out how it all works.",
              "source": "@site/docs/fundamentals/README.md",
              "sourceDirName": "fundamentals",
              "slug": "/fundamentals/",
              "permalink": "/fundamentals/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Introduction",
                "description": "Figure out where to begin with Tableland, whether that's starting to build or figuring out how it all works."
              },
              "sidebar": "fundamentals",
              "next": {
                "title": "What is Tableland?",
                "permalink": "/fundamentals/what-is-tableland"
              }
            },
            {
              "unversionedId": "fundamentals/use-cases/README",
              "id": "fundamentals/use-cases/README",
              "title": "Use cases",
              "description": "A series of general use cases to consider.",
              "source": "@site/docs/fundamentals/use-cases/README.md",
              "sourceDirName": "fundamentals/use-cases",
              "slug": "/fundamentals/use-cases/",
              "permalink": "/fundamentals/use-cases/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/use-cases/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Use cases",
                "description": "A series of general use cases to consider.",
                "keywords": [
                  "use cases"
                ]
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Databases & SQL",
                "permalink": "/fundamentals/databases"
              },
              "next": {
                "title": "Protocol design",
                "permalink": "/fundamentals/architecture/protocol-design"
              }
            },
            {
              "unversionedId": "fundamentals/what-is-tableland",
              "id": "fundamentals/what-is-tableland",
              "title": "What is Tableland?",
              "description": "A brief overview of what the Tableland network is and how it works.",
              "source": "@site/docs/fundamentals/what-is-tableland.md",
              "sourceDirName": "fundamentals",
              "slug": "/fundamentals/what-is-tableland",
              "permalink": "/fundamentals/what-is-tableland",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/what-is-tableland.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "What is Tableland?",
                "description": "A brief overview of what the Tableland network is and how it works."
              },
              "sidebar": "fundamentals",
              "previous": {
                "title": "Introduction",
                "permalink": "/fundamentals/"
              },
              "next": {
                "title": "Why use Tableland?",
                "permalink": "/fundamentals/considerations-tradeoffs"
              }
            },
            {
              "unversionedId": "gateway-api/endpoints",
              "id": "gateway-api/endpoints",
              "title": "Endpoints",
              "description": "Make API calls to get table and validator information.",
              "source": "@site/docs/gateway-api/endpoints.md",
              "sourceDirName": "gateway-api",
              "slug": "/gateway-api/endpoints",
              "permalink": "/gateway-api/endpoints",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/gateway-api/endpoints.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Endpoints",
                "description": "Make API calls to get table and validator information.",
                "keywords": [
                  "gateway api",
                  "rest api"
                ]
              },
              "sidebar": "validatorApi",
              "previous": {
                "title": "Get started",
                "permalink": "/gateway-api/"
              },
              "next": {
                "title": "Query formatting",
                "permalink": "/gateway-api/query-formatting"
              }
            },
            {
              "unversionedId": "gateway-api/errors",
              "id": "gateway-api/errors",
              "title": "Errors",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/gateway-api/errors.md",
              "sourceDirName": "gateway-api",
              "slug": "/gateway-api/errors",
              "permalink": "/gateway-api/errors",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/gateway-api/errors.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Errors",
                "description": "Openly readable tables by your applications.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "gateway-api/query-formatting",
              "id": "gateway-api/query-formatting",
              "title": "Query formatting",
              "description": "Transform the output of a read query into your desired format.",
              "source": "@site/docs/gateway-api/query-formatting.md",
              "sourceDirName": "gateway-api",
              "slug": "/gateway-api/query-formatting",
              "permalink": "/gateway-api/query-formatting",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/gateway-api/query-formatting.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Query formatting",
                "description": "Transform the output of a read query into your desired format.",
                "keywords": [
                  "gateway api",
                  "query formatting"
                ]
              },
              "sidebar": "validatorApi",
              "previous": {
                "title": "Endpoints",
                "permalink": "/gateway-api/endpoints"
              }
            },
            {
              "unversionedId": "gateway-api/README",
              "id": "gateway-api/README",
              "title": "Get started",
              "description": "Leverage REST APIs to interact directly with Tableland validator nodes at a gateway.",
              "source": "@site/docs/gateway-api/README.md",
              "sourceDirName": "gateway-api",
              "slug": "/gateway-api/",
              "permalink": "/gateway-api/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/gateway-api/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Get started",
                "description": "Leverage REST APIs to interact directly with Tableland validator nodes at a gateway.",
                "keywords": [
                  "rest api",
                  "gateway api"
                ]
              },
              "sidebar": "validatorApi",
              "next": {
                "title": "Endpoints",
                "permalink": "/gateway-api/endpoints"
              }
            },
            {
              "unversionedId": "landing",
              "id": "landing",
              "title": "Home",
              "description": "",
              "source": "@site/docs/README.md",
              "sourceDirName": ".",
              "slug": "/",
              "permalink": "/",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "landing",
                "title": "Home",
                "sidebar_label": "Home",
                "hide_title": true,
                "hide_bread_crumb": true,
                "hide_table_of_contents": true,
                "pagination_prev": null,
                "pagination_next": null,
                "custom_edit_url": null,
                "slug": "/",
                "keywords": [
                  "tableland",
                  "docs",
                  "documentation"
                ]
              },
              "sidebar": "home"
            },
            {
              "unversionedId": "playbooks/README",
              "id": "playbooks/README",
              "title": "Overview",
              "description": "Get started with playbooks that outline how to use Tableland SQL and other common concepts.",
              "source": "@site/docs/playbooks/README.md",
              "sourceDirName": "playbooks",
              "slug": "/playbooks/",
              "permalink": "/playbooks/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Get started with playbooks that outline how to use Tableland SQL and other common concepts.",
                "keywords": [
                  "playbooks"
                ]
              },
              "sidebar": "playbooks",
              "next": {
                "title": "Get started",
                "permalink": "/playbooks/sql/"
              }
            },
            {
              "unversionedId": "playbooks/sql/access-control",
              "id": "playbooks/sql/access-control",
              "title": "Grant & revoke access",
              "description": "Grant or revoke access to table writes using SQL statements.",
              "source": "@site/docs/playbooks/sql/access-control.md",
              "sourceDirName": "playbooks/sql",
              "slug": "/playbooks/sql/access-control",
              "permalink": "/playbooks/sql/access-control",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/sql/access-control.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Grant & revoke access",
                "sidebar_label": "Access control",
                "description": "Grant or revoke access to table writes using SQL statements.",
                "keywords": [
                  "grant",
                  "revoke",
                  "access control"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "SQL functions",
                "permalink": "/playbooks/sql/functions"
              },
              "next": {
                "title": "Auto-incrementing",
                "permalink": "/playbooks/sql/incrementing-values"
              }
            },
            {
              "unversionedId": "playbooks/sql/composing-data",
              "id": "playbooks/sql/composing-data",
              "title": "Composing data across tables",
              "description": "Extract data across multiple tables by joining them together.",
              "source": "@site/docs/playbooks/sql/composing-data.md",
              "sourceDirName": "playbooks/sql",
              "slug": "/playbooks/sql/composing-data",
              "permalink": "/playbooks/sql/composing-data",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/sql/composing-data.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Composing data across tables",
                "sidebar_label": "Composing data",
                "description": "Extract data across multiple tables by joining them together.",
                "keywords": [
                  "reads",
                  "reading data"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "Writing data",
                "permalink": "/playbooks/sql/write"
              },
              "next": {
                "title": "SQL functions",
                "permalink": "/playbooks/sql/functions"
              }
            },
            {
              "unversionedId": "playbooks/sql/create",
              "id": "playbooks/sql/create",
              "title": "Creating a table",
              "description": "Define a set of columns, their types, and constraints for a table.",
              "source": "@site/docs/playbooks/sql/create.md",
              "sourceDirName": "playbooks/sql",
              "slug": "/playbooks/sql/create",
              "permalink": "/playbooks/sql/create",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/sql/create.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Creating a table",
                "description": "Define a set of columns, their types, and constraints for a table.",
                "keywords": [
                  "create a table"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "Get started",
                "permalink": "/playbooks/sql/"
              },
              "next": {
                "title": "Reading data",
                "permalink": "/playbooks/sql/read"
              }
            },
            {
              "unversionedId": "playbooks/sql/functions",
              "id": "playbooks/sql/functions",
              "title": "SQL functions",
              "description": "Use built-in SQL functions to transform query data.",
              "source": "@site/docs/playbooks/sql/functions.md",
              "sourceDirName": "playbooks/sql",
              "slug": "/playbooks/sql/functions",
              "permalink": "/playbooks/sql/functions",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/sql/functions.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SQL functions",
                "description": "Use built-in SQL functions to transform query data.",
                "keywords": [
                  "sql functions"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "Composing data",
                "permalink": "/playbooks/sql/composing-data"
              },
              "next": {
                "title": "Access control",
                "permalink": "/playbooks/sql/access-control"
              }
            },
            {
              "unversionedId": "playbooks/sql/incrementing-values",
              "id": "playbooks/sql/incrementing-values",
              "title": "Incrementing values automatically",
              "description": "Tableland allows developers to automatically increment a cell, with some restrictions.",
              "source": "@site/docs/playbooks/sql/incrementing-values.md",
              "sourceDirName": "playbooks/sql",
              "slug": "/playbooks/sql/incrementing-values",
              "permalink": "/playbooks/sql/incrementing-values",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/sql/incrementing-values.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Incrementing values automatically",
                "sidebar_label": "Auto-incrementing",
                "description": "Tableland allows developers to automatically increment a cell, with some restrictions.",
                "keywords": [
                  "auto-increment",
                  "autoincrement"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "Access control",
                "permalink": "/playbooks/sql/access-control"
              },
              "next": {
                "title": "NFT metadata",
                "permalink": "/playbooks/walkthroughs/nft-metadata"
              }
            },
            {
              "unversionedId": "playbooks/sql/read",
              "id": "playbooks/sql/read",
              "title": "Reading a table's data",
              "description": "Extract data from a table and organize it however you'd like.",
              "source": "@site/docs/playbooks/sql/read.md",
              "sourceDirName": "playbooks/sql",
              "slug": "/playbooks/sql/read",
              "permalink": "/playbooks/sql/read",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/sql/read.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Reading a table's data",
                "sidebar_label": "Reading data",
                "description": "Extract data from a table and organize it however you'd like.",
                "keywords": [
                  "reads",
                  "reading data"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "Creating a table",
                "permalink": "/playbooks/sql/create"
              },
              "next": {
                "title": "Writing data",
                "permalink": "/playbooks/sql/write"
              }
            },
            {
              "unversionedId": "playbooks/sql/README",
              "id": "playbooks/sql/README",
              "title": "Get started",
              "description": "Dive into SQL and start using it to build web3 applications.",
              "source": "@site/docs/playbooks/sql/README.md",
              "sourceDirName": "playbooks/sql",
              "slug": "/playbooks/sql/",
              "permalink": "/playbooks/sql/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/sql/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Get started",
                "description": "Dive into SQL and start using it to build web3 applications.",
                "keywords": [
                  "sql"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "Overview",
                "permalink": "/playbooks/"
              },
              "next": {
                "title": "Creating a table",
                "permalink": "/playbooks/sql/create"
              }
            },
            {
              "unversionedId": "playbooks/sql/write",
              "id": "playbooks/sql/write",
              "title": "Writing table data",
              "description": "Mutate values through table inserts (plus upserts), updates, and deletes.",
              "source": "@site/docs/playbooks/sql/write.md",
              "sourceDirName": "playbooks/sql",
              "slug": "/playbooks/sql/write",
              "permalink": "/playbooks/sql/write",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/sql/write.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Writing table data",
                "sidebar_label": "Writing data",
                "description": "Mutate values through table inserts (plus upserts), updates, and deletes.",
                "keywords": [
                  "sql write"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "Reading data",
                "permalink": "/playbooks/sql/read"
              },
              "next": {
                "title": "Composing data",
                "permalink": "/playbooks/sql/composing-data"
              }
            },
            {
              "unversionedId": "playbooks/walkthroughs/key-value",
              "id": "playbooks/walkthroughs/key-value",
              "title": "Key-value store",
              "description": "Store arbitrary key-value data in a table.",
              "source": "@site/docs/playbooks/walkthroughs/key-value.md",
              "sourceDirName": "playbooks/walkthroughs",
              "slug": "/playbooks/walkthroughs/key-value",
              "permalink": "/playbooks/walkthroughs/key-value",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/walkthroughs/key-value.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Key-value store",
                "description": "Store arbitrary key-value data in a table.",
                "keywords": [
                  "key value store"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "NFT metadata",
                "permalink": "/playbooks/walkthroughs/nft-metadata"
              },
              "next": {
                "title": "FAQs",
                "permalink": "/playbooks/walkthroughs/sql-faqs"
              }
            },
            {
              "unversionedId": "playbooks/walkthroughs/nft-metadata",
              "id": "playbooks/walkthroughs/nft-metadata",
              "title": "Crafting NFT metadata",
              "description": "Turn table data into JSON objects and array for ERC721 compliant metadata.",
              "source": "@site/docs/playbooks/walkthroughs/nft-metadata.md",
              "sourceDirName": "playbooks/walkthroughs",
              "slug": "/playbooks/walkthroughs/nft-metadata",
              "permalink": "/playbooks/walkthroughs/nft-metadata",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/walkthroughs/nft-metadata.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Crafting NFT metadata",
                "sidebar_label": "NFT metadata",
                "description": "Turn table data into JSON objects and array for ERC721 compliant metadata.",
                "keywords": [
                  "nft metadata",
                  "erc721 metadata",
                  "json metadata"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "Auto-incrementing",
                "permalink": "/playbooks/sql/incrementing-values"
              },
              "next": {
                "title": "Key-value store",
                "permalink": "/playbooks/walkthroughs/key-value"
              }
            },
            {
              "unversionedId": "playbooks/walkthroughs/sql-faqs",
              "id": "playbooks/walkthroughs/sql-faqs",
              "title": "SQL FAQs",
              "description": "Check out helpful pointers when dealing with SQL.",
              "source": "@site/docs/playbooks/walkthroughs/sql-faqs.md",
              "sourceDirName": "playbooks/walkthroughs",
              "slug": "/playbooks/walkthroughs/sql-faqs",
              "permalink": "/playbooks/walkthroughs/sql-faqs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/playbooks/walkthroughs/sql-faqs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SQL FAQs",
                "sidebar_label": "FAQs",
                "description": "Check out helpful pointers when dealing with SQL.",
                "keywords": [
                  "grant",
                  "revoke",
                  "access control"
                ]
              },
              "sidebar": "playbooks",
              "previous": {
                "title": "Key-value store",
                "permalink": "/playbooks/walkthroughs/key-value"
              }
            },
            {
              "unversionedId": "quickstarts/api-quickstart",
              "id": "quickstarts/api-quickstart",
              "title": "Gateway API quickstart",
              "description": "Learn how to read table data or retrieve relevant validator information.",
              "source": "@site/docs/quickstarts/api-quickstart.md",
              "sourceDirName": "quickstarts",
              "slug": "/quickstarts/api-quickstart",
              "permalink": "/quickstarts/api-quickstart",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/quickstarts/api-quickstart.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Gateway API quickstart",
                "sidebar_label": "Gateway API",
                "description": "Learn how to read table data or retrieve relevant validator information."
              },
              "sidebar": "quickstarts",
              "previous": {
                "title": "CLI",
                "permalink": "/quickstarts/cli-quickstart"
              },
              "next": {
                "title": "Local Tableland",
                "permalink": "/quickstarts/local-tableland"
              }
            },
            {
              "unversionedId": "quickstarts/cli-quickstart",
              "id": "quickstarts/cli-quickstart",
              "title": "CLI quickstart",
              "description": "Learn how to create a table, add some sample data, and query the data using the CLI.",
              "source": "@site/docs/quickstarts/cli-quickstart.md",
              "sourceDirName": "quickstarts",
              "slug": "/quickstarts/cli-quickstart",
              "permalink": "/quickstarts/cli-quickstart",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/quickstarts/cli-quickstart.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "CLI quickstart",
                "sidebar_label": "CLI",
                "description": "Learn how to create a table, add some sample data, and query the data using the CLI."
              },
              "sidebar": "quickstarts",
              "previous": {
                "title": "Smart contracts",
                "permalink": "/quickstarts/smart-contract-quickstart"
              },
              "next": {
                "title": "Gateway API",
                "permalink": "/quickstarts/api-quickstart"
              }
            },
            {
              "unversionedId": "quickstarts/hardhat",
              "id": "quickstarts/hardhat",
              "title": "Hardhat",
              "description": "Use Tableland smart contracts with Hardhat.",
              "source": "@site/docs/quickstarts/hardhat.md",
              "sourceDirName": "quickstarts",
              "slug": "/quickstarts/hardhat",
              "permalink": "/quickstarts/hardhat",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/quickstarts/hardhat.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Hardhat",
                "description": "Use Tableland smart contracts with Hardhat.",
                "keywords": [
                  "hardhat"
                ]
              },
              "sidebar": "quickstarts",
              "previous": {
                "title": "wagmi",
                "permalink": "/quickstarts/wagmi"
              }
            },
            {
              "unversionedId": "quickstarts/local-tableland",
              "id": "quickstarts/local-tableland",
              "title": "Local development & testing",
              "description": "Build with Local Tableland to quickly iterate with Tableland using a local environment.",
              "source": "@site/docs/quickstarts/local-tableland.md",
              "sourceDirName": "quickstarts",
              "slug": "/quickstarts/local-tableland",
              "permalink": "/quickstarts/local-tableland",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/quickstarts/local-tableland.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Local development & testing",
                "sidebar_label": "Local Tableland",
                "description": "Build with Local Tableland to quickly iterate with Tableland using a local environment.",
                "keywords": [
                  "local tableland",
                  "hardhat"
                ]
              },
              "sidebar": "quickstarts",
              "previous": {
                "title": "Gateway API",
                "permalink": "/quickstarts/api-quickstart"
              },
              "next": {
                "title": "React",
                "permalink": "/quickstarts/reactjs"
              }
            },
            {
              "unversionedId": "quickstarts/reactjs",
              "id": "quickstarts/reactjs",
              "title": "Use Tableland with React",
              "description": "Quickly set up a React application with Tableland via an account and database connection.",
              "source": "@site/docs/quickstarts/reactjs.md",
              "sourceDirName": "quickstarts",
              "slug": "/quickstarts/reactjs",
              "permalink": "/quickstarts/reactjs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/quickstarts/reactjs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Use Tableland with React",
                "sidebar_label": "React",
                "description": "Quickly set up a React application with Tableland via an account and database connection.",
                "keywords": [
                  "quickstart",
                  "quickstarts",
                  "react"
                ]
              },
              "sidebar": "quickstarts",
              "previous": {
                "title": "Local Tableland",
                "permalink": "/quickstarts/local-tableland"
              },
              "next": {
                "title": "wagmi",
                "permalink": "/quickstarts/wagmi"
              }
            },
            {
              "unversionedId": "quickstarts/README",
              "id": "quickstarts/README",
              "title": "Overview",
              "description": "Make sure you're ready to start building by properly setting up your development environment.",
              "source": "@site/docs/quickstarts/README.md",
              "sourceDirName": "quickstarts",
              "slug": "/quickstarts/",
              "permalink": "/quickstarts/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/quickstarts/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Make sure you're ready to start building by properly setting up your development environment."
              },
              "sidebar": "quickstarts",
              "next": {
                "title": "SDK",
                "permalink": "/quickstarts/sdk-quickstart"
              }
            },
            {
              "unversionedId": "quickstarts/sdk-quickstart",
              "id": "quickstarts/sdk-quickstart",
              "title": "SDK quickstart",
              "description": "Learn how to create a table, add some sample data, and query the data using the SDK.",
              "source": "@site/docs/quickstarts/sdk-quickstart.md",
              "sourceDirName": "quickstarts",
              "slug": "/quickstarts/sdk-quickstart",
              "permalink": "/quickstarts/sdk-quickstart",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/quickstarts/sdk-quickstart.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SDK quickstart",
                "sidebar_label": "SDK",
                "description": "Learn how to create a table, add some sample data, and query the data using the SDK."
              },
              "sidebar": "quickstarts",
              "previous": {
                "title": "Overview",
                "permalink": "/quickstarts/"
              },
              "next": {
                "title": "Smart contracts",
                "permalink": "/quickstarts/smart-contract-quickstart"
              }
            },
            {
              "unversionedId": "quickstarts/smart-contract-quickstart",
              "id": "quickstarts/smart-contract-quickstart",
              "title": "Smart contract quickstart",
              "description": "Learn how to create a table and insert add some sample data using the Solidity.",
              "source": "@site/docs/quickstarts/smart-contract-quickstart.md",
              "sourceDirName": "quickstarts",
              "slug": "/quickstarts/smart-contract-quickstart",
              "permalink": "/quickstarts/smart-contract-quickstart",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/quickstarts/smart-contract-quickstart.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Smart contract quickstart",
                "sidebar_label": "Smart contracts",
                "description": "Learn how to create a table and insert add some sample data using the Solidity."
              },
              "sidebar": "quickstarts",
              "previous": {
                "title": "SDK",
                "permalink": "/quickstarts/sdk-quickstart"
              },
              "next": {
                "title": "CLI",
                "permalink": "/quickstarts/cli-quickstart"
              }
            },
            {
              "unversionedId": "quickstarts/wagmi",
              "id": "quickstarts/wagmi",
              "title": "Use Tableland with wagmi",
              "description": "Quickly add and use wagmi with Tableland and React.",
              "source": "@site/docs/quickstarts/wagmi.md",
              "sourceDirName": "quickstarts",
              "slug": "/quickstarts/wagmi",
              "permalink": "/quickstarts/wagmi",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/quickstarts/wagmi.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Use Tableland with wagmi",
                "sidebar_label": "wagmi",
                "description": "Quickly add and use wagmi with Tableland and React.",
                "keywords": [
                  "quickstart",
                  "quickstarts",
                  "react"
                ]
              },
              "sidebar": "quickstarts",
              "previous": {
                "title": "React",
                "permalink": "/quickstarts/reactjs"
              },
              "next": {
                "title": "Hardhat",
                "permalink": "/quickstarts/hardhat"
              }
            },
            {
              "unversionedId": "sdk/core/batching",
              "id": "sdk/core/batching",
              "title": "Batching statement & operations",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/sdk/core/batching.md",
              "sourceDirName": "sdk/core",
              "slug": "/sdk/core/batching",
              "permalink": "/sdk/core/batching",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/core/batching.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Batching statement & operations",
                "sidebar_label": "Batching",
                "description": "Get up an running with the Tableland SDK."
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Query statement methods",
                "permalink": "/sdk/core/query-statement-methods"
              },
              "next": {
                "title": "Error handling",
                "permalink": "/sdk/core/timeouts-error-handling"
              }
            },
            {
              "unversionedId": "sdk/core/prepared-statements",
              "id": "sdk/core/prepared-statements",
              "title": "Prepared statements",
              "description": "Use a single method for all table creates, reads, and writes.",
              "source": "@site/docs/sdk/core/prepared-statements.md",
              "sourceDirName": "sdk/core",
              "slug": "/sdk/core/prepared-statements",
              "permalink": "/sdk/core/prepared-statements",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/core/prepared-statements.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Prepared statements",
                "description": "Use a single method for all table creates, reads, and writes.",
                "keywords": [
                  "prepare",
                  "prepared statements"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Signers",
                "permalink": "/sdk/core/signers"
              },
              "next": {
                "title": "Query statement methods",
                "permalink": "/sdk/core/query-statement-methods"
              }
            },
            {
              "unversionedId": "sdk/core/query-statement-methods",
              "id": "sdk/core/query-statement-methods",
              "title": "Query statement methods",
              "description": "Mutate your table values with additional access control.",
              "source": "@site/docs/sdk/core/query-statement-methods.md",
              "sourceDirName": "sdk/core",
              "slug": "/sdk/core/query-statement-methods",
              "permalink": "/sdk/core/query-statement-methods",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/core/query-statement-methods.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Query statement methods",
                "description": "Mutate your table values with additional access control.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Prepared statements",
                "permalink": "/sdk/core/prepared-statements"
              },
              "next": {
                "title": "Batching",
                "permalink": "/sdk/core/batching"
              }
            },
            {
              "unversionedId": "sdk/core/README",
              "id": "sdk/core/README",
              "title": "Get started",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/sdk/core/README.md",
              "sourceDirName": "sdk/core",
              "slug": "/sdk/core/",
              "permalink": "/sdk/core/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/core/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Get started",
                "description": "Get up an running with the Tableland SDK.",
                "keywords": [
                  "SQL query",
                  "Tableland SDK"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Overview",
                "permalink": "/sdk/"
              },
              "next": {
                "title": "Signers",
                "permalink": "/sdk/core/signers"
              }
            },
            {
              "unversionedId": "sdk/core/registry-api",
              "id": "sdk/core/registry-api",
              "title": "Registry API",
              "description": "Use the Registry API for directly calling the Tableland registry smart contract.",
              "source": "@site/docs/sdk/core/registry-api.md",
              "sourceDirName": "sdk/core",
              "slug": "/sdk/core/registry-api",
              "permalink": "/sdk/core/registry-api",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/core/registry-api.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Registry API",
                "description": "Use the Registry API for directly calling the Tableland registry smart contract."
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Validator API",
                "permalink": "/sdk/core/validator-api"
              },
              "next": {
                "title": "Type conversion",
                "permalink": "/sdk/reference/type-conversion"
              }
            },
            {
              "unversionedId": "sdk/core/signers",
              "id": "sdk/core/signers",
              "title": "Signers",
              "description": "Access the Tableland network by first connecting to the base chain.",
              "source": "@site/docs/sdk/core/signers.md",
              "sourceDirName": "sdk/core",
              "slug": "/sdk/core/signers",
              "permalink": "/sdk/core/signers",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/core/signers.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Signers",
                "description": "Access the Tableland network by first connecting to the base chain.",
                "keywords": [
                  "read table",
                  "SQL query"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Get started",
                "permalink": "/sdk/core/"
              },
              "next": {
                "title": "Prepared statements",
                "permalink": "/sdk/core/prepared-statements"
              }
            },
            {
              "unversionedId": "sdk/core/timeouts-error-handling",
              "id": "sdk/core/timeouts-error-handling",
              "title": "Error handling",
              "description": "Review SDK error handling setup and what types of messages will bubble up.",
              "source": "@site/docs/sdk/core/timeouts-error-handling.md",
              "sourceDirName": "sdk/core",
              "slug": "/sdk/core/timeouts-error-handling",
              "permalink": "/sdk/core/timeouts-error-handling",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/core/timeouts-error-handling.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Error handling",
                "description": "Review SDK error handling setup and what types of messages will bubble up.",
                "keywords": [
                  "error",
                  "error handling"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Batching",
                "permalink": "/sdk/core/batching"
              },
              "next": {
                "title": "Validator API",
                "permalink": "/sdk/core/validator-api"
              }
            },
            {
              "unversionedId": "sdk/core/validator-api",
              "id": "sdk/core/validator-api",
              "title": "Validator API",
              "description": "The Validator API allows for direct access to a Tableland Validator node. This does not involve any on-chain actions and directly connects to a validator node.",
              "source": "@site/docs/sdk/core/validator-api.md",
              "sourceDirName": "sdk/core",
              "slug": "/sdk/core/validator-api",
              "permalink": "/sdk/core/validator-api",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/core/validator-api.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Validator API",
                "description": "The Validator API allows for direct access to a Tableland Validator node. This does not involve any on-chain actions and directly connects to a validator node.",
                "keywords": [
                  "validator api"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Error handling",
                "permalink": "/sdk/core/timeouts-error-handling"
              },
              "next": {
                "title": "Registry API",
                "permalink": "/sdk/core/registry-api"
              }
            },
            {
              "unversionedId": "sdk/README",
              "id": "sdk/README",
              "title": "Overview",
              "description": "Use the Tableland SDK in your JavaScript / TypeScript projects, with full Cloudflare D1 client compatibility.",
              "source": "@site/docs/sdk/README.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/",
              "permalink": "/sdk/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Use the Tableland SDK in your JavaScript / TypeScript projects, with full Cloudflare D1 client compatibility.",
                "keywords": [
                  "sdk",
                  "javascript",
                  "typescript",
                  "web app",
                  "mobile app"
                ]
              },
              "sidebar": "sdk",
              "next": {
                "title": "Get started",
                "permalink": "/sdk/core/"
              }
            },
            {
              "unversionedId": "sdk/reference/orm",
              "id": "sdk/reference/orm",
              "title": "ORM support",
              "description": "Simplify working with data and writing SQL statements using an Object-Relational Mapping (ORM) tool.",
              "source": "@site/docs/sdk/reference/orm.md",
              "sourceDirName": "sdk/reference",
              "slug": "/sdk/reference/orm",
              "permalink": "/sdk/reference/orm",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/reference/orm.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "ORM support",
                "description": "Simplify working with data and writing SQL statements using an Object-Relational Mapping (ORM) tool.",
                "keywords": [
                  "orm",
                  "object relational mapping"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Testing",
                "permalink": "/sdk/reference/testing"
              }
            },
            {
              "unversionedId": "sdk/reference/sdk-faqs",
              "id": "sdk/reference/sdk-faqs",
              "title": "SDK FAQs",
              "description": "Review commonly asked questions about the Tableland SDK.",
              "source": "@site/docs/sdk/reference/sdk-faqs.md",
              "sourceDirName": "sdk/reference",
              "slug": "/sdk/reference/sdk-faqs",
              "permalink": "/sdk/reference/sdk-faqs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/reference/sdk-faqs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SDK FAQs",
                "sidebar_label": "FAQs",
                "description": "Review commonly asked questions about the Tableland SDK.",
                "keywords": [
                  "faq",
                  "faqs"
                ]
              }
            },
            {
              "unversionedId": "sdk/reference/testing",
              "id": "sdk/reference/testing",
              "title": "Testing",
              "description": "Learn how to create test scripts that use Local Tableland under the hood.",
              "source": "@site/docs/sdk/reference/testing.md",
              "sourceDirName": "sdk/reference",
              "slug": "/sdk/reference/testing",
              "permalink": "/sdk/reference/testing",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/reference/testing.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Testing",
                "description": "Learn how to create test scripts that use Local Tableland under the hood."
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Type conversion",
                "permalink": "/sdk/reference/type-conversion"
              },
              "next": {
                "title": "ORM support",
                "permalink": "/sdk/reference/orm"
              }
            },
            {
              "unversionedId": "sdk/reference/type-conversion",
              "id": "sdk/reference/type-conversion",
              "title": "Type conversion",
              "description": "Review converting from JavaScript to SQL types.",
              "source": "@site/docs/sdk/reference/type-conversion.md",
              "sourceDirName": "sdk/reference",
              "slug": "/sdk/reference/type-conversion",
              "permalink": "/sdk/reference/type-conversion",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/reference/type-conversion.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Type conversion",
                "description": "Review converting from JavaScript to SQL types.",
                "keywords": [
                  "type conversion"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Registry API",
                "permalink": "/sdk/core/registry-api"
              },
              "next": {
                "title": "Testing",
                "permalink": "/sdk/reference/testing"
              }
            },
            {
              "unversionedId": "smart-contracts/contract-owned-tables",
              "id": "smart-contracts/contract-owned-tables",
              "title": "Contract owned tables",
              "description": "Learn how to create tables from and owned by a smart contract.",
              "source": "@site/docs/smart-contracts/contract-owned-tables.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/contract-owned-tables",
              "permalink": "/smart-contracts/contract-owned-tables",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/contract-owned-tables.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Contract owned tables",
                "description": "Learn how to create tables from and owned by a smart contract.",
                "keywords": [
                  "create table"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Get started",
                "permalink": "/smart-contracts/get-started"
              },
              "next": {
                "title": "Configure write access",
                "permalink": "/smart-contracts/controller/"
              }
            },
            {
              "unversionedId": "smart-contracts/controller/contract-anatomy",
              "id": "smart-contracts/controller/contract-anatomy",
              "title": "Controller contract anatomy",
              "description": "Dive into into the Tableland controller contract's design.",
              "source": "@site/docs/smart-contracts/controller/contract-anatomy.md",
              "sourceDirName": "smart-contracts/controller",
              "slug": "/smart-contracts/controller/contract-anatomy",
              "permalink": "/smart-contracts/controller/contract-anatomy",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/controller/contract-anatomy.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Controller contract anatomy",
                "sidebar_label": "Controller contract",
                "description": "Dive into into the Tableland controller contract's design."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Configure write access",
                "permalink": "/smart-contracts/controller/"
              },
              "next": {
                "title": "Creating controllers",
                "permalink": "/smart-contracts/controller/creating-controllers"
              }
            },
            {
              "unversionedId": "smart-contracts/controller/creating-controllers",
              "id": "smart-contracts/controller/creating-controllers",
              "title": "Creating controllers",
              "description": "Understand how to create a controller contract.",
              "source": "@site/docs/smart-contracts/controller/creating-controllers.md",
              "sourceDirName": "smart-contracts/controller",
              "slug": "/smart-contracts/controller/creating-controllers",
              "permalink": "/smart-contracts/controller/creating-controllers",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/controller/creating-controllers.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Creating controllers",
                "description": "Understand how to create a controller contract."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Controller contract",
                "permalink": "/smart-contracts/controller/contract-anatomy"
              },
              "next": {
                "title": "Setting controllers",
                "permalink": "/smart-contracts/controller/setting-controllers"
              }
            },
            {
              "unversionedId": "smart-contracts/controller/README",
              "id": "smart-contracts/controller/README",
              "title": "Configure table write access",
              "description": "Everything you need to know to control access for programmable tables.",
              "source": "@site/docs/smart-contracts/controller/README.md",
              "sourceDirName": "smart-contracts/controller",
              "slug": "/smart-contracts/controller/",
              "permalink": "/smart-contracts/controller/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/controller/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Configure table write access",
                "sidebar_label": "Configure write access",
                "description": "Everything you need to know to control access for programmable tables."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Contract owned tables",
                "permalink": "/smart-contracts/contract-owned-tables"
              },
              "next": {
                "title": "Controller contract",
                "permalink": "/smart-contracts/controller/contract-anatomy"
              }
            },
            {
              "unversionedId": "smart-contracts/controller/setting-controllers",
              "id": "smart-contracts/controller/setting-controllers",
              "title": "Setting controllers",
              "description": "Understand how to set or unset a controller contract.",
              "source": "@site/docs/smart-contracts/controller/setting-controllers.md",
              "sourceDirName": "smart-contracts/controller",
              "slug": "/smart-contracts/controller/setting-controllers",
              "permalink": "/smart-contracts/controller/setting-controllers",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/controller/setting-controllers.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Setting controllers",
                "description": "Understand how to set or unset a controller contract."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Creating controllers",
                "permalink": "/smart-contracts/controller/creating-controllers"
              },
              "next": {
                "title": "Using SQL helpers",
                "permalink": "/smart-contracts/using-sql-helpers"
              }
            },
            {
              "unversionedId": "smart-contracts/deployed-contracts",
              "id": "smart-contracts/deployed-contracts",
              "title": "Deployed contracts",
              "description": "A list of deployed Tableland registry contracts for each supported chain.",
              "source": "@site/docs/smart-contracts/deployed-contracts.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/deployed-contracts",
              "permalink": "/smart-contracts/deployed-contracts",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/deployed-contracts.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Deployed contracts",
                "description": "A list of deployed Tableland registry contracts for each supported chain.",
                "keywords": [
                  "chains",
                  "contract"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Error handling",
                "permalink": "/smart-contracts/error-handling"
              },
              "next": {
                "title": "Using Remix",
                "permalink": "/smart-contracts/using-remix"
              }
            },
            {
              "unversionedId": "smart-contracts/error-handling",
              "id": "smart-contracts/error-handling",
              "title": "Error handling",
              "description": "Look at some error handling strategies when writing on-chain SQL.",
              "source": "@site/docs/smart-contracts/error-handling.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/error-handling",
              "permalink": "/smart-contracts/error-handling",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/error-handling.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Error handling",
                "description": "Look at some error handling strategies when writing on-chain SQL.",
                "keywords": [
                  "tableland smart contracts"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Solidity to SQL types",
                "permalink": "/smart-contracts/solidity-to-sql-types"
              },
              "next": {
                "title": "Deployed contracts",
                "permalink": "/smart-contracts/deployed-contracts"
              }
            },
            {
              "unversionedId": "smart-contracts/examples/allow-all-controller",
              "id": "smart-contracts/examples/allow-all-controller",
              "title": "Allow all controller",
              "description": "Provision access so that any account can perform any action on a table.",
              "source": "@site/docs/smart-contracts/examples/allow-all-controller.md",
              "sourceDirName": "smart-contracts/examples",
              "slug": "/smart-contracts/examples/allow-all-controller",
              "permalink": "/smart-contracts/examples/allow-all-controller",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/examples/allow-all-controller.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Allow all controller",
                "description": "Provision access so that any account can perform any action on a table."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Example contracts",
                "permalink": "/smart-contracts/examples/"
              },
              "next": {
                "title": "Complex controller",
                "permalink": "/smart-contracts/examples/complex-controller"
              }
            },
            {
              "unversionedId": "smart-contracts/examples/complex-controller",
              "id": "smart-contracts/examples/complex-controller",
              "title": "Complex controller",
              "description": "Create a controller with balance and token ownership checks.",
              "source": "@site/docs/smart-contracts/examples/complex-controller.md",
              "sourceDirName": "smart-contracts/examples",
              "slug": "/smart-contracts/examples/complex-controller",
              "permalink": "/smart-contracts/examples/complex-controller",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/examples/complex-controller.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Complex controller",
                "description": "Create a controller with balance and token ownership checks."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Allow all controller",
                "permalink": "/smart-contracts/examples/allow-all-controller"
              },
              "next": {
                "title": "Raw controller",
                "permalink": "/smart-contracts/examples/raw-controller"
              }
            },
            {
              "unversionedId": "smart-contracts/examples/create-from-contract",
              "id": "smart-contracts/examples/create-from-contract",
              "title": "Create from contract",
              "description": "Create a table from a contract.",
              "source": "@site/docs/smart-contracts/examples/create-from-contract.md",
              "sourceDirName": "smart-contracts/examples",
              "slug": "/smart-contracts/examples/create-from-contract",
              "permalink": "/smart-contracts/examples/create-from-contract",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/examples/create-from-contract.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Create from contract",
                "description": "Create a table from a contract."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Gated voting",
                "permalink": "/smart-contracts/examples/gated-voting"
              },
              "next": {
                "title": "Serve NFT metadata",
                "permalink": "/smart-contracts/serving-nft-metadata"
              }
            },
            {
              "unversionedId": "smart-contracts/examples/gated-voting",
              "id": "smart-contracts/examples/gated-voting",
              "title": "Gated voting",
              "description": "Create a contract that gates writes to a voting table based on ERC721 token ownership.",
              "source": "@site/docs/smart-contracts/examples/gated-voting.md",
              "sourceDirName": "smart-contracts/examples",
              "slug": "/smart-contracts/examples/gated-voting",
              "permalink": "/smart-contracts/examples/gated-voting",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/examples/gated-voting.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Gated voting",
                "description": "Create a contract that gates writes to a voting table based on ERC721 token ownership."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Raw controller",
                "permalink": "/smart-contracts/examples/raw-controller"
              },
              "next": {
                "title": "Create from contract",
                "permalink": "/smart-contracts/examples/create-from-contract"
              }
            },
            {
              "unversionedId": "smart-contracts/examples/raw-controller",
              "id": "smart-contracts/examples/raw-controller",
              "title": "Raw controller",
              "description": "Create an raw Tableland controller.",
              "source": "@site/docs/smart-contracts/examples/raw-controller.md",
              "sourceDirName": "smart-contracts/examples",
              "slug": "/smart-contracts/examples/raw-controller",
              "permalink": "/smart-contracts/examples/raw-controller",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/examples/raw-controller.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Raw controller",
                "description": "Create an raw Tableland controller."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Complex controller",
                "permalink": "/smart-contracts/examples/complex-controller"
              },
              "next": {
                "title": "Gated voting",
                "permalink": "/smart-contracts/examples/gated-voting"
              }
            },
            {
              "unversionedId": "smart-contracts/examples/README",
              "id": "smart-contracts/examples/README",
              "title": "Example contracts",
              "description": "Check out any of the starter contracts for Tableland controllers or registry interactions.",
              "source": "@site/docs/smart-contracts/examples/README.md",
              "sourceDirName": "smart-contracts/examples",
              "slug": "/smart-contracts/examples/",
              "permalink": "/smart-contracts/examples/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/examples/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Example contracts",
                "description": "Check out any of the starter contracts for Tableland controllers or registry interactions.",
                "keywords": [
                  "controllers",
                  "examples"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Using SQL helpers",
                "permalink": "/smart-contracts/using-sql-helpers"
              },
              "next": {
                "title": "Allow all controller",
                "permalink": "/smart-contracts/examples/allow-all-controller"
              }
            },
            {
              "unversionedId": "smart-contracts/get-started",
              "id": "smart-contracts/get-started",
              "title": "Get started",
              "description": "Get up an running with smart contracts and Tableland.",
              "source": "@site/docs/smart-contracts/get-started.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/get-started",
              "permalink": "/smart-contracts/get-started",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/get-started.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Get started",
                "description": "Get up an running with smart contracts and Tableland.",
                "keywords": [
                  "tableland smart contracts"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Overview",
                "permalink": "/smart-contracts/"
              },
              "next": {
                "title": "Contract owned tables",
                "permalink": "/smart-contracts/contract-owned-tables"
              }
            },
            {
              "unversionedId": "smart-contracts/immutable-table",
              "id": "smart-contracts/immutable-table",
              "title": "Create an immutable table",
              "description": "Permanently freeze a table's data by sending it to the dead address.",
              "source": "@site/docs/smart-contracts/immutable-table.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/immutable-table",
              "permalink": "/smart-contracts/immutable-table",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/immutable-table.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Create an immutable table",
                "description": "Permanently freeze a table's data by sending it to the dead address.",
                "keywords": [
                  "read table",
                  "SQL query"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Serve NFT metadata",
                "permalink": "/smart-contracts/serving-nft-metadata"
              },
              "next": {
                "title": "URI encoding",
                "permalink": "/smart-contracts/uri-encoding"
              }
            },
            {
              "unversionedId": "smart-contracts/README",
              "id": "smart-contracts/README",
              "title": "Overview",
              "description": "Interact with Tableland using smart contracts.",
              "source": "@site/docs/smart-contracts/README.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/",
              "permalink": "/smart-contracts/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Interact with Tableland using smart contracts."
              },
              "sidebar": "smartContracts",
              "next": {
                "title": "Get started",
                "permalink": "/smart-contracts/get-started"
              }
            },
            {
              "unversionedId": "smart-contracts/serving-nft-metadata",
              "id": "smart-contracts/serving-nft-metadata",
              "title": "Serve NFT metadata from smart contracts",
              "description": "Learn how to write, format, and deploy SQL in your smart contracts to produce NFT JSON metadata.",
              "source": "@site/docs/smart-contracts/serving-nft-metadata.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/serving-nft-metadata",
              "permalink": "/smart-contracts/serving-nft-metadata",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/serving-nft-metadata.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Serve NFT metadata from smart contracts",
                "sidebar_label": "Serve NFT metadata",
                "description": "Learn how to write, format, and deploy SQL in your smart contracts to produce NFT JSON metadata.",
                "keywords": [
                  "create table"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Create from contract",
                "permalink": "/smart-contracts/examples/create-from-contract"
              },
              "next": {
                "title": "Create an immutable table",
                "permalink": "/smart-contracts/immutable-table"
              }
            },
            {
              "unversionedId": "smart-contracts/solidity-to-sql-types",
              "id": "smart-contracts/solidity-to-sql-types",
              "title": "Solidity to SQL types",
              "description": "Review the best practices for Solidity types and SQL compatibility.",
              "source": "@site/docs/smart-contracts/solidity-to-sql-types.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/solidity-to-sql-types",
              "permalink": "/smart-contracts/solidity-to-sql-types",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/solidity-to-sql-types.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Solidity to SQL types",
                "description": "Review the best practices for Solidity types and SQL compatibility.",
                "keywords": [
                  "create table"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "URI encoding",
                "permalink": "/smart-contracts/uri-encoding"
              },
              "next": {
                "title": "Error handling",
                "permalink": "/smart-contracts/error-handling"
              }
            },
            {
              "unversionedId": "smart-contracts/uri-encoding",
              "id": "smart-contracts/uri-encoding",
              "title": "URI encoding",
              "description": "SQL queries written at the query endpoint must have the proper encoding.",
              "source": "@site/docs/smart-contracts/uri-encoding.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/uri-encoding",
              "permalink": "/smart-contracts/uri-encoding",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/uri-encoding.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "URI encoding",
                "description": "SQL queries written at the query endpoint must have the proper encoding.",
                "keywords": [
                  "uri encoding"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Create an immutable table",
                "permalink": "/smart-contracts/immutable-table"
              },
              "next": {
                "title": "Solidity to SQL types",
                "permalink": "/smart-contracts/solidity-to-sql-types"
              }
            },
            {
              "unversionedId": "smart-contracts/using-remix",
              "id": "smart-contracts/using-remix",
              "title": "Using Remix",
              "description": "An online IDE that makes it easy to tinker with and deploy smart contracts.",
              "source": "@site/docs/smart-contracts/using-remix.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/using-remix",
              "permalink": "/smart-contracts/using-remix",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/using-remix.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Using Remix",
                "description": "An online IDE that makes it easy to tinker with and deploy smart contracts.",
                "keywords": [
                  "remix"
                ]
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Deployed contracts",
                "permalink": "/smart-contracts/deployed-contracts"
              }
            },
            {
              "unversionedId": "smart-contracts/using-sql-helpers",
              "id": "smart-contracts/using-sql-helpers",
              "title": "Using SQL helpers",
              "description": "Use the SQL helpers library to make it easier write SQL in Solidity.",
              "source": "@site/docs/smart-contracts/using-sql-helpers.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/using-sql-helpers",
              "permalink": "/smart-contracts/using-sql-helpers",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/using-sql-helpers.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Using SQL helpers",
                "description": "Use the SQL helpers library to make it easier write SQL in Solidity."
              },
              "sidebar": "smartContracts",
              "previous": {
                "title": "Setting controllers",
                "permalink": "/smart-contracts/controller/setting-controllers"
              },
              "next": {
                "title": "Example contracts",
                "permalink": "/smart-contracts/examples/"
              }
            },
            {
              "unversionedId": "specs/sql/README",
              "id": "specs/sql/README",
              "title": "SQL specification",
              "description": "The Tableland SQL language specification offers a unique set of SQL that is a subset of the SQLite language.",
              "source": "@site/docs/specs/sql/README.md",
              "sourceDirName": "specs/sql",
              "slug": "/specs/sql/",
              "permalink": "/specs/sql/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/specs/sql/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SQL specification",
                "description": "The Tableland SQL language specification offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              },
              "sidebar": "sqlSpecification"
            },
            {
              "unversionedId": "tutorials/building-games-on-arbitrum",
              "id": "tutorials/building-games-on-arbitrum",
              "title": "Build a game on Arbitrum",
              "description": "Deploy a smart contract-based game and interact with it a React app.",
              "source": "@site/docs/tutorials/building-games-on-arbitrum.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/building-games-on-arbitrum",
              "permalink": "/tutorials/building-games-on-arbitrum",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/building-games-on-arbitrum.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Build a game on Arbitrum",
                "description": "Deploy a smart contract-based game and interact with it a React app.",
                "keywords": [
                  "polygon",
                  "data dao"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Create a dynamic NFT with p5.js",
                "permalink": "/tutorials/dynamic-nft-p5js"
              },
              "next": {
                "title": "Dynamic NFT with Chainlink",
                "permalink": "/tutorials/dynamic-nft-chainlink"
              }
            },
            {
              "unversionedId": "tutorials/data-dao-polygon",
              "id": "tutorials/data-dao-polygon",
              "title": "Build a Data DAO on Polygon",
              "description": "Create a DAO that mints Tableland tables and makes them mutable only through successful DAO votes.",
              "source": "@site/docs/tutorials/data-dao-polygon.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/data-dao-polygon",
              "permalink": "/tutorials/data-dao-polygon",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/data-dao-polygon.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Build a Data DAO on Polygon",
                "sidebar_label": "Build a Data DAO",
                "description": "Create a DAO that mints Tableland tables and makes them mutable only through successful DAO votes.",
                "keywords": [
                  "polygon",
                  "data dao"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Dynamic NFT with Chainlink",
                "permalink": "/tutorials/dynamic-nft-chainlink"
              },
              "next": {
                "title": "Key-value store as NFT",
                "permalink": "/tutorials/key-value-store-nft"
              }
            },
            {
              "unversionedId": "tutorials/dynamic-nft-chainlink",
              "id": "tutorials/dynamic-nft-chainlink",
              "title": "Dynamic NFT with Chainlink automation",
              "description": "Leverage Chainlink for automated NFT mutations.",
              "source": "@site/docs/tutorials/dynamic-nft-chainlink.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/dynamic-nft-chainlink",
              "permalink": "/tutorials/dynamic-nft-chainlink",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-chainlink.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Dynamic NFT with Chainlink automation",
                "sidebar_label": "Dynamic NFT with Chainlink",
                "description": "Leverage Chainlink for automated NFT mutations.",
                "keywords": [
                  "chainlink",
                  "dynamic nft"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Build a game on Arbitrum",
                "permalink": "/tutorials/building-games-on-arbitrum"
              },
              "next": {
                "title": "Build a Data DAO",
                "permalink": "/tutorials/data-dao-polygon"
              }
            },
            {
              "unversionedId": "tutorials/dynamic-nft-p5js",
              "id": "tutorials/dynamic-nft-p5js",
              "title": "Create a dynamic NFT with p5.js",
              "description": "Use p5.js to render data from an NFT that holds global game state in a table.",
              "source": "@site/docs/tutorials/dynamic-nft-p5js.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/dynamic-nft-p5js",
              "permalink": "/tutorials/dynamic-nft-p5js",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-p5js.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Create a dynamic NFT with p5.js",
                "description": "Use p5.js to render data from an NFT that holds global game state in a table.",
                "keywords": [
                  "tutorial",
                  "solidity",
                  "dynamic NFT"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Build a dynamic NFT in Solidity",
                "permalink": "/tutorials/dynamic-nft-solidity"
              },
              "next": {
                "title": "Build a game on Arbitrum",
                "permalink": "/tutorials/building-games-on-arbitrum"
              }
            },
            {
              "unversionedId": "tutorials/dynamic-nft-solidity",
              "id": "tutorials/dynamic-nft-solidity",
              "title": "Build a dynamic NFT in Solidity",
              "description": "Create an on-chain game that uses SQL queries to create and populate a table of game state.",
              "source": "@site/docs/tutorials/dynamic-nft-solidity.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/dynamic-nft-solidity",
              "permalink": "/tutorials/dynamic-nft-solidity",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-solidity.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Build a dynamic NFT in Solidity",
                "description": "Create an on-chain game that uses SQL queries to create and populate a table of game state.",
                "keywords": [
                  "tutorial",
                  "solidity",
                  "dynamic NFT",
                  "p5.js"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Overview",
                "permalink": "/tutorials/"
              },
              "next": {
                "title": "Create a dynamic NFT with p5.js",
                "permalink": "/tutorials/dynamic-nft-p5js"
              }
            },
            {
              "unversionedId": "tutorials/json-files-nft-polygon",
              "id": "tutorials/json-files-nft-polygon",
              "title": "Parse JSON into tables for NFTs",
              "description": "Take local JSON files, parse them into tables, and deploy the data as an NFT collection on Polygon.",
              "source": "@site/docs/tutorials/json-files-nft-polygon.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/json-files-nft-polygon",
              "permalink": "/tutorials/json-files-nft-polygon",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/json-files-nft-polygon.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Parse JSON into tables for NFTs",
                "sidebar_label": "JSON files to tables & NFTs",
                "description": "Take local JSON files, parse them into tables, and deploy the data as an NFT collection on Polygon.",
                "keywords": [
                  "polygon",
                  "json",
                  "dynamic nft"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "On-chain reads with Chainlink",
                "permalink": "/tutorials/table-reads-chainlink"
              }
            },
            {
              "unversionedId": "tutorials/key-value-store-nft",
              "id": "tutorials/key-value-store-nft",
              "title": "Key-value store database",
              "description": "Create a key-value store database that is actually an NFT with collaborative features.",
              "source": "@site/docs/tutorials/key-value-store-nft.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/key-value-store-nft",
              "permalink": "/tutorials/key-value-store-nft",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/key-value-store-nft.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Key-value store database",
                "sidebar_label": "Key-value store as NFT",
                "description": "Create a key-value store database that is actually an NFT with collaborative features.",
                "keywords": [
                  "key-value store",
                  "database",
                  "nft"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Build a Data DAO",
                "permalink": "/tutorials/data-dao-polygon"
              },
              "next": {
                "title": "On-chain reads with Chainlink",
                "permalink": "/tutorials/table-reads-chainlink"
              }
            },
            {
              "unversionedId": "tutorials/README",
              "id": "tutorials/README",
              "title": "Overview",
              "description": "Tutorials and example apps to help kickstart your development process.",
              "source": "@site/docs/tutorials/README.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/",
              "permalink": "/tutorials/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Tutorials and example apps to help kickstart your development process.",
                "keywords": [
                  "tutorials",
                  "example apps"
                ]
              },
              "sidebar": "tutorials",
              "next": {
                "title": "Build a dynamic NFT in Solidity",
                "permalink": "/tutorials/dynamic-nft-solidity"
              }
            },
            {
              "unversionedId": "tutorials/table-reads-chainlink",
              "id": "tutorials/table-reads-chainlink",
              "title": "On-Chain reads with Chainlink + Arbitrum",
              "description": "Use Chainlink’s node operator network to get table state back on-chain to the Arbitrum network.",
              "source": "@site/docs/tutorials/table-reads-chainlink.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/table-reads-chainlink",
              "permalink": "/tutorials/table-reads-chainlink",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/table-reads-chainlink.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "On-Chain reads with Chainlink + Arbitrum",
                "sidebar_label": "On-chain reads with Chainlink",
                "description": "Use Chainlink’s node operator network to get table state back on-chain to the Arbitrum network.",
                "keywords": [
                  "chainlink",
                  "dynamic nft"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Key-value store as NFT",
                "permalink": "/tutorials/key-value-store-nft"
              },
              "next": {
                "title": "JSON files to tables & NFTs",
                "permalink": "/tutorials/json-files-nft-polygon"
              }
            },
            {
              "unversionedId": "validator/README",
              "id": "validator/README",
              "title": "Validator node",
              "description": "Learn how to run you own Tableland validator node.",
              "source": "@site/docs/validator/README.md",
              "sourceDirName": "validator",
              "slug": "/validator/",
              "permalink": "/validator/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/validator/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Validator node",
                "description": "Learn how to run you own Tableland validator node.",
                "keywords": [
                  "validator"
                ]
              },
              "sidebar": "validator"
            }
          ],
          "drafts": [],
          "sidebars": {
            "home": [
              {
                "type": "doc",
                "id": "landing",
                "className": "sidebar-landing"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none landing-section\">LEARN</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "fundamentals/README",
                "label": "Fundamentals",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "playbooks/README",
                "label": "Playbooks",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none landing-section\">DEVELOP</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "quickstarts/README",
                "label": "Quickstarts",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "sdk/README",
                "label": "SDK",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "smart-contracts/README",
                "label": "Smart contracts",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "gateway-api/README",
                "label": "Gateway API",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "cli/README",
                "label": "CLI",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "tutorials/README",
                "label": "Tutorials",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none landing-section\">INFRA & PROTOCOL</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "validator/README",
                "label": "Validator node",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "specs/sql/README",
                "label": "SQL specification",
                "className": "sidebar-landing",
                "translatable": true
              }
            ],
            "fundamentals": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Fundamentals</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "category",
                "label": "Introduction",
                "link": {
                  "type": "doc",
                  "id": "fundamentals/README"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "fundamentals/what-is-tableland"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/considerations-tradeoffs"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/databases"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "doc",
                "label": "Use cases",
                "id": "fundamentals/use-cases/README"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">ARCHITECTURE</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/protocol-design"
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/table-token"
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/limits"
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/gateway"
              },
              {
                "type": "category",
                "label": "Chains",
                "link": {
                  "type": "doc",
                  "id": "fundamentals/chains/README"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/ethereum"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/arbitrum"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/optimism"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/polygon"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/local"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/query-optimization"
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/cost-estimator"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">CONCEPTS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "fundamentals/concepts/nft-metadata"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">ABOUT</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/general-faqs"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/glossary"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/open-beta"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/roadmap"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/repos"
              }
            ],
            "playbooks": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Playbooks</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "playbooks/README"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">SQL BASICS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "playbooks/sql/README"
              },
              {
                "type": "doc",
                "id": "playbooks/sql/create"
              },
              {
                "type": "doc",
                "id": "playbooks/sql/read"
              },
              {
                "type": "doc",
                "id": "playbooks/sql/write"
              },
              {
                "type": "doc",
                "id": "playbooks/sql/composing-data"
              },
              {
                "type": "doc",
                "id": "playbooks/sql/functions"
              },
              {
                "type": "doc",
                "id": "playbooks/sql/access-control"
              },
              {
                "type": "doc",
                "id": "playbooks/sql/incrementing-values"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">WALKTHROUGHS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "playbooks/walkthroughs/nft-metadata"
              },
              {
                "type": "doc",
                "id": "playbooks/walkthroughs/key-value"
              },
              {
                "type": "doc",
                "id": "playbooks/walkthroughs/sql-faqs"
              }
            ],
            "quickstarts": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Quickstarts</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "quickstarts/README"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">CORE</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "quickstarts/sdk-quickstart"
              },
              {
                "type": "doc",
                "id": "quickstarts/smart-contract-quickstart"
              },
              {
                "type": "doc",
                "id": "quickstarts/cli-quickstart"
              },
              {
                "type": "doc",
                "id": "quickstarts/api-quickstart"
              },
              {
                "type": "doc",
                "id": "quickstarts/local-tableland"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">WEB APP FRAMEWORKS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "quickstarts/reactjs"
              },
              {
                "type": "doc",
                "id": "quickstarts/wagmi"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">CONTRACT FRAMEWORKS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "quickstarts/hardhat"
              }
            ],
            "sdk": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">SDK</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "sdk/README"
              },
              {
                "type": "doc",
                "id": "sdk/core/README"
              },
              {
                "type": "doc",
                "id": "sdk/core/signers"
              },
              {
                "type": "doc",
                "id": "sdk/core/prepared-statements"
              },
              {
                "type": "doc",
                "id": "sdk/core/query-statement-methods"
              },
              {
                "type": "doc",
                "id": "sdk/core/batching"
              },
              {
                "type": "doc",
                "id": "sdk/core/timeouts-error-handling"
              },
              {
                "type": "doc",
                "id": "sdk/core/validator-api"
              },
              {
                "type": "doc",
                "id": "sdk/core/registry-api"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">REFERENCE</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "sdk/reference/type-conversion"
              },
              {
                "type": "doc",
                "id": "sdk/reference/testing"
              },
              {
                "type": "doc",
                "id": "sdk/reference/orm"
              }
            ],
            "smartContracts": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Smart contracts</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "smart-contracts/README"
              },
              {
                "type": "doc",
                "id": "smart-contracts/get-started"
              },
              {
                "type": "doc",
                "id": "smart-contracts/contract-owned-tables"
              },
              {
                "type": "category",
                "label": "Configure write access",
                "link": {
                  "type": "doc",
                  "id": "smart-contracts/controller/README"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "smart-contracts/controller/contract-anatomy"
                  },
                  {
                    "type": "doc",
                    "id": "smart-contracts/controller/creating-controllers"
                  },
                  {
                    "type": "doc",
                    "id": "smart-contracts/controller/setting-controllers"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "doc",
                "id": "smart-contracts/using-sql-helpers"
              },
              {
                "type": "category",
                "label": "Example contracts",
                "link": {
                  "type": "doc",
                  "id": "smart-contracts/examples/README"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "smart-contracts/examples/allow-all-controller"
                  },
                  {
                    "type": "doc",
                    "id": "smart-contracts/examples/complex-controller"
                  },
                  {
                    "type": "doc",
                    "id": "smart-contracts/examples/raw-controller"
                  },
                  {
                    "type": "doc",
                    "id": "smart-contracts/examples/gated-voting"
                  },
                  {
                    "type": "doc",
                    "id": "smart-contracts/examples/create-from-contract"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">WALKTHROUGHS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "smart-contracts/serving-nft-metadata"
              },
              {
                "type": "doc",
                "id": "smart-contracts/immutable-table"
              },
              {
                "type": "doc",
                "id": "smart-contracts/uri-encoding"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">REFERENCE</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "smart-contracts/solidity-to-sql-types"
              },
              {
                "type": "doc",
                "id": "smart-contracts/error-handling"
              },
              {
                "type": "doc",
                "id": "smart-contracts/deployed-contracts"
              },
              {
                "type": "doc",
                "id": "smart-contracts/using-remix"
              }
            ],
            "cli": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">CLI</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "cli/README"
              },
              {
                "type": "doc",
                "id": "cli/commands"
              },
              {
                "type": "doc",
                "id": "cli/errors"
              }
            ],
            "validatorApi": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Gateway API</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "gateway-api/README"
              },
              {
                "type": "doc",
                "id": "gateway-api/endpoints"
              },
              {
                "type": "doc",
                "id": "gateway-api/query-formatting"
              }
            ],
            "tutorials": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Tutorials</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "tutorials/README"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">NFTS & GAMING</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "tutorials/dynamic-nft-solidity"
              },
              {
                "type": "doc",
                "id": "tutorials/dynamic-nft-p5js"
              },
              {
                "type": "doc",
                "id": "tutorials/building-games-on-arbitrum"
              },
              {
                "type": "doc",
                "id": "tutorials/dynamic-nft-chainlink"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">DATA & STORAGE</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "tutorials/data-dao-polygon"
              },
              {
                "type": "doc",
                "id": "tutorials/key-value-store-nft"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">UTILITY</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "tutorials/table-reads-chainlink"
              },
              {
                "type": "doc",
                "id": "tutorials/json-files-nft-polygon"
              }
            ],
            "validator": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Reference</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "validator/README"
              }
            ],
            "sqlSpecification": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Reference</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "specs/sql/README"
              }
            ],
            "contribute": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Contribute</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "contribute/README"
              },
              {
                "type": "doc",
                "id": "contribute/style-guide"
              },
              {
                "type": "doc",
                "id": "contribute/maintainers"
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "welcome",
          "metadata": {
            "permalink": "/blog/welcome",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2021-08-26-welcome/index.md",
            "source": "@site/blog/2021-08-26-welcome/index.md",
            "title": "Welcome",
            "description": "Docusaurus blogging features are powered by the blog plugin.",
            "date": "2021-08-26T00:00:00.000Z",
            "formattedDate": "August 26, 2021",
            "tags": [
              {
                "label": "facebook",
                "permalink": "/blog/tags/facebook"
              },
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.405,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              },
              {
                "name": "Yangshun Tay",
                "title": "Front End Engineer @ Facebook",
                "url": "https://github.com/yangshun",
                "imageURL": "https://github.com/yangshun.png",
                "key": "yangshun"
              }
            ],
            "frontMatter": {
              "slug": "welcome",
              "title": "Welcome",
              "authors": [
                "slorber",
                "yangshun"
              ],
              "tags": [
                "facebook",
                "hello",
                "docusaurus"
              ]
            },
            "nextItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            }
          },
          "content": "[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\n\nSimply add Markdown files (or folders) to the `blog` directory.\n\nRegular blog authors can be added to `authors.yml`.\n\nThe blog post date can be extracted from filenames, such as:\n\n- `2019-05-30-welcome.md`\n- `2019-05-30-welcome/index.md`\n\nA blog post folder can be convenient to co-locate blog post images:\n\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\n\nThe blog supports tags as well!\n\n**And if you don't want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."
        },
        {
          "id": "mdx-blog-post",
          "metadata": {
            "permalink": "/blog/mdx-blog-post",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2021-08-01-mdx-blog-post.mdx",
            "source": "@site/blog/2021-08-01-mdx-blog-post.mdx",
            "title": "MDX Blog Post",
            "description": "Blog posts support Docusaurus Markdown features, such as MDX.",
            "date": "2021-08-01T00:00:00.000Z",
            "formattedDate": "August 1, 2021",
            "tags": [
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.175,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              }
            ],
            "frontMatter": {
              "slug": "mdx-blog-post",
              "title": "MDX Blog Post",
              "authors": [
                "slorber"
              ],
              "tags": [
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Welcome",
              "permalink": "/blog/welcome"
            },
            "nextItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\n\n:::tip\n\nUse the power of React to create interactive blog posts.\n\n```js\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n```\n\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n\n:::"
        },
        {
          "id": "long-blog-post",
          "metadata": {
            "permalink": "/blog/long-blog-post",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2019-05-29-long-blog-post.md",
            "source": "@site/blog/2019-05-29-long-blog-post.md",
            "title": "Long Blog Post",
            "description": "This is the summary of a very long blog post,",
            "date": "2019-05-29T00:00:00.000Z",
            "formattedDate": "May 29, 2019",
            "tags": [
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 2.05,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Endilie Yacop Sucipto",
                "title": "Maintainer of Docusaurus",
                "url": "https://github.com/endiliey",
                "imageURL": "https://github.com/endiliey.png",
                "key": "endi"
              }
            ],
            "frontMatter": {
              "slug": "long-blog-post",
              "title": "Long Blog Post",
              "authors": "endi",
              "tags": [
                "hello",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            },
            "nextItem": {
              "title": "First Blog Post",
              "permalink": "/blog/first-blog-post"
            }
          },
          "content": "This is the summary of a very long blog post,\n\nUse a `<!--` `truncate` `-->` comment to limit blog post size in the list view.\n\n<!--truncate-->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        },
        {
          "id": "first-blog-post",
          "metadata": {
            "permalink": "/blog/first-blog-post",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2019-05-28-first-blog-post.md",
            "source": "@site/blog/2019-05-28-first-blog-post.md",
            "title": "First Blog Post",
            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet",
            "date": "2019-05-28T00:00:00.000Z",
            "formattedDate": "May 28, 2019",
            "tags": [
              {
                "label": "hola",
                "permalink": "/blog/tags/hola"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.12,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              }
            ],
            "frontMatter": {
              "slug": "first-blog-post",
              "title": "First Blog Post",
              "authors": {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              },
              "tags": [
                "hola",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 4,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/blog/tags/facebook": {
          "label": "facebook",
          "items": [
            "welcome"
          ],
          "permalink": "/blog/tags/facebook",
          "pages": [
            {
              "items": [
                "welcome"
              ],
              "metadata": {
                "permalink": "/blog/tags/facebook",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hello": {
          "label": "hello",
          "items": [
            "welcome",
            "long-blog-post"
          ],
          "permalink": "/blog/tags/hello",
          "pages": [
            {
              "items": [
                "welcome",
                "long-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hello",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/docusaurus": {
          "label": "docusaurus",
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "permalink": "/blog/tags/docusaurus",
          "pages": [
            {
              "items": [
                "welcome",
                "mdx-blog-post",
                "long-blog-post",
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/docusaurus",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 4,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hola": {
          "label": "hola",
          "items": [
            "first-blog-post"
          ],
          "permalink": "/blog/tags/hola",
          "pages": [
            {
              "items": [
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hola",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": []
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-plugin-dotenv": {},
  "@easyops-cn/docusaurus-search-local": {},
  "docusaurus-theme-mermaid": {},
  "docusaurus-theme-live-codeblock": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}