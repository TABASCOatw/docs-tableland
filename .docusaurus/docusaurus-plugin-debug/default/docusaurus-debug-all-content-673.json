{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/",
          "tagsPath": "/tags",
          "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs",
          "editUrlLocalized": "https://github.com/tablelandnetwork/docs/tree/main/i18n/en/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/dtb/tbl/docs/config/sidebars.js",
          "contentPath": "/Users/dtb/tbl/docs/docs",
          "contentPathLocalized": "/Users/dtb/tbl/docs/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "cli/commands",
              "id": "cli/commands",
              "title": "CLI commands",
              "description": "The Tableland CLI comes with purpose built commands, which slightly differs from the convention in other clients.",
              "source": "@site/docs/cli/commands.md",
              "sourceDirName": "cli",
              "slug": "/cli/commands",
              "permalink": "/cli/commands",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/commands.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "CLI commands",
                "sidebar_label": "Commands",
                "description": "The Tableland CLI comes with purpose built commands, which slightly differs from the convention in other clients.",
                "keywords": [
                  "cli",
                  "command line"
                ]
              },
              "sidebar": "cli",
              "previous": {
                "title": "CLI installation & setup",
                "permalink": "/cli/"
              },
              "next": {
                "title": "Errors",
                "permalink": "/cli/errors"
              }
            },
            {
              "unversionedId": "cli/errors",
              "id": "cli/errors",
              "title": "CLI errors",
              "description": "Understand commons errors that occur when using the Tableland CLI.",
              "source": "@site/docs/cli/errors.md",
              "sourceDirName": "cli",
              "slug": "/cli/errors",
              "permalink": "/cli/errors",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/errors.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "CLI errors",
                "sidebar_label": "Errors",
                "description": "Understand commons errors that occur when using the Tableland CLI.",
                "keywords": [
                  "cli",
                  "command line",
                  "errors"
                ]
              },
              "sidebar": "cli",
              "previous": {
                "title": "Commands",
                "permalink": "/cli/commands"
              }
            },
            {
              "unversionedId": "cli/getting-started",
              "id": "cli/getting-started",
              "title": "Getting started",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/cli/getting-started.md",
              "sourceDirName": "cli",
              "slug": "/cli/getting-started",
              "permalink": "/cli/getting-started",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/getting-started.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Getting started",
                "description": "Get up an running with the Tableland SDK.",
                "synopsis": "Dive into the basics for connecting, creating, writing, and reading from tables. More detailed information is provided in subsequent overviews, but the details provided here should allow developers to quickly understand where to start.",
                "keywords": [
                  "SQL query",
                  "Tableland SDK"
                ]
              }
            },
            {
              "unversionedId": "cli/read",
              "id": "cli/read",
              "title": "Reading tables",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/cli/read.md",
              "sourceDirName": "cli",
              "slug": "/cli/read",
              "permalink": "/cli/read",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/read.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Reading tables",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "cli/README",
              "id": "cli/README",
              "title": "CLI installation & setup",
              "description": "Experiment with creating, editing, and querying tables from the comfort of the command line.",
              "source": "@site/docs/cli/README.md",
              "sourceDirName": "cli",
              "slug": "/cli/",
              "permalink": "/cli/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "CLI installation & setup",
                "description": "Experiment with creating, editing, and querying tables from the comfort of the command line.",
                "keywords": [
                  "CLI",
                  "command line"
                ]
              },
              "sidebar": "cli",
              "next": {
                "title": "Commands",
                "permalink": "/cli/commands"
              }
            },
            {
              "unversionedId": "cli/write",
              "id": "cli/write",
              "title": "Writing to tables",
              "description": "Mutate your table values with additional access control.",
              "source": "@site/docs/cli/write.md",
              "sourceDirName": "cli",
              "slug": "/cli/write",
              "permalink": "/cli/write",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/write.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Writing to tables",
                "description": "Mutate your table values with additional access control.",
                "synopsis": "Table values can be mutated by the table owner or provisioned actors.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "concepts/nfts/README",
              "id": "concepts/nfts/README",
              "title": "README",
              "description": "",
              "source": "@site/docs/concepts/nfts/README.md",
              "sourceDirName": "concepts/nfts",
              "slug": "/concepts/nfts/",
              "permalink": "/concepts/nfts/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/nfts/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {}
            },
            {
              "unversionedId": "concepts/README",
              "id": "concepts/README",
              "title": "Overview",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/README.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/",
              "permalink": "/concepts/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/related/README",
              "id": "concepts/related/README",
              "title": "Related topics",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/related/README.md",
              "sourceDirName": "concepts/related",
              "slug": "/concepts/related/",
              "permalink": "/concepts/related/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/related/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Related topics",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/related/uri-encoding",
              "id": "concepts/related/uri-encoding",
              "title": "URI encoding",
              "description": "SQL queries written at the query endpoint must have the proper encoding.",
              "source": "@site/docs/concepts/related/uri-encoding.md",
              "sourceDirName": "concepts/related",
              "slug": "/concepts/related/uri-encoding",
              "permalink": "/concepts/related/uri-encoding",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/related/uri-encoding.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "URI encoding",
                "description": "SQL queries written at the query endpoint must have the proper encoding.",
                "synopsis": "Developer can write SQL read statement using the query REST API. This creates a truly flexible API where the response object can have fully custom keys that are hydrated with query values.",
                "keywords": [
                  "uri encoding"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/access-control",
              "id": "concepts/sql/access-control",
              "title": "Grant or revoke permissions",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/access-control.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/access-control",
              "permalink": "/concepts/sql/access-control",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/access-control.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Grant or revoke permissions",
                "sidebar_label": "Access control",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/create-a-table",
              "id": "concepts/sql/create-a-table",
              "title": "Create a table",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/create-a-table.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/create-a-table",
              "permalink": "/concepts/sql/create-a-table",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/create-a-table.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Create a table",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/delete",
              "id": "concepts/sql/delete",
              "title": "Deleting table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/delete.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/delete",
              "permalink": "/concepts/sql/delete",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/delete.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Deleting table data",
                "sidebar_label": "DELETE",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/incrementing-values",
              "id": "concepts/sql/incrementing-values",
              "title": "Incrementing values automatically",
              "description": "Tableland allows developers to automatically increment a cell, with some restrictions.",
              "source": "@site/docs/concepts/sql/incrementing-values.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/incrementing-values",
              "permalink": "/concepts/sql/incrementing-values",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/incrementing-values.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Incrementing values automatically",
                "sidebar_label": "Auto-incrementing",
                "description": "Tableland allows developers to automatically increment a cell, with some restrictions.",
                "synopsis": "Developers often want to insert a row with a cell that automatically increases by a value of 1. There are some intricacies to be aware of, but this is fully possible with Tableland SQL and makes it easy to insert a row with an automatically generated identifier.",
                "keywords": [
                  "auto-increment",
                  "autoincrement"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/insert",
              "id": "concepts/sql/insert",
              "title": "Inserting table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/insert.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/insert",
              "permalink": "/concepts/sql/insert",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/insert.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Inserting table data",
                "sidebar_label": "INSERT",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/mutating-data",
              "id": "concepts/sql/mutating-data",
              "title": "Mutating table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/mutating-data.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/mutating-data",
              "permalink": "/concepts/sql/mutating-data",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/mutating-data.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Mutating table data",
                "sidebar_label": "Mutating data",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/read",
              "id": "concepts/sql/read",
              "title": "Reading table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/read.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/read",
              "permalink": "/concepts/sql/read",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/read.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Reading table data",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/README",
              "id": "concepts/sql/README",
              "title": "Quick start",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/README.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/",
              "permalink": "/concepts/sql/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "sidebarPosition": 1,
              "frontMatter": {
                "title": "Quick start",
                "sidebar_position": 1,
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/sql-spec",
              "id": "concepts/sql/sql-spec",
              "title": "SQL specification",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/sql-spec.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/sql-spec",
              "permalink": "/concepts/sql/sql-spec",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/sql-spec.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SQL specification",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/update",
              "id": "concepts/sql/update",
              "title": "Updating table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/update.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/update",
              "permalink": "/concepts/sql/update",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/update.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Updating table data",
                "sidebar_label": "UPDATE",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/upsert",
              "id": "concepts/sql/upsert",
              "title": "Insert or update on conflict",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/upsert.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/upsert",
              "permalink": "/concepts/sql/upsert",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/upsert.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Insert or update on conflict",
                "sidebar_label": "UPSERT",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "contribute/maintainers",
              "id": "contribute/maintainers",
              "title": "Maintainers",
              "description": "Core contributors to the Tableland protocol's documentation.",
              "source": "@site/docs/contribute/maintainers.md",
              "sourceDirName": "contribute",
              "slug": "/contribute/maintainers",
              "permalink": "/contribute/maintainers",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/contribute/maintainers.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Maintainers",
                "description": "Core contributors to the Tableland protocol's documentation.",
                "keywords": [
                  "docs",
                  "tableland",
                  "maintainers",
                  "contributors"
                ]
              },
              "sidebar": "contribute",
              "previous": {
                "title": "Style guide",
                "permalink": "/contribute/style-guide"
              }
            },
            {
              "unversionedId": "contribute/README",
              "id": "contribute/README",
              "title": "How to contribute",
              "description": "Get involved and contribute to the Tableland ecosystem.",
              "source": "@site/docs/contribute/README.md",
              "sourceDirName": "contribute",
              "slug": "/contribute/",
              "permalink": "/contribute/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/contribute/README.md",
              "tags": [
                {
                  "label": "contributing",
                  "permalink": "/tags/contributing"
                }
              ],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "How to contribute",
                "sidebar_label": "Contributor guidelines",
                "description": "Get involved and contribute to the Tableland ecosystem.",
                "synopsis": "Tableland welcomes new collaborators and contributions. The protocol is constantly growing and looking for help from community members, and we've open sourced all of our code, documentation, and tutorials to make this possible. Learn more about where to begin and stylistic guidelines & features about the docs site, in particular.",
                "keywords": [
                  "docs",
                  "tableland",
                  "contribute",
                  "contributor",
                  "contributing"
                ],
                "tags": [
                  "contributing"
                ]
              },
              "sidebar": "contribute",
              "next": {
                "title": "Style guide",
                "permalink": "/contribute/style-guide"
              }
            },
            {
              "unversionedId": "contribute/style-guide",
              "id": "contribute/style-guide",
              "title": "Style guide",
              "description": "Learn the ins and outs of contributing to the Tableland docs site.",
              "source": "@site/docs/contribute/style-guide.md",
              "sourceDirName": "contribute",
              "slug": "/contribute/style-guide",
              "permalink": "/contribute/style-guide",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/contribute/style-guide.md",
              "tags": [
                {
                  "label": "contributing",
                  "permalink": "/tags/contributing"
                }
              ],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Style guide",
                "description": "Learn the ins and outs of contributing to the Tableland docs site.",
                "synopsis": "The docs site is built using Docusaurus, a static site generator developed by Meta that is specifically designed for documentation. It offers a number of features, including MDX support (embed JSX in markdown) and various content-friendly plugins. Please ensure you follow the guidelines on writing style as well.",
                "keywords": [
                  "docs",
                  "tableland",
                  "contribute",
                  "contributor",
                  "contributing"
                ],
                "tags": [
                  "contributing"
                ]
              },
              "sidebar": "contribute",
              "previous": {
                "title": "Contributor guidelines",
                "permalink": "/contribute/"
              },
              "next": {
                "title": "Maintainers",
                "permalink": "/contribute/maintainers"
              }
            },
            {
              "unversionedId": "fundamentals/about/general-faqs",
              "id": "fundamentals/about/general-faqs",
              "title": "General FAQs",
              "description": "Review commonly asked questions about the Tableland network and community.",
              "source": "@site/docs/fundamentals/about/general-faqs.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/general-faqs",
              "permalink": "/fundamentals/about/general-faqs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/general-faqs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "General FAQs",
                "description": "Review commonly asked questions about the Tableland network and community.",
                "keywords": [
                  "faq",
                  "faqs"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Roadmap",
                "permalink": "/fundamentals/about/roadmap"
              },
              "next": {
                "title": "Repos",
                "permalink": "/fundamentals/about/repos"
              }
            },
            {
              "unversionedId": "fundamentals/about/open-beta",
              "id": "fundamentals/about/open-beta",
              "title": "Open beta",
              "description": "Use Tableland on testnet and mainnet chains while the protocol is in development.",
              "source": "@site/docs/fundamentals/about/open-beta.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/open-beta",
              "permalink": "/fundamentals/about/open-beta",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/open-beta.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "sidebarPosition": 5,
              "frontMatter": {
                "title": "Open beta",
                "sidebar_position": 5,
                "description": "Use Tableland on testnet and mainnet chains while the protocol is in development.",
                "synopsis": "The Tableland network is actively being developed and plans to launch a production (mainnet) in 2024. Prior to that launch, the protocol can still be used on supported chains, but its important to note what's in store in the future.",
                "keywords": [
                  "open beta",
                  "production"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Contracts",
                "permalink": "/fundamentals/architecture/contracts"
              },
              "next": {
                "title": "Use cases",
                "permalink": "/fundamentals/about/use-cases"
              }
            },
            {
              "unversionedId": "fundamentals/about/repos",
              "id": "fundamentals/about/repos",
              "title": "Repositories",
              "description": "Open source reference for all official Tableland network software.",
              "source": "@site/docs/fundamentals/about/repos.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/repos",
              "permalink": "/fundamentals/about/repos",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/repos.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Repositories",
                "sidebar_label": "Repos",
                "description": "Open source reference for all official Tableland network software.",
                "keywords": [
                  "repos",
                  "repo",
                  "repositories",
                  "repository"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "General FAQs",
                "permalink": "/fundamentals/about/general-faqs"
              }
            },
            {
              "unversionedId": "fundamentals/about/roadmap",
              "id": "fundamentals/about/roadmap",
              "title": "Vision & roadmap",
              "description": "The protocol is still being developed and progressively decentralized.",
              "source": "@site/docs/fundamentals/about/roadmap.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/roadmap",
              "permalink": "/fundamentals/about/roadmap",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/roadmap.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Vision & roadmap",
                "sidebar_label": "Roadmap",
                "description": "The protocol is still being developed and progressively decentralized.",
                "synopsis": "Tableland's inception came in late 2021. It's consistently growing in terms of the core protocol itself and development activity on top of the protocol, and there is still plenty in store in the coming months and years.",
                "keywords": [
                  "roadmap",
                  "vision"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Use cases",
                "permalink": "/fundamentals/about/use-cases"
              },
              "next": {
                "title": "General FAQs",
                "permalink": "/fundamentals/about/general-faqs"
              }
            },
            {
              "unversionedId": "fundamentals/about/use-cases",
              "id": "fundamentals/about/use-cases",
              "title": "Use cases",
              "description": "A series of general use cases to consider.",
              "source": "@site/docs/fundamentals/about/use-cases.md",
              "sourceDirName": "fundamentals/about",
              "slug": "/fundamentals/about/use-cases",
              "permalink": "/fundamentals/about/use-cases",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/about/use-cases.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "sidebarPosition": 4,
              "frontMatter": {
                "title": "Use cases",
                "sidebar_position": 4,
                "description": "A series of general use cases to consider.",
                "synopsis": "This page identifies some potential use cases. It is non-exhaustive but provides guidelines / considerations for where developers can use Tableland, and as always, consider the host chain as part of the use case criteria (e.g., Ethereum is more expensive to write to than an L2).",
                "keywords": [
                  "use cases"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Open beta",
                "permalink": "/fundamentals/about/open-beta"
              },
              "next": {
                "title": "Roadmap",
                "permalink": "/fundamentals/about/roadmap"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/contracts",
              "id": "fundamentals/architecture/contracts",
              "title": "Tableland contracts",
              "description": "A list of deployed Tableland registry contracts for each supported chain.",
              "source": "@site/docs/fundamentals/architecture/contracts.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/contracts",
              "permalink": "/fundamentals/architecture/contracts",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/contracts.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Tableland contracts",
                "sidebar_label": "Contracts",
                "description": "A list of deployed Tableland registry contracts for each supported chain.",
                "synopsis": "The following page highlights which chains Tableland has smart contracts deployed on, which is currently Ethereum and a subset of its scaling solutions. Over time, additional EVM compatible chains will be added based on developer demand.",
                "keywords": [
                  "chains",
                  "contract"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Local node",
                "permalink": "/fundamentals/chains/local"
              },
              "next": {
                "title": "Open beta",
                "permalink": "/fundamentals/about/open-beta"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/gateway",
              "id": "fundamentals/architecture/gateway",
              "title": "Gateway & response times",
              "description": "Processing times for creates & writes are largely dependent on the base chain, but read responses follow typical HTTPS response expectation.",
              "source": "@site/docs/fundamentals/architecture/gateway.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/gateway",
              "permalink": "/fundamentals/architecture/gateway",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/gateway.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Gateway & response times",
                "sidebar_label": "Gateway",
                "description": "Processing times for creates & writes are largely dependent on the base chain, but read responses follow typical HTTPS response expectation.",
                "synopsis": "Tableland is always dependent on the base chain for the speed at which transactions are finalized. For each chain, nodes listen and process emitted events. When that data is materialized in Tableland node's SQLite databases, it becomes immediately accessible and queryable with high responsiveness.",
                "keywords": [
                  "response times",
                  "gateway"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Limits",
                "permalink": "/fundamentals/architecture/limits"
              },
              "next": {
                "title": "Choosing a chain",
                "permalink": "/fundamentals/chains/"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/limits",
              "id": "fundamentals/architecture/limits",
              "title": "Limits",
              "description": "A listing of the table/data limits and smart contract deployment locations on supported chains.",
              "source": "@site/docs/fundamentals/architecture/limits.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/limits",
              "permalink": "/fundamentals/architecture/limits",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/limits.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Limits",
                "description": "A listing of the table/data limits and smart contract deployment locations on supported chains.",
                "synopsis": "Since Tableland is still in open beta, each table is limited to the following constraints while the full production network is further clarified. These are temporary limits while the production mainnet is further researched.",
                "keywords": [
                  "limits",
                  "cell limit",
                  "row limit",
                  "column limit"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Table uniqueness",
                "permalink": "/fundamentals/architecture/table-token"
              },
              "next": {
                "title": "Gateway",
                "permalink": "/fundamentals/architecture/gateway"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/protocol-design",
              "id": "fundamentals/architecture/protocol-design",
              "title": "Protocol design",
              "description": "The Tableland protocol operates as a data scaling solution with chain-driven database actions.",
              "source": "@site/docs/fundamentals/architecture/protocol-design.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/protocol-design",
              "permalink": "/fundamentals/architecture/protocol-design",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/protocol-design.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Protocol design",
                "description": "The Tableland protocol operates as a data scaling solution with chain-driven database actions.",
                "keywords": [
                  "open beta",
                  "production"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "REST API",
                "permalink": "/fundamentals/quickstarts/api-quickstart"
              },
              "next": {
                "title": "Table uniqueness",
                "permalink": "/fundamentals/architecture/table-token"
              }
            },
            {
              "unversionedId": "fundamentals/architecture/README",
              "id": "fundamentals/architecture/README",
              "title": "Tableland protocol",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/fundamentals/architecture/README.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/",
              "permalink": "/fundamentals/architecture/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Tableland protocol",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "fundamentals/architecture/table-token",
              "id": "fundamentals/architecture/table-token",
              "title": "TABLE token & identification",
              "description": "Tables are guaranteed unique across all chains based on a combination of developer and environment defined information.",
              "source": "@site/docs/fundamentals/architecture/table-token.md",
              "sourceDirName": "fundamentals/architecture",
              "slug": "/fundamentals/architecture/table-token",
              "permalink": "/fundamentals/architecture/table-token",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/architecture/table-token.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "TABLE token & identification",
                "sidebar_label": "Table uniqueness",
                "description": "Tables are guaranteed unique across all chains based on a combination of developer and environment defined information.",
                "keywords": [
                  "table",
                  "erc721"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Protocol design",
                "permalink": "/fundamentals/architecture/protocol-design"
              },
              "next": {
                "title": "Limits",
                "permalink": "/fundamentals/architecture/limits"
              }
            },
            {
              "unversionedId": "fundamentals/chains/arbitrum",
              "id": "fundamentals/chains/arbitrum",
              "title": "Arbitrum",
              "description": "An overview of using Arbitrum with Tableland.",
              "source": "@site/docs/fundamentals/chains/arbitrum.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/arbitrum",
              "permalink": "/fundamentals/chains/arbitrum",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/arbitrum.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Arbitrum",
                "description": "An overview of using Arbitrum with Tableland.",
                "synopsis": "Arbitrum is one of the leading EVM-compatible Layer 2 solutions that Tableland currently supports. Check out the overview of what this network is and relevant information when using it.",
                "keywords": [
                  "arbitrum"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Ethereum",
                "permalink": "/fundamentals/chains/ethereum"
              },
              "next": {
                "title": "Optimism",
                "permalink": "/fundamentals/chains/optimism"
              }
            },
            {
              "unversionedId": "fundamentals/chains/ethereum",
              "id": "fundamentals/chains/ethereum",
              "title": "Ethereum",
              "description": "An overview of using Ethereum with Tableland.",
              "source": "@site/docs/fundamentals/chains/ethereum.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/ethereum",
              "permalink": "/fundamentals/chains/ethereum",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/ethereum.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Ethereum",
                "description": "An overview of using Ethereum with Tableland.",
                "synopsis": "Ethereum and its EVM is what drives Tableland's approach for chain compatibility. With its data and network hardness, it's a great case for many projects, but not all use cases can occur here due to cost constraints.",
                "keywords": [
                  "ethereum"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Choosing a chain",
                "permalink": "/fundamentals/chains/"
              },
              "next": {
                "title": "Arbitrum",
                "permalink": "/fundamentals/chains/arbitrum"
              }
            },
            {
              "unversionedId": "fundamentals/chains/local",
              "id": "fundamentals/chains/local",
              "title": "Using a local chain",
              "description": "An overview of using a Hardhat node and a local Tableland instance.",
              "source": "@site/docs/fundamentals/chains/local.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/local",
              "permalink": "/fundamentals/chains/local",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/local.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Using a local chain",
                "sidebar_label": "Local node",
                "description": "An overview of using a Hardhat node and a local Tableland instance.",
                "synopsis": "Developing locally should happen as a step prior to deploying to any testnet and/or mainnet. Developers can use Local Tableland to accomplish this, which spins up a Hardhat node for a local Tableland node to use.",
                "keywords": [
                  "local tableland",
                  "hardhat"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Polygon",
                "permalink": "/fundamentals/chains/polygon"
              },
              "next": {
                "title": "Contracts",
                "permalink": "/fundamentals/architecture/contracts"
              }
            },
            {
              "unversionedId": "fundamentals/chains/optimism",
              "id": "fundamentals/chains/optimism",
              "title": "Optimism",
              "description": "An overview of using Optimism with Tableland.",
              "source": "@site/docs/fundamentals/chains/optimism.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/optimism",
              "permalink": "/fundamentals/chains/optimism",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/optimism.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Optimism",
                "description": "An overview of using Optimism with Tableland.",
                "synopsis": "Optimism is one of the EVM-compatible Layer 2 solutions that Tableland currently supports. Check out the overview of what this network is and relevant information when using it.",
                "keywords": [
                  "optimism"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Arbitrum",
                "permalink": "/fundamentals/chains/arbitrum"
              },
              "next": {
                "title": "Polygon",
                "permalink": "/fundamentals/chains/polygon"
              }
            },
            {
              "unversionedId": "fundamentals/chains/polygon",
              "id": "fundamentals/chains/polygon",
              "title": "Polygon",
              "description": "An overview of using Polygon with Tableland.",
              "source": "@site/docs/fundamentals/chains/polygon.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/polygon",
              "permalink": "/fundamentals/chains/polygon",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/polygon.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Polygon",
                "description": "An overview of using Polygon with Tableland.",
                "synopsis": "Polygon is one of the EVM-compatible Layer 2 solutions that Tableland currently supports. Check out the overview of what this network is and relevant information when using it.",
                "keywords": [
                  "polygon"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Optimism",
                "permalink": "/fundamentals/chains/optimism"
              },
              "next": {
                "title": "Local node",
                "permalink": "/fundamentals/chains/local"
              }
            },
            {
              "unversionedId": "fundamentals/chains/README",
              "id": "fundamentals/chains/README",
              "title": "Choosing a chain",
              "description": "Selecting a base chain is an important step in any applicationâ€™s design and, especially, for tables.",
              "source": "@site/docs/fundamentals/chains/README.md",
              "sourceDirName": "fundamentals/chains",
              "slug": "/fundamentals/chains/",
              "permalink": "/fundamentals/chains/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/chains/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Choosing a chain",
                "description": "Selecting a base chain is an important step in any applicationâ€™s design and, especially, for tables.",
                "synopsis": "Chain selection makes a significant impact on a tableâ€™s usability. Choose a chain thatâ€™s too slow or expensive, and it wonâ€™t be feasible for table writes to occur frequently. Deploy a cross-chain data model for value layering purposes, and certain on-chain access control features are lost.",
                "keywords": [
                  "evm",
                  "chains"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Gateway",
                "permalink": "/fundamentals/architecture/gateway"
              },
              "next": {
                "title": "Ethereum",
                "permalink": "/fundamentals/chains/ethereum"
              }
            },
            {
              "unversionedId": "fundamentals/considerations-tradeoffs",
              "id": "fundamentals/considerations-tradeoffs",
              "title": "Considerations & tradeoffs",
              "description": "Tableland offers a new solution to suboptimal web3 data storage standards.",
              "source": "@site/docs/fundamentals/considerations-tradeoffs.md",
              "sourceDirName": "fundamentals",
              "slug": "/fundamentals/considerations-tradeoffs",
              "permalink": "/fundamentals/considerations-tradeoffs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/considerations-tradeoffs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Considerations & tradeoffs",
                "sidebar_label": "Why use Tableland?",
                "description": "Tableland offers a new solution to suboptimal web3 data storage standards.",
                "synopsis": "Selecting the chain to deploy tables on has a significant impact on the subsequent usage of the table. But before selecting a chain to then use Tablelandâ€™s capabilities, it may be helpful to consider the alternatives to Tableland in the first place."
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "What is Tableland?",
                "permalink": "/fundamentals/what-is-tableland"
              },
              "next": {
                "title": "Databases & SQL",
                "permalink": "/fundamentals/databases"
              }
            },
            {
              "unversionedId": "fundamentals/databases",
              "id": "fundamentals/databases",
              "title": "Databases & SQL",
              "description": "Briefly look under the hood at relational databases.",
              "source": "@site/docs/fundamentals/databases.md",
              "sourceDirName": "fundamentals",
              "slug": "/fundamentals/databases",
              "permalink": "/fundamentals/databases",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/databases.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Databases & SQL",
                "description": "Briefly look under the hood at relational databases.",
                "synopsis": "Although it's an oversimplification, the network is like a bunch of SQL databases communicating & agreeing with one another about things that happened on-chain. It's important to understand the very basics of what databases are and why a relational is a perfect solution for scaling structured web3 data.",
                "keywords": [
                  "databases",
                  "relational database"
                ]
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Why use Tableland?",
                "permalink": "/fundamentals/considerations-tradeoffs"
              },
              "next": {
                "title": "Quickstarts",
                "permalink": "/fundamentals/quickstarts/"
              }
            },
            {
              "unversionedId": "fundamentals/quickstarts/api-quickstart",
              "id": "fundamentals/quickstarts/api-quickstart",
              "title": "Validator API quickstart",
              "description": "Learn how to read table data or retrieve relevant validator information.",
              "source": "@site/docs/fundamentals/quickstarts/api-quickstart.md",
              "sourceDirName": "fundamentals/quickstarts",
              "slug": "/fundamentals/quickstarts/api-quickstart",
              "permalink": "/fundamentals/quickstarts/api-quickstart",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/quickstarts/api-quickstart.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Validator API quickstart",
                "sidebar_label": "REST API",
                "description": "Learn how to read table data or retrieve relevant validator information."
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "CLI",
                "permalink": "/fundamentals/quickstarts/cli-quickstart"
              },
              "next": {
                "title": "Protocol design",
                "permalink": "/fundamentals/architecture/protocol-design"
              }
            },
            {
              "unversionedId": "fundamentals/quickstarts/cli-quickstart",
              "id": "fundamentals/quickstarts/cli-quickstart",
              "title": "Quickstart",
              "description": "Learn how to create a table, add some sample data, and query the data using the CLI.",
              "source": "@site/docs/fundamentals/quickstarts/cli-quickstart.md",
              "sourceDirName": "fundamentals/quickstarts",
              "slug": "/fundamentals/quickstarts/cli-quickstart",
              "permalink": "/fundamentals/quickstarts/cli-quickstart",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/quickstarts/cli-quickstart.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Quickstart",
                "sidebar_label": "CLI",
                "description": "Learn how to create a table, add some sample data, and query the data using the CLI."
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Smart contracts",
                "permalink": "/fundamentals/quickstarts/smart-contract-quickstart"
              },
              "next": {
                "title": "REST API",
                "permalink": "/fundamentals/quickstarts/api-quickstart"
              }
            },
            {
              "unversionedId": "fundamentals/quickstarts/README",
              "id": "fundamentals/quickstarts/README",
              "title": "Quickstarts",
              "description": "Make sure you're ready to start building by properly setting up your development environment.",
              "source": "@site/docs/fundamentals/quickstarts/README.md",
              "sourceDirName": "fundamentals/quickstarts",
              "slug": "/fundamentals/quickstarts/",
              "permalink": "/fundamentals/quickstarts/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/quickstarts/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Quickstarts",
                "description": "Make sure you're ready to start building by properly setting up your development environment."
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Databases & SQL",
                "permalink": "/fundamentals/databases"
              },
              "next": {
                "title": "SDK",
                "permalink": "/fundamentals/quickstarts/sdk-quickstart"
              }
            },
            {
              "unversionedId": "fundamentals/quickstarts/sdk-quickstart",
              "id": "fundamentals/quickstarts/sdk-quickstart",
              "title": "SDK quickstart",
              "description": "Learn how to create a table, add some sample data, and query the data using the SDK.",
              "source": "@site/docs/fundamentals/quickstarts/sdk-quickstart.md",
              "sourceDirName": "fundamentals/quickstarts",
              "slug": "/fundamentals/quickstarts/sdk-quickstart",
              "permalink": "/fundamentals/quickstarts/sdk-quickstart",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/quickstarts/sdk-quickstart.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SDK quickstart",
                "sidebar_label": "SDK",
                "description": "Learn how to create a table, add some sample data, and query the data using the SDK."
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Quickstarts",
                "permalink": "/fundamentals/quickstarts/"
              },
              "next": {
                "title": "Smart contracts",
                "permalink": "/fundamentals/quickstarts/smart-contract-quickstart"
              }
            },
            {
              "unversionedId": "fundamentals/quickstarts/smart-contract-quickstart",
              "id": "fundamentals/quickstarts/smart-contract-quickstart",
              "title": "Smart contract quickstart",
              "description": "Learn how to create a table and insert add some sample data using the Solidity.",
              "source": "@site/docs/fundamentals/quickstarts/smart-contract-quickstart.md",
              "sourceDirName": "fundamentals/quickstarts",
              "slug": "/fundamentals/quickstarts/smart-contract-quickstart",
              "permalink": "/fundamentals/quickstarts/smart-contract-quickstart",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/quickstarts/smart-contract-quickstart.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Smart contract quickstart",
                "sidebar_label": "Smart contracts",
                "description": "Learn how to create a table and insert add some sample data using the Solidity."
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "SDK",
                "permalink": "/fundamentals/quickstarts/sdk-quickstart"
              },
              "next": {
                "title": "CLI",
                "permalink": "/fundamentals/quickstarts/cli-quickstart"
              }
            },
            {
              "unversionedId": "fundamentals/README",
              "id": "fundamentals/README",
              "title": "Introduction",
              "description": "Figure out where to begin with Tableland, whether that's starting to build or figuring out how it all works.",
              "source": "@site/docs/fundamentals/README.md",
              "sourceDirName": "fundamentals",
              "slug": "/fundamentals/",
              "permalink": "/fundamentals/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Introduction",
                "description": "Figure out where to begin with Tableland, whether that's starting to build or figuring out how it all works.",
                "synopsis": "Tableland is a web3 SQL database that can be used on EVM chains like Ethereum and Layer 2 (L2) solutions. It helps extend and enhance data storage while offloading accessibility to a decentralized network of validator nodes that watch the host chain for updates, which is where SQL data is made available. Developers can use Tableland to help scale, mutate, and effectively access chain-driven dataâ€”with on-chain rules and SQL."
              },
              "sidebar": "getStarted",
              "next": {
                "title": "What is Tableland?",
                "permalink": "/fundamentals/what-is-tableland"
              }
            },
            {
              "unversionedId": "fundamentals/what-is-tableland",
              "id": "fundamentals/what-is-tableland",
              "title": "What is Tableland?",
              "description": "A brief overview of what the Tableland network is and how it works.",
              "source": "@site/docs/fundamentals/what-is-tableland.md",
              "sourceDirName": "fundamentals",
              "slug": "/fundamentals/what-is-tableland",
              "permalink": "/fundamentals/what-is-tableland",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/fundamentals/what-is-tableland.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "What is Tableland?",
                "description": "A brief overview of what the Tableland network is and how it works."
              },
              "sidebar": "getStarted",
              "previous": {
                "title": "Introduction",
                "permalink": "/fundamentals/"
              },
              "next": {
                "title": "Why use Tableland?",
                "permalink": "/fundamentals/considerations-tradeoffs"
              }
            },
            {
              "unversionedId": "landing",
              "id": "landing",
              "title": "Home",
              "description": "",
              "source": "@site/docs/README.md",
              "sourceDirName": ".",
              "slug": "/",
              "permalink": "/",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "landing",
                "title": "Home",
                "sidebar_label": "Home",
                "hide_title": true,
                "hide_bread_crumb": true,
                "hide_table_of_contents": true,
                "pagination_prev": null,
                "pagination_next": null,
                "custom_edit_url": null,
                "slug": "/",
                "keywords": [
                  "tableland",
                  "docs",
                  "documentation"
                ]
              },
              "sidebar": "home"
            },
            {
              "unversionedId": "products/rigs/README",
              "id": "products/rigs/README",
              "title": "Tableland Rigs",
              "description": "A developer-first NFT, inherently rewarding builders and community members of the Tableland network.",
              "source": "@site/docs/products/rigs/README.md",
              "sourceDirName": "products/rigs",
              "slug": "/products/rigs/",
              "permalink": "/products/rigs/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/products/rigs/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Tableland Rigs",
                "description": "A developer-first NFT, inherently rewarding builders and community members of the Tableland network.",
                "synopsis": "Rigs are a generative collection of 3k NFTs designed for those who build on Tableland. They set a foundation to help reward developers for building high value applications and to those contributing to the ecosystem as a whole.",
                "keywords": [
                  "rigs",
                  "the garage"
                ]
              }
            },
            {
              "unversionedId": "products/rigs/rigs-discord",
              "id": "products/rigs/rigs-discord",
              "title": "Rigs in Discord",
              "description": "Learn about the basics of SQL.",
              "source": "@site/docs/products/rigs/rigs-discord.md",
              "sourceDirName": "products/rigs",
              "slug": "/products/rigs/rigs-discord",
              "permalink": "/products/rigs/rigs-discord",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/products/rigs/rigs-discord.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Rigs in Discord",
                "description": "Learn about the basics of SQL.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "SQL",
                  "SQLite",
                  "about"
                ]
              }
            },
            {
              "unversionedId": "products/rigs/the-garage",
              "id": "products/rigs/the-garage",
              "title": "The Garage",
              "description": "Learn about the basics of SQL.",
              "source": "@site/docs/products/rigs/the-garage.md",
              "sourceDirName": "products/rigs",
              "slug": "/products/rigs/the-garage",
              "permalink": "/products/rigs/the-garage",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/products/rigs/the-garage.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "The Garage",
                "description": "Learn about the basics of SQL.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "SQL",
                  "SQLite",
                  "about"
                ]
              }
            },
            {
              "unversionedId": "products/rigs/what-are-rigs",
              "id": "products/rigs/what-are-rigs",
              "title": "What are Rigs?",
              "description": "Learn about the basics of SQL.",
              "source": "@site/docs/products/rigs/what-are-rigs.md",
              "sourceDirName": "products/rigs",
              "slug": "/products/rigs/what-are-rigs",
              "permalink": "/products/rigs/what-are-rigs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/products/rigs/what-are-rigs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "What are Rigs?",
                "description": "Learn about the basics of SQL.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "SQL",
                  "SQLite",
                  "about"
                ]
              }
            },
            {
              "unversionedId": "reference/sql-specification",
              "id": "reference/sql-specification",
              "title": "SQL specification",
              "description": "The Tableland SQL language specification offers a unique set of SQL that is a subset of the SQLite language.",
              "source": "@site/docs/reference/sql-specification.md",
              "sourceDirName": "reference",
              "slug": "/reference/sql-specification",
              "permalink": "/reference/sql-specification",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/reference/sql-specification.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SQL specification",
                "description": "The Tableland SQL language specification offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              },
              "sidebar": "sqlSpecification"
            },
            {
              "unversionedId": "reference/validator-api",
              "id": "reference/validator-api",
              "title": "Validator API",
              "description": "Interact directly with a Tableland validator node.",
              "source": "@site/docs/reference/validator-api.md",
              "sourceDirName": "reference",
              "slug": "/reference/validator-api",
              "permalink": "/reference/validator-api",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/reference/validator-api.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Validator API",
                "description": "Interact directly with a Tableland validator node.",
                "keywords": [
                  "rest api",
                  "validator api"
                ]
              }
            },
            {
              "unversionedId": "sdk/database/batching",
              "id": "sdk/database/batching",
              "title": "Batching statement & operations",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/sdk/database/batching.md",
              "sourceDirName": "sdk/database",
              "slug": "/sdk/database/batching",
              "permalink": "/sdk/database/batching",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/database/batching.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Batching statement & operations",
                "sidebar_label": "Batching",
                "description": "Get up an running with the Tableland SDK."
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Query statement methods",
                "permalink": "/sdk/database/query-statement-methods"
              },
              "next": {
                "title": "Type conversion",
                "permalink": "/sdk/database/type-conversion"
              }
            },
            {
              "unversionedId": "sdk/database/orm",
              "id": "sdk/database/orm",
              "title": "ORM support",
              "description": "Simplify working with data and writing SQL statements using an Object-Relational Mapping (ORM) tool.",
              "source": "@site/docs/sdk/database/orm.md",
              "sourceDirName": "sdk/database",
              "slug": "/sdk/database/orm",
              "permalink": "/sdk/database/orm",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/database/orm.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "ORM support",
                "description": "Simplify working with data and writing SQL statements using an Object-Relational Mapping (ORM) tool.",
                "keywords": [
                  "orm",
                  "object relational mapping"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Timeouts",
                "permalink": "/sdk/database/timeouts"
              },
              "next": {
                "title": "Legacy SDK",
                "permalink": "/sdk/database/upgrading-from-legacy"
              }
            },
            {
              "unversionedId": "sdk/database/prepared-statements",
              "id": "sdk/database/prepared-statements",
              "title": "Prepared statements",
              "description": "Use a single method for all table creates, reads, and writes.",
              "source": "@site/docs/sdk/database/prepared-statements.md",
              "sourceDirName": "sdk/database",
              "slug": "/sdk/database/prepared-statements",
              "permalink": "/sdk/database/prepared-statements",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/database/prepared-statements.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Prepared statements",
                "description": "Use a single method for all table creates, reads, and writes.",
                "keywords": [
                  "prepare",
                  "prepared statements"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Signers",
                "permalink": "/sdk/database/signers"
              },
              "next": {
                "title": "Query statement methods",
                "permalink": "/sdk/database/query-statement-methods"
              }
            },
            {
              "unversionedId": "sdk/database/query-statement-methods",
              "id": "sdk/database/query-statement-methods",
              "title": "Query statement methods",
              "description": "Mutate your table values with additional access control.",
              "source": "@site/docs/sdk/database/query-statement-methods.md",
              "sourceDirName": "sdk/database",
              "slug": "/sdk/database/query-statement-methods",
              "permalink": "/sdk/database/query-statement-methods",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/database/query-statement-methods.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Query statement methods",
                "description": "Mutate your table values with additional access control.",
                "synopsis": "Table values can be mutated by the table owner or provisioned actors.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Prepared statements",
                "permalink": "/sdk/database/prepared-statements"
              },
              "next": {
                "title": "Batching",
                "permalink": "/sdk/database/batching"
              }
            },
            {
              "unversionedId": "sdk/database/README",
              "id": "sdk/database/README",
              "title": "Database API",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/sdk/database/README.md",
              "sourceDirName": "sdk/database",
              "slug": "/sdk/database/",
              "permalink": "/sdk/database/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/database/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Database API",
                "description": "Get up an running with the Tableland SDK.",
                "synopsis": "The JavaScript / TypeScript SDK allows developers to create tables on their chain of choice. Connect, create, and then interact with your tables thereafter with table writes and reads. Dive into the basics for connecting, creating, writing, and reading from tables.",
                "keywords": [
                  "SQL query",
                  "Tableland SDK"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Overview",
                "permalink": "/sdk/"
              },
              "next": {
                "title": "Signers",
                "permalink": "/sdk/database/signers"
              }
            },
            {
              "unversionedId": "sdk/database/signers",
              "id": "sdk/database/signers",
              "title": "Signers",
              "description": "Access the Tableland network by first connecting to the base chain.",
              "source": "@site/docs/sdk/database/signers.md",
              "sourceDirName": "sdk/database",
              "slug": "/sdk/database/signers",
              "permalink": "/sdk/database/signers",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/database/signers.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Signers",
                "description": "Access the Tableland network by first connecting to the base chain.",
                "keywords": [
                  "read table",
                  "SQL query"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Database API",
                "permalink": "/sdk/database/"
              },
              "next": {
                "title": "Prepared statements",
                "permalink": "/sdk/database/prepared-statements"
              }
            },
            {
              "unversionedId": "sdk/database/timeouts",
              "id": "sdk/database/timeouts",
              "title": "Aborting statement method calls",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/sdk/database/timeouts.md",
              "sourceDirName": "sdk/database",
              "slug": "/sdk/database/timeouts",
              "permalink": "/sdk/database/timeouts",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/database/timeouts.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Aborting statement method calls",
                "sidebar_label": "Timeouts",
                "description": "Get up an running with the Tableland SDK."
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Type conversion",
                "permalink": "/sdk/database/type-conversion"
              },
              "next": {
                "title": "ORM support",
                "permalink": "/sdk/database/orm"
              }
            },
            {
              "unversionedId": "sdk/database/type-conversion",
              "id": "sdk/database/type-conversion",
              "title": "Type conversion",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/sdk/database/type-conversion.md",
              "sourceDirName": "sdk/database",
              "slug": "/sdk/database/type-conversion",
              "permalink": "/sdk/database/type-conversion",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/database/type-conversion.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Type conversion",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Batching",
                "permalink": "/sdk/database/batching"
              },
              "next": {
                "title": "Timeouts",
                "permalink": "/sdk/database/timeouts"
              }
            },
            {
              "unversionedId": "sdk/database/upgrading-from-legacy",
              "id": "sdk/database/upgrading-from-legacy",
              "title": "Upgrading from the legacy SDK",
              "description": "There are breaking changes from the JavaScript SDK v3 to v4â€”make sure you know the differences.",
              "source": "@site/docs/sdk/database/upgrading-from-legacy.md",
              "sourceDirName": "sdk/database",
              "slug": "/sdk/database/upgrading-from-legacy",
              "permalink": "/sdk/database/upgrading-from-legacy",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/database/upgrading-from-legacy.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Upgrading from the legacy SDK",
                "sidebar_label": "Legacy SDK",
                "description": "There are breaking changes from the JavaScript SDK v3 to v4â€”make sure you know the differences.",
                "keywords": [
                  "legacy"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "ORM support",
                "permalink": "/sdk/database/orm"
              },
              "next": {
                "title": "Validator API",
                "permalink": "/sdk/validator/"
              }
            },
            {
              "unversionedId": "sdk/errors",
              "id": "sdk/errors",
              "title": "Errors",
              "description": "Mutate your table values with additional access control.",
              "source": "@site/docs/sdk/errors.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/errors",
              "permalink": "/sdk/errors",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/errors.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Errors",
                "description": "Mutate your table values with additional access control.",
                "synopsis": "Table values can be mutated by the table owner or provisioned actors.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Registry API",
                "permalink": "/sdk/registry/"
              },
              "next": {
                "title": "FAQs",
                "permalink": "/sdk/sdk-faqs"
              }
            },
            {
              "unversionedId": "sdk/frameworks/reactjs",
              "id": "sdk/frameworks/reactjs",
              "title": "Use Tableland with React",
              "description": "Quickly set up a React application with Tableland by setting up an account and database connection.",
              "source": "@site/docs/sdk/frameworks/reactjs.md",
              "sourceDirName": "sdk/frameworks",
              "slug": "/sdk/frameworks/reactjs",
              "permalink": "/sdk/frameworks/reactjs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/frameworks/reactjs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Use Tableland with React",
                "sidebar_label": "React",
                "description": "Quickly set up a React application with Tableland by setting up an account and database connection.",
                "keywords": [
                  "quickstart",
                  "quickstarts",
                  "react"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "FAQs",
                "permalink": "/sdk/sdk-faqs"
              },
              "next": {
                "title": "wagmi",
                "permalink": "/sdk/frameworks/wagmi"
              }
            },
            {
              "unversionedId": "sdk/frameworks/wagmi",
              "id": "sdk/frameworks/wagmi",
              "title": "Use Tableland with wagmi",
              "description": "Quickly add and use wagmi with Tableland and React.",
              "source": "@site/docs/sdk/frameworks/wagmi.md",
              "sourceDirName": "sdk/frameworks",
              "slug": "/sdk/frameworks/wagmi",
              "permalink": "/sdk/frameworks/wagmi",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/frameworks/wagmi.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Use Tableland with wagmi",
                "sidebar_label": "wagmi",
                "description": "Quickly add and use wagmi with Tableland and React.",
                "keywords": [
                  "quickstart",
                  "quickstarts",
                  "react"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "React",
                "permalink": "/sdk/frameworks/reactjs"
              }
            },
            {
              "unversionedId": "sdk/polling",
              "id": "sdk/polling",
              "title": "polling",
              "description": "",
              "source": "@site/docs/sdk/polling.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/polling",
              "permalink": "/sdk/polling",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/polling.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {}
            },
            {
              "unversionedId": "sdk/README",
              "id": "sdk/README",
              "title": "Overview",
              "description": "Use the Tableland SDK in your JavaScript / TypeScript projects, with full Cloudflare D1 client compatibility.",
              "source": "@site/docs/sdk/README.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/",
              "permalink": "/sdk/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Use the Tableland SDK in your JavaScript / TypeScript projects, with full Cloudflare D1 client compatibility.",
                "synopsis": "TheÂ Tableland SDK provides a minimal client that implements the Cloudflare D1 Database interface on top of the Tableland network. It can be used as a drop-in replacement to work with many community-created D1 tools and libraries. It also comes with a set of helper utilities for working with Tableland.",
                "keywords": [
                  "sdk",
                  "javascript",
                  "typescript",
                  "web app",
                  "mobile app"
                ]
              },
              "sidebar": "sdk",
              "next": {
                "title": "Database API",
                "permalink": "/sdk/database/"
              }
            },
            {
              "unversionedId": "sdk/registry/README",
              "id": "sdk/registry/README",
              "title": "Registry API",
              "description": "Learn how to create tables from the SDK.",
              "source": "@site/docs/sdk/registry/README.md",
              "sourceDirName": "sdk/registry",
              "slug": "/sdk/registry/",
              "permalink": "/sdk/registry/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/registry/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Registry API",
                "description": "Learn how to create tables from the SDK.",
                "keywords": [
                  "create table"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Validator API",
                "permalink": "/sdk/validator/"
              },
              "next": {
                "title": "Errors",
                "permalink": "/sdk/errors"
              }
            },
            {
              "unversionedId": "sdk/sdk-faqs",
              "id": "sdk/sdk-faqs",
              "title": "SDK FAQs",
              "description": "Review commonly asked questions about the Tableland SDK.",
              "source": "@site/docs/sdk/sdk-faqs.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/sdk-faqs",
              "permalink": "/sdk/sdk-faqs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/sdk-faqs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SDK FAQs",
                "sidebar_label": "FAQs",
                "description": "Review commonly asked questions about the Tableland SDK.",
                "keywords": [
                  "faq",
                  "faqs"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Errors",
                "permalink": "/sdk/errors"
              },
              "next": {
                "title": "React",
                "permalink": "/sdk/frameworks/reactjs"
              }
            },
            {
              "unversionedId": "sdk/validator/README",
              "id": "sdk/validator/README",
              "title": "Validator API",
              "description": "The Validator API allows for direct access to a Tableland Validator node. This does not involve any on-chain actions and directly connects to a validator node.",
              "source": "@site/docs/sdk/validator/README.md",
              "sourceDirName": "sdk/validator",
              "slug": "/sdk/validator/",
              "permalink": "/sdk/validator/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/validator/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Validator API",
                "description": "The Validator API allows for direct access to a Tableland Validator node. This does not involve any on-chain actions and directly connects to a validator node.",
                "keywords": [
                  "create table"
                ]
              },
              "sidebar": "sdk",
              "previous": {
                "title": "Legacy SDK",
                "permalink": "/sdk/database/upgrading-from-legacy"
              },
              "next": {
                "title": "Registry API",
                "permalink": "/sdk/registry/"
              }
            },
            {
              "unversionedId": "smart-contracts/connect",
              "id": "smart-contracts/connect",
              "title": "Connecting to Tableland",
              "description": "Access the Tableland network by first connecting to the base chain.",
              "source": "@site/docs/smart-contracts/connect.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/connect",
              "permalink": "/smart-contracts/connect",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/connect.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Connecting to Tableland",
                "description": "Access the Tableland network by first connecting to the base chain.",
                "synopsis": "Tableland is an extension of the chains it supports. Namely, every table creation and write occurs through on-chain actions, so it is a requirement for every developer to connect and interact with a supported blockchain. From there, reads happen off-chain by way of directly accessing the Tableland node network.",
                "keywords": [
                  "read table",
                  "SQL query"
                ]
              }
            },
            {
              "unversionedId": "smart-contracts/create",
              "id": "smart-contracts/create",
              "title": "Creating tables",
              "description": "Learn how to create tables from the SDK.",
              "source": "@site/docs/smart-contracts/create.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/create",
              "permalink": "/smart-contracts/create",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/create.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Creating tables",
                "description": "Learn how to create tables from the SDK.",
                "synopsis": "All tables are created through on-chain actions that create a table (ERC721 token). The SDK abstracts this from the developer's point of view, but it's important to understand this context for why a chain connection is required for table creation.",
                "keywords": [
                  "create table"
                ]
              }
            },
            {
              "unversionedId": "smart-contracts/getting-started",
              "id": "smart-contracts/getting-started",
              "title": "Getting started",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/smart-contracts/getting-started.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/getting-started",
              "permalink": "/smart-contracts/getting-started",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/getting-started.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Getting started",
                "description": "Get up an running with the Tableland SDK.",
                "synopsis": "Dive into the basics for connecting, creating, writing, and reading from tables. More detailed information is provided in subsequent overviews, but the details provided here should allow developers to quickly understand where to start.",
                "keywords": [
                  "SQL query",
                  "Tableland SDK"
                ]
              }
            },
            {
              "unversionedId": "smart-contracts/read",
              "id": "smart-contracts/read",
              "title": "Reading tables",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/smart-contracts/read.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/read",
              "permalink": "/smart-contracts/read",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/read.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Reading tables",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "smart-contracts/README",
              "id": "smart-contracts/README",
              "title": "Overview",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/smart-contracts/README.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/",
              "permalink": "/smart-contracts/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Openly readable tables by your applications.",
                "synopsis": "The JavaScript / TypeScript SDK allows developers to create tables on their chain of choice. Connect, create, and then interact with your tables thereafter with table writes and reads.",
                "keywords": [
                  "SQL query",
                  "Tableland SDK"
                ]
              },
              "sidebar": "smartContracts"
            },
            {
              "unversionedId": "smart-contracts/write",
              "id": "smart-contracts/write",
              "title": "Writing to tables",
              "description": "Mutate your table values with additional access control.",
              "source": "@site/docs/smart-contracts/write.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/write",
              "permalink": "/smart-contracts/write",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/write.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Writing to tables",
                "description": "Mutate your table values with additional access control.",
                "synopsis": "Table values can be mutated by the table owner or provisioned actors.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "sql/access-control",
              "id": "sql/access-control",
              "title": "access-control",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/access-control.md",
              "sourceDirName": "sql",
              "slug": "/sql/access-control",
              "permalink": "/sql/access-control",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/access-control.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/creating-tables",
              "id": "sql/creating-tables",
              "title": "creating-tables",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/creating-tables.md",
              "sourceDirName": "sql",
              "slug": "/sql/creating-tables",
              "permalink": "/sql/creating-tables",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/creating-tables.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/read-queries",
              "id": "sql/read-queries",
              "title": "read-queries",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/read-queries.md",
              "sourceDirName": "sql",
              "slug": "/sql/read-queries",
              "permalink": "/sql/read-queries",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/read-queries.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/README",
              "id": "sql/README",
              "title": "Tableland SQL Language Specification",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/README.md",
              "sourceDirName": "sql",
              "slug": "/sql/",
              "permalink": "/sql/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/sql-spec",
              "id": "sql/sql-spec",
              "title": "sql-spec",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/sql-spec.md",
              "sourceDirName": "sql",
              "slug": "/sql/sql-spec",
              "permalink": "/sql/sql-spec",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/sql-spec.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "hide_title": true,
                "sidebar_label": "SQL specification",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/write-queries",
              "id": "sql/write-queries",
              "title": "write-queries",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/write-queries.md",
              "sourceDirName": "sql",
              "slug": "/sql/write-queries",
              "permalink": "/sql/write-queries",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/write-queries.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "tools/local-tableland",
              "id": "tools/local-tableland",
              "title": "Local development & testing",
              "description": "Build with Local Tableland to quickly iterate with Tableland using a local environment.",
              "source": "@site/docs/tools/local-tableland.md",
              "sourceDirName": "tools",
              "slug": "/tools/local-tableland",
              "permalink": "/tools/local-tableland",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tools/local-tableland.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Local development & testing",
                "sidebar_label": "Local Tableland",
                "description": "Build with Local Tableland to quickly iterate with Tableland using a local environment.",
                "synopsis": "Developers can leverage a local-only instance of the Tableland network that spins up a local Hardhat node in the process. This allows for quickly iterating while developing (create, write, and read local tables) and also allows for integrating Local Tableland into your testing flow.",
                "keywords": [
                  "local tableland",
                  "hardhat"
                ]
              }
            },
            {
              "unversionedId": "tools/README",
              "id": "tools/README",
              "title": "Development tools",
              "description": "Leverage various tooling to ease the developer experience.",
              "source": "@site/docs/tools/README.md",
              "sourceDirName": "tools",
              "slug": "/tools/",
              "permalink": "/tools/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tools/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Development tools",
                "sidebar_label": "Tools",
                "description": "Leverage various tooling to ease the developer experience.",
                "synopsis": "There are quite a few different tools that can be used while developing with Tableland. Each of these are intended to further smooth the developer experience and make it easier to use the various APIs and clients built on top of the protocol.",
                "keywords": [
                  "tooling"
                ]
              }
            },
            {
              "unversionedId": "tutorials/deploying-nft-polygon",
              "id": "tutorials/deploying-nft-polygon",
              "title": "Deploying an NFT on Polygon",
              "description": "Take local JSON files, parse them into tables, and deploy the collection on Polygon.",
              "source": "@site/docs/tutorials/deploying-nft-polygon.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/deploying-nft-polygon",
              "permalink": "/tutorials/deploying-nft-polygon",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/deploying-nft-polygon.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Deploying an NFT on Polygon",
                "sidebar_label": "JSON files to NFT metadata",
                "description": "Take local JSON files, parse them into tables, and deploy the collection on Polygon.",
                "keywords": [
                  "polygon",
                  "json",
                  "dynamic nft"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Creating a dynamic NFT with p5.js",
                "permalink": "/tutorials/dynamic-nft-p5js"
              },
              "next": {
                "title": "Dynamic NFT with Chainlink",
                "permalink": "/tutorials/dynamic-nft-chainlink"
              }
            },
            {
              "unversionedId": "tutorials/dynamic-nft-chainlink",
              "id": "tutorials/dynamic-nft-chainlink",
              "title": "Dynamic NFT with Chainlink Automation",
              "description": "Leverage Chainlink for automated NFT mutations.",
              "source": "@site/docs/tutorials/dynamic-nft-chainlink.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/dynamic-nft-chainlink",
              "permalink": "/tutorials/dynamic-nft-chainlink",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-chainlink.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Dynamic NFT with Chainlink Automation",
                "sidebar_label": "Dynamic NFT with Chainlink",
                "description": "Leverage Chainlink for automated NFT mutations.",
                "synopsis": "The Chainlink network can help make autonomous on-chain calls and enable truly dynamic NFTs. All of the logic can be created with smart contracts and registered in the Chainlink automation portal, enabling dynamic NFTs using on-chain logic, only.",
                "keywords": [
                  "chainlink",
                  "dynamic nft"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "JSON files to NFT metadata",
                "permalink": "/tutorials/deploying-nft-polygon"
              },
              "next": {
                "title": "Table reads with Chainlink + Arbitrum",
                "permalink": "/tutorials/table-reads-chainlink"
              }
            },
            {
              "unversionedId": "tutorials/dynamic-nft-p5js",
              "id": "tutorials/dynamic-nft-p5js",
              "title": "Creating a dynamic NFT with p5.js",
              "description": "Use p5.js to render data from an NFT that holds global game state in a table.",
              "source": "@site/docs/tutorials/dynamic-nft-p5js.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/dynamic-nft-p5js",
              "permalink": "/tutorials/dynamic-nft-p5js",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-p5js.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Creating a dynamic NFT with p5.js",
                "description": "Use p5.js to render data from an NFT that holds global game state in a table.",
                "synopsis": "We want to now write a simple web app that will be used to dynamically render a single NFT in our collection. When the NFT renders, the web app should check the requested token, grab the latest data from Tableland, and render some dynamic content.",
                "keywords": [
                  "tutorial",
                  "solidity",
                  "dynamic NFT"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Build a dynamic NFT in Solidity",
                "permalink": "/tutorials/dynamic-nft-solidity"
              },
              "next": {
                "title": "JSON files to NFT metadata",
                "permalink": "/tutorials/deploying-nft-polygon"
              }
            },
            {
              "unversionedId": "tutorials/dynamic-nft-solidity",
              "id": "tutorials/dynamic-nft-solidity",
              "title": "Build a dynamic NFT in Solidity",
              "description": "Create an on-chain game that uses SQL queries to create and populate a table of game state.",
              "source": "@site/docs/tutorials/dynamic-nft-solidity.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/dynamic-nft-solidity",
              "permalink": "/tutorials/dynamic-nft-solidity",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-solidity.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Build a dynamic NFT in Solidity",
                "description": "Create an on-chain game that uses SQL queries to create and populate a table of game state.",
                "synopsis": "Tableland enables ownership & on-chain rules to dictate table state mutation. For every mutation, the data is accessible with off-chain queries that can be displayed in an interface, such as an NFT-based game board. This tutorial walks through the basics of Solidity ERC721s and an app with shared state.",
                "keywords": [
                  "tutorial",
                  "solidity",
                  "dynamic NFT",
                  "p5.js"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Overview",
                "permalink": "/tutorials/"
              },
              "next": {
                "title": "Creating a dynamic NFT with p5.js",
                "permalink": "/tutorials/dynamic-nft-p5js"
              }
            },
            {
              "unversionedId": "tutorials/README",
              "id": "tutorials/README",
              "title": "Overview",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/tutorials/README.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/",
              "permalink": "/tutorials/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "tutorials",
              "next": {
                "title": "Build a dynamic NFT in Solidity",
                "permalink": "/tutorials/dynamic-nft-solidity"
              }
            },
            {
              "unversionedId": "tutorials/table-reads-chainlink",
              "id": "tutorials/table-reads-chainlink",
              "title": "On-Chain reads with Chainlink + Arbitrum",
              "description": "Use Chainlinkâ€™s node operator network to get table state back on-chain to the Arbitrum network.",
              "source": "@site/docs/tutorials/table-reads-chainlink.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/table-reads-chainlink",
              "permalink": "/tutorials/table-reads-chainlink",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/table-reads-chainlink.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "On-Chain reads with Chainlink + Arbitrum",
                "sidebar_label": "Table reads with Chainlink + Arbitrum",
                "description": "Use Chainlinkâ€™s node operator network to get table state back on-chain to the Arbitrum network.",
                "keywords": [
                  "chainlink",
                  "dynamic nft"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Dynamic NFT with Chainlink",
                "permalink": "/tutorials/dynamic-nft-chainlink"
              }
            },
            {
              "unversionedId": "validator-api/endpoints",
              "id": "validator-api/endpoints",
              "title": "Endpoints",
              "description": "Make API calls to get table and validator information.",
              "source": "@site/docs/validator-api/endpoints.md",
              "sourceDirName": "validator-api",
              "slug": "/validator-api/endpoints",
              "permalink": "/validator-api/endpoints",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/validator-api/endpoints.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Endpoints",
                "description": "Make API calls to get table and validator information.",
                "keywords": [
                  "validator api",
                  "rest api"
                ]
              },
              "sidebar": "validatorApi",
              "previous": {
                "title": "Get started",
                "permalink": "/validator-api/"
              },
              "next": {
                "title": "Errors",
                "permalink": "/validator-api/errors"
              }
            },
            {
              "unversionedId": "validator-api/errors",
              "id": "validator-api/errors",
              "title": "Errors",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/validator-api/errors.md",
              "sourceDirName": "validator-api",
              "slug": "/validator-api/errors",
              "permalink": "/validator-api/errors",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/validator-api/errors.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Errors",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "validatorApi",
              "previous": {
                "title": "Endpoints",
                "permalink": "/validator-api/endpoints"
              }
            },
            {
              "unversionedId": "validator-api/README",
              "id": "validator-api/README",
              "title": "Get started",
              "description": "Leverage REST APIs to interact directly with Tableland network validator nodes.",
              "source": "@site/docs/validator-api/README.md",
              "sourceDirName": "validator-api",
              "slug": "/validator-api/",
              "permalink": "/validator-api/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/validator-api/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Get started",
                "description": "Leverage REST APIs to interact directly with Tableland network validator nodes.",
                "synopsis": "Table reads occur at a gatewayâ€”use SQL to compose data into the right format. Additionally, other APIs are available to retrieve validator-specific information.",
                "keywords": [
                  "rest api",
                  "validator api"
                ]
              },
              "sidebar": "validatorApi",
              "next": {
                "title": "Endpoints",
                "permalink": "/validator-api/endpoints"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "home": [
              {
                "type": "doc",
                "id": "landing",
                "className": "sidebar-landing"
              },
              {
                "type": "doc",
                "id": "fundamentals/README",
                "label": "Fundamentals",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none landing-section\">BUILD</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "sdk/README",
                "label": "SDK",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "smart-contracts/README",
                "label": "Smart contracts",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "validator-api/README",
                "label": "Validator API",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "cli/README",
                "label": "CLI",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none landing-section\">WALKTHROUGHS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "tutorials/README",
                "label": "Tutorials",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none landing-section\">REFERENCE</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "reference/sql-specification",
                "label": "SQL specification",
                "className": "sidebar-landing",
                "translatable": true
              }
            ],
            "getStarted": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Fundamentals</h4>",
                "defaultStyle": true
              },
              {
                "type": "category",
                "label": "Introduction",
                "collapsed": true,
                "link": {
                  "type": "doc",
                  "id": "fundamentals/README"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "fundamentals/what-is-tableland"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/considerations-tradeoffs"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/databases"
                  }
                ],
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Quickstarts",
                "link": {
                  "type": "doc",
                  "id": "fundamentals/quickstarts/README"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "fundamentals/quickstarts/sdk-quickstart"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/quickstarts/smart-contract-quickstart"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/quickstarts/cli-quickstart"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/quickstarts/api-quickstart"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">ARCHITECTURE</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/protocol-design"
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/table-token"
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/limits"
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/gateway"
              },
              {
                "type": "category",
                "label": "Chains",
                "link": {
                  "type": "doc",
                  "id": "fundamentals/chains/README"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/ethereum"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/arbitrum"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/optimism"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/polygon"
                  },
                  {
                    "type": "doc",
                    "id": "fundamentals/chains/local"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "doc",
                "id": "fundamentals/architecture/contracts"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">ABOUT</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/open-beta"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/use-cases"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/roadmap"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/general-faqs"
              },
              {
                "type": "doc",
                "id": "fundamentals/about/repos"
              }
            ],
            "sdk": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">SDK</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "sdk/README"
              },
              {
                "type": "category",
                "label": "Database API",
                "link": {
                  "type": "doc",
                  "id": "sdk/database/README"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "sdk/database/signers"
                  },
                  {
                    "type": "doc",
                    "id": "sdk/database/prepared-statements"
                  },
                  {
                    "type": "doc",
                    "id": "sdk/database/query-statement-methods"
                  },
                  {
                    "type": "doc",
                    "id": "sdk/database/batching"
                  },
                  {
                    "type": "doc",
                    "id": "sdk/database/type-conversion"
                  },
                  {
                    "type": "doc",
                    "id": "sdk/database/timeouts"
                  },
                  {
                    "type": "doc",
                    "id": "sdk/database/orm"
                  },
                  {
                    "type": "doc",
                    "id": "sdk/database/upgrading-from-legacy"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "doc",
                "label": "Validator API",
                "id": "sdk/validator/README"
              },
              {
                "type": "doc",
                "label": "Registry API",
                "id": "sdk/registry/README"
              },
              {
                "type": "doc",
                "id": "sdk/errors"
              },
              {
                "type": "doc",
                "id": "sdk/sdk-faqs"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">FRAMEWORKS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "sdk/frameworks/reactjs"
              },
              {
                "type": "doc",
                "id": "sdk/frameworks/wagmi"
              }
            ],
            "smartContracts": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Smart contracts</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "smart-contracts/README"
              }
            ],
            "cli": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">CLI</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "cli/README"
              },
              {
                "type": "doc",
                "id": "cli/commands"
              },
              {
                "type": "doc",
                "id": "cli/errors"
              }
            ],
            "validatorApi": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Validator API</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "validator-api/README"
              },
              {
                "type": "doc",
                "id": "validator-api/endpoints"
              },
              {
                "type": "doc",
                "id": "validator-api/errors"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">GUIDES</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              }
            ],
            "tutorials": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Tutorials</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "tutorials/README"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">NFTS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "tutorials/dynamic-nft-solidity"
              },
              {
                "type": "doc",
                "id": "tutorials/dynamic-nft-p5js"
              },
              {
                "type": "doc",
                "id": "tutorials/deploying-nft-polygon"
              },
              {
                "type": "doc",
                "id": "tutorials/dynamic-nft-chainlink"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">UTILITY</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "tutorials/table-reads-chainlink"
              }
            ],
            "sqlSpecification": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Reference</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "reference/sql-specification"
              }
            ],
            "contribute": [
              {
                "type": "link",
                "label": "Back to home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Contribute</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "contribute/README"
              },
              {
                "type": "doc",
                "id": "contribute/style-guide"
              },
              {
                "type": "doc",
                "id": "contribute/maintainers"
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "welcome",
          "metadata": {
            "permalink": "/blog/welcome",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2021-08-26-welcome/index.md",
            "source": "@site/blog/2021-08-26-welcome/index.md",
            "title": "Welcome",
            "description": "Docusaurus blogging features are powered by the blog plugin.",
            "date": "2021-08-26T00:00:00.000Z",
            "formattedDate": "August 26, 2021",
            "tags": [
              {
                "label": "facebook",
                "permalink": "/blog/tags/facebook"
              },
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.405,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "SÃ©bastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              },
              {
                "name": "Yangshun Tay",
                "title": "Front End Engineer @ Facebook",
                "url": "https://github.com/yangshun",
                "imageURL": "https://github.com/yangshun.png",
                "key": "yangshun"
              }
            ],
            "frontMatter": {
              "slug": "welcome",
              "title": "Welcome",
              "authors": [
                "slorber",
                "yangshun"
              ],
              "tags": [
                "facebook",
                "hello",
                "docusaurus"
              ]
            },
            "nextItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            }
          },
          "content": "[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\n\nSimply add Markdown files (or folders) to the `blog` directory.\n\nRegular blog authors can be added to `authors.yml`.\n\nThe blog post date can be extracted from filenames, such as:\n\n- `2019-05-30-welcome.md`\n- `2019-05-30-welcome/index.md`\n\nA blog post folder can be convenient to co-locate blog post images:\n\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\n\nThe blog supports tags as well!\n\n**And if you don't want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."
        },
        {
          "id": "mdx-blog-post",
          "metadata": {
            "permalink": "/blog/mdx-blog-post",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2021-08-01-mdx-blog-post.mdx",
            "source": "@site/blog/2021-08-01-mdx-blog-post.mdx",
            "title": "MDX Blog Post",
            "description": "Blog posts support Docusaurus Markdown features, such as MDX.",
            "date": "2021-08-01T00:00:00.000Z",
            "formattedDate": "August 1, 2021",
            "tags": [
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.175,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "SÃ©bastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              }
            ],
            "frontMatter": {
              "slug": "mdx-blog-post",
              "title": "MDX Blog Post",
              "authors": [
                "slorber"
              ],
              "tags": [
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Welcome",
              "permalink": "/blog/welcome"
            },
            "nextItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\n\n:::tip\n\nUse the power of React to create interactive blog posts.\n\n```js\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n```\n\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n\n:::"
        },
        {
          "id": "long-blog-post",
          "metadata": {
            "permalink": "/blog/long-blog-post",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2019-05-29-long-blog-post.md",
            "source": "@site/blog/2019-05-29-long-blog-post.md",
            "title": "Long Blog Post",
            "description": "This is the summary of a very long blog post,",
            "date": "2019-05-29T00:00:00.000Z",
            "formattedDate": "May 29, 2019",
            "tags": [
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 2.05,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Endilie Yacop Sucipto",
                "title": "Maintainer of Docusaurus",
                "url": "https://github.com/endiliey",
                "imageURL": "https://github.com/endiliey.png",
                "key": "endi"
              }
            ],
            "frontMatter": {
              "slug": "long-blog-post",
              "title": "Long Blog Post",
              "authors": "endi",
              "tags": [
                "hello",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            },
            "nextItem": {
              "title": "First Blog Post",
              "permalink": "/blog/first-blog-post"
            }
          },
          "content": "This is the summary of a very long blog post,\n\nUse a `<!--` `truncate` `-->` comment to limit blog post size in the list view.\n\n<!--truncate-->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        },
        {
          "id": "first-blog-post",
          "metadata": {
            "permalink": "/blog/first-blog-post",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2019-05-28-first-blog-post.md",
            "source": "@site/blog/2019-05-28-first-blog-post.md",
            "title": "First Blog Post",
            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet",
            "date": "2019-05-28T00:00:00.000Z",
            "formattedDate": "May 28, 2019",
            "tags": [
              {
                "label": "hola",
                "permalink": "/blog/tags/hola"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.12,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              }
            ],
            "frontMatter": {
              "slug": "first-blog-post",
              "title": "First Blog Post",
              "authors": {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              },
              "tags": [
                "hola",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 4,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/blog/tags/facebook": {
          "label": "facebook",
          "items": [
            "welcome"
          ],
          "permalink": "/blog/tags/facebook",
          "pages": [
            {
              "items": [
                "welcome"
              ],
              "metadata": {
                "permalink": "/blog/tags/facebook",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hello": {
          "label": "hello",
          "items": [
            "welcome",
            "long-blog-post"
          ],
          "permalink": "/blog/tags/hello",
          "pages": [
            {
              "items": [
                "welcome",
                "long-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hello",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/docusaurus": {
          "label": "docusaurus",
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "permalink": "/blog/tags/docusaurus",
          "pages": [
            {
              "items": [
                "welcome",
                "mdx-blog-post",
                "long-blog-post",
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/docusaurus",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 4,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hola": {
          "label": "hola",
          "items": [
            "first-blog-post"
          ],
          "permalink": "/blog/tags/hola",
          "pages": [
            {
              "items": [
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hola",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": []
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-plugin-dotenv": {},
  "@easyops-cn/docusaurus-search-local": {},
  "docusaurus-theme-mermaid": {},
  "docusaurus-theme-live-codeblock": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}