{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/",
          "tagsPath": "/tags",
          "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs",
          "editUrlLocalized": "https://github.com/tablelandnetwork/docs/tree/main/i18n/en/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/dtb/tbl/docs/config/sidebars.js",
          "contentPath": "/Users/dtb/tbl/docs/docs",
          "contentPathLocalized": "/Users/dtb/tbl/docs/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "cli/connect",
              "id": "cli/connect",
              "title": "Connecting to Tableland",
              "description": "Access the Tableland network by first connecting to the base chain.",
              "source": "@site/docs/cli/connect.md",
              "sourceDirName": "cli",
              "slug": "/cli/connect",
              "permalink": "/cli/connect",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/connect.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Connecting to Tableland",
                "description": "Access the Tableland network by first connecting to the base chain.",
                "synopsis": "Tableland is an extension of the chains it supports. Namely, every table creation and write occurs through on-chain actions, so it is a requirement for every developer to connect and interact with a supported blockchain. From there, reads happen off-chain by way of directly accessing the Tableland node network.",
                "keywords": [
                  "read table",
                  "SQL query"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Getting started",
                "permalink": "/cli/getting-started"
              },
              "next": {
                "title": "Creating tables",
                "permalink": "/cli/create"
              }
            },
            {
              "unversionedId": "cli/create",
              "id": "cli/create",
              "title": "Creating tables",
              "description": "Learn how to create tables from the SDK.",
              "source": "@site/docs/cli/create.md",
              "sourceDirName": "cli",
              "slug": "/cli/create",
              "permalink": "/cli/create",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/create.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Creating tables",
                "description": "Learn how to create tables from the SDK.",
                "synopsis": "All tables are created through on-chain actions that create a table (ERC721 token). The SDK abstracts this from the developer's point of view, but it's important to understand this context for why a chain connection is required for table creation.",
                "keywords": [
                  "create table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Connecting to Tableland",
                "permalink": "/cli/connect"
              },
              "next": {
                "title": "Writing to tables",
                "permalink": "/cli/write"
              }
            },
            {
              "unversionedId": "cli/getting-started",
              "id": "cli/getting-started",
              "title": "Getting started",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/cli/getting-started.md",
              "sourceDirName": "cli",
              "slug": "/cli/getting-started",
              "permalink": "/cli/getting-started",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/getting-started.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Getting started",
                "description": "Get up an running with the Tableland SDK.",
                "synopsis": "Dive into the basics for connecting, creating, writing, and reading from tables. More detailed information is provided in subsequent overviews, but the details provided here should allow developers to quickly understand where to start.",
                "keywords": [
                  "SQL query",
                  "Tableland SDK"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Quick start",
                "permalink": "/cli/"
              },
              "next": {
                "title": "Connecting to Tableland",
                "permalink": "/cli/connect"
              }
            },
            {
              "unversionedId": "cli/read",
              "id": "cli/read",
              "title": "Reading tables",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/cli/read.md",
              "sourceDirName": "cli",
              "slug": "/cli/read",
              "permalink": "/cli/read",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/read.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Reading tables",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Writing to tables",
                "permalink": "/cli/write"
              },
              "next": {
                "title": "Overview",
                "permalink": "/smart-contracts/"
              }
            },
            {
              "unversionedId": "cli/README",
              "id": "cli/README",
              "title": "Quick start",
              "description": "Experiment with creating, editing, and querying tables from the comfort of the command line.",
              "source": "@site/docs/cli/README.md",
              "sourceDirName": "cli",
              "slug": "/cli/",
              "permalink": "/cli/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Quick start",
                "description": "Experiment with creating, editing, and querying tables from the comfort of the command line.",
                "synopsis": "The JavaScript / TypeScript SDK allows developers to create tables on their chain of choice. Connect, create, and then interact with your tables thereafter with table writes and reads.",
                "keywords": [
                  "CLI",
                  "command line"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Errors",
                "permalink": "/validator-api/errors"
              },
              "next": {
                "title": "Getting started",
                "permalink": "/cli/getting-started"
              }
            },
            {
              "unversionedId": "cli/write",
              "id": "cli/write",
              "title": "Writing to tables",
              "description": "Mutate your table values with additional access control.",
              "source": "@site/docs/cli/write.md",
              "sourceDirName": "cli",
              "slug": "/cli/write",
              "permalink": "/cli/write",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/cli/write.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Writing to tables",
                "description": "Mutate your table values with additional access control.",
                "synopsis": "Table values can be mutated by the table owner or provisioned actors.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Creating tables",
                "permalink": "/cli/create"
              },
              "next": {
                "title": "Reading tables",
                "permalink": "/cli/read"
              }
            },
            {
              "unversionedId": "concepts/faqs",
              "id": "concepts/faqs",
              "title": "FAQs",
              "description": "Review commonly asked questions about the Tableland network and community.",
              "source": "@site/docs/concepts/faqs.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/faqs",
              "permalink": "/concepts/faqs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/faqs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "FAQs",
                "description": "Review commonly asked questions about the Tableland network and community.",
                "keywords": [
                  "faq",
                  "faqs"
                ]
              }
            },
            {
              "unversionedId": "concepts/network/considerations-tradeoffs",
              "id": "concepts/network/considerations-tradeoffs",
              "title": "Considerations & tradeoffs",
              "description": "Tableland offers a new solution to suboptimal web3 data storage standards.",
              "source": "@site/docs/concepts/network/considerations-tradeoffs.md",
              "sourceDirName": "concepts/network",
              "slug": "/concepts/network/considerations-tradeoffs",
              "permalink": "/concepts/network/considerations-tradeoffs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/network/considerations-tradeoffs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Considerations & tradeoffs",
                "sidebar_label": "Why use Tableland?",
                "description": "Tableland offers a new solution to suboptimal web3 data storage standards.",
                "synopsis": "Selecting the chain to deploy tables on has a significant impact on the subsequent usage of the table. But before selecting a chain to then use Tablelandâ€™s capabilities, it may be helpful to consider the alternatives to Tableland in the first place."
              },
              "sidebar": "concepts",
              "previous": {
                "title": "What is Tableland?",
                "permalink": "/concepts/network/what-is-tableland"
              },
              "next": {
                "title": "Hybrid state",
                "permalink": "/concepts/network/tableland-state"
              }
            },
            {
              "unversionedId": "concepts/network/open-beta",
              "id": "concepts/network/open-beta",
              "title": "Open beta",
              "description": "Use Tableland on testnet and mainnet chains while the protocol is in development.",
              "source": "@site/docs/concepts/network/open-beta.md",
              "sourceDirName": "concepts/network",
              "slug": "/concepts/network/open-beta",
              "permalink": "/concepts/network/open-beta",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/network/open-beta.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Open beta",
                "description": "Use Tableland on testnet and mainnet chains while the protocol is in development.",
                "synopsis": "The Tableland network is actively being developed and plans to launch a production (mainnet) in 2024. Prior to that launch, the protocol can still be used on supported chains, but its important to note what's in store in the future.",
                "keywords": [
                  "open beta",
                  "production"
                ]
              },
              "sidebar": "concepts",
              "previous": {
                "title": "Use cases",
                "permalink": "/concepts/network/use-cases"
              }
            },
            {
              "unversionedId": "concepts/network/tableland-state",
              "id": "concepts/network/tableland-state",
              "title": "Data availability & network state",
              "description": "Understand the basic model behind on-chain writes and off-chain reads.",
              "source": "@site/docs/concepts/network/tableland-state.md",
              "sourceDirName": "concepts/network",
              "slug": "/concepts/network/tableland-state",
              "permalink": "/concepts/network/tableland-state",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/network/tableland-state.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Data availability & network state",
                "sidebar_label": "Hybrid state",
                "description": "Understand the basic model behind on-chain writes and off-chain reads.",
                "synopsis": "Blockchains are designed so that anyone can run some arbitrary programs and share computation; they are not designed to be databases. With a hybrid model, applications can inherit components (like security & execution) from the host chain while making the data itself dynamic & accessible on the Tableland network.",
                "keywords": [
                  "Tableland",
                  "about"
                ]
              },
              "sidebar": "concepts",
              "previous": {
                "title": "Why use Tableland?",
                "permalink": "/concepts/network/considerations-tradeoffs"
              },
              "next": {
                "title": "Use cases",
                "permalink": "/concepts/network/use-cases"
              }
            },
            {
              "unversionedId": "concepts/network/use-cases",
              "id": "concepts/network/use-cases",
              "title": "Use cases",
              "description": "A series of general use cases to consider.",
              "source": "@site/docs/concepts/network/use-cases.md",
              "sourceDirName": "concepts/network",
              "slug": "/concepts/network/use-cases",
              "permalink": "/concepts/network/use-cases",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/network/use-cases.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Use cases",
                "description": "A series of general use cases to consider.",
                "synopsis": "This page identifies some potential use cases. It is non-exhaustive but provides guidelines / considerations for where developers can use Tableland, and as always, consider the host chain as part of the use case criteria (e.g., Ethereum is more expensive to write to than an L2).",
                "keywords": [
                  "use cases"
                ]
              },
              "sidebar": "concepts",
              "previous": {
                "title": "Hybrid state",
                "permalink": "/concepts/network/tableland-state"
              },
              "next": {
                "title": "Open beta",
                "permalink": "/concepts/network/open-beta"
              }
            },
            {
              "unversionedId": "concepts/network/what-is-tableland",
              "id": "concepts/network/what-is-tableland",
              "title": "What is Tableland?",
              "description": "Learn about the basics of the Tableland network.",
              "source": "@site/docs/concepts/network/what-is-tableland.md",
              "sourceDirName": "concepts/network",
              "slug": "/concepts/network/what-is-tableland",
              "permalink": "/concepts/network/what-is-tableland",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/network/what-is-tableland.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "What is Tableland?",
                "description": "Learn about the basics of the Tableland network.",
                "synopsis": "Tableland is a web3 native SQL database that can be used on EVM chains like Ethereum and Layer 2 solutions. It helps extend data storage using SQL while offloading accessibility to a decentralized network of validator nodes that watch the host chain for updates, which is where SQL mutation data is made available.",
                "keywords": [
                  "Tableland",
                  "about"
                ]
              },
              "sidebar": "concepts",
              "previous": {
                "title": "Overview",
                "permalink": "/concepts/"
              },
              "next": {
                "title": "Why use Tableland?",
                "permalink": "/concepts/network/considerations-tradeoffs"
              }
            },
            {
              "unversionedId": "concepts/README",
              "id": "concepts/README",
              "title": "Overview",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/README.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/",
              "permalink": "/concepts/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "concepts",
              "next": {
                "title": "What is Tableland?",
                "permalink": "/concepts/network/what-is-tableland"
              }
            },
            {
              "unversionedId": "concepts/related/databases",
              "id": "concepts/related/databases",
              "title": "Databases & SQL",
              "description": "Briefly look under the hood at relational databases.",
              "source": "@site/docs/concepts/related/databases.md",
              "sourceDirName": "concepts/related",
              "slug": "/concepts/related/databases",
              "permalink": "/concepts/related/databases",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/related/databases.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Databases & SQL",
                "description": "Briefly look under the hood at relational databases.",
                "synopsis": "The network is akin to a bunch of databases communicating & agreeing with one another about things that happened on-chain. Although it's an oversimplification, the core premise behind it all is a relational database, which isn't flashy by any means but adds a new dimension to web3 storage.",
                "keywords": [
                  "databases",
                  "relational database"
                ]
              }
            },
            {
              "unversionedId": "concepts/related/README",
              "id": "concepts/related/README",
              "title": "Related topics",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/related/README.md",
              "sourceDirName": "concepts/related",
              "slug": "/concepts/related/",
              "permalink": "/concepts/related/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/related/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Related topics",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              }
            },
            {
              "unversionedId": "concepts/related/roadmap",
              "id": "concepts/related/roadmap",
              "title": "Vision & roadmap",
              "description": "The protocol is still being developed and progressively decentralized.",
              "source": "@site/docs/concepts/related/roadmap.md",
              "sourceDirName": "concepts/related",
              "slug": "/concepts/related/roadmap",
              "permalink": "/concepts/related/roadmap",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/related/roadmap.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Vision & roadmap",
                "sidebar_label": "Roadmap",
                "description": "The protocol is still being developed and progressively decentralized.",
                "synopsis": "Tableland's inception came in late 2021. It's consistently growing in terms of the core protocol itself and development activity on top of the protocol, and there is still plenty in store in the coming months and years.",
                "keywords": [
                  "roadmap",
                  "vision"
                ]
              }
            },
            {
              "unversionedId": "concepts/related/uri-encoding",
              "id": "concepts/related/uri-encoding",
              "title": "URI encoding",
              "description": "SQL queries written at the query endpoint must have the proper encoding.",
              "source": "@site/docs/concepts/related/uri-encoding.md",
              "sourceDirName": "concepts/related",
              "slug": "/concepts/related/uri-encoding",
              "permalink": "/concepts/related/uri-encoding",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/related/uri-encoding.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "URI encoding",
                "description": "SQL queries written at the query endpoint must have the proper encoding.",
                "synopsis": "Developer can write SQL read statement using the query REST API. This creates a truly flexible API where the response object can have fully custom keys that are hydrated with query values.",
                "keywords": [
                  "uri encoding"
                ]
              }
            },
            {
              "unversionedId": "concepts/sql/access-control",
              "id": "concepts/sql/access-control",
              "title": "Grant or revoke permissions",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/access-control.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/access-control",
              "permalink": "/concepts/sql/access-control",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/access-control.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Grant or revoke permissions",
                "sidebar_label": "Access control",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "Reading table data",
                "permalink": "/concepts/sql/read"
              },
              "next": {
                "title": "Auto-incrementing",
                "permalink": "/concepts/sql/incrementing-values"
              }
            },
            {
              "unversionedId": "concepts/sql/create-a-table",
              "id": "concepts/sql/create-a-table",
              "title": "Create a table",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/create-a-table.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/create-a-table",
              "permalink": "/concepts/sql/create-a-table",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/create-a-table.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Create a table",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "Quick start",
                "permalink": "/concepts/sql/"
              },
              "next": {
                "title": "Mutating data",
                "permalink": "/concepts/sql/mutating-data"
              }
            },
            {
              "unversionedId": "concepts/sql/delete",
              "id": "concepts/sql/delete",
              "title": "Deleting table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/delete.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/delete",
              "permalink": "/concepts/sql/delete",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/delete.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Deleting table data",
                "sidebar_label": "DELETE",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "UPSERT",
                "permalink": "/concepts/sql/upsert"
              },
              "next": {
                "title": "Reading table data",
                "permalink": "/concepts/sql/read"
              }
            },
            {
              "unversionedId": "concepts/sql/incrementing-values",
              "id": "concepts/sql/incrementing-values",
              "title": "Incrementing values automatically",
              "description": "Tableland allows developers to automatically increment a cell, with some restrictions.",
              "source": "@site/docs/concepts/sql/incrementing-values.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/incrementing-values",
              "permalink": "/concepts/sql/incrementing-values",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/incrementing-values.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Incrementing values automatically",
                "sidebar_label": "Auto-incrementing",
                "description": "Tableland allows developers to automatically increment a cell, with some restrictions.",
                "synopsis": "Developers often want to insert a row with a cell that automatically increases by a value of 1. There are some intricacies to be aware of, but this is fully possible with Tableland SQL and makes it easy to insert a row with an automatically generated identifier.",
                "keywords": [
                  "auto-increment",
                  "autoincrement"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "Access control",
                "permalink": "/concepts/sql/access-control"
              },
              "next": {
                "title": "SQL specification",
                "permalink": "/concepts/sql/sql-spec"
              }
            },
            {
              "unversionedId": "concepts/sql/insert",
              "id": "concepts/sql/insert",
              "title": "Inserting table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/insert.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/insert",
              "permalink": "/concepts/sql/insert",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/insert.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Inserting table data",
                "sidebar_label": "INSERT",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "Mutating data",
                "permalink": "/concepts/sql/mutating-data"
              },
              "next": {
                "title": "UPDATE",
                "permalink": "/concepts/sql/update"
              }
            },
            {
              "unversionedId": "concepts/sql/mutating-data",
              "id": "concepts/sql/mutating-data",
              "title": "Mutating table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/mutating-data.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/mutating-data",
              "permalink": "/concepts/sql/mutating-data",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/mutating-data.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Mutating table data",
                "sidebar_label": "Mutating data",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "Create a table",
                "permalink": "/concepts/sql/create-a-table"
              },
              "next": {
                "title": "INSERT",
                "permalink": "/concepts/sql/insert"
              }
            },
            {
              "unversionedId": "concepts/sql/read",
              "id": "concepts/sql/read",
              "title": "Reading table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/read.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/read",
              "permalink": "/concepts/sql/read",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/read.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Reading table data",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "DELETE",
                "permalink": "/concepts/sql/delete"
              },
              "next": {
                "title": "Access control",
                "permalink": "/concepts/sql/access-control"
              }
            },
            {
              "unversionedId": "concepts/sql/README",
              "id": "concepts/sql/README",
              "title": "Quick start",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/README.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/",
              "permalink": "/concepts/sql/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Quick start",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "next": {
                "title": "Create a table",
                "permalink": "/concepts/sql/create-a-table"
              }
            },
            {
              "unversionedId": "concepts/sql/sql-spec",
              "id": "concepts/sql/sql-spec",
              "title": "SQL specification",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/sql-spec.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/sql-spec",
              "permalink": "/concepts/sql/sql-spec",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/sql-spec.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "SQL specification",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "Auto-incrementing",
                "permalink": "/concepts/sql/incrementing-values"
              }
            },
            {
              "unversionedId": "concepts/sql/update",
              "id": "concepts/sql/update",
              "title": "Updating table data",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/update.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/update",
              "permalink": "/concepts/sql/update",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/update.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Updating table data",
                "sidebar_label": "UPDATE",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "INSERT",
                "permalink": "/concepts/sql/insert"
              },
              "next": {
                "title": "UPSERT",
                "permalink": "/concepts/sql/upsert"
              }
            },
            {
              "unversionedId": "concepts/sql/upsert",
              "id": "concepts/sql/upsert",
              "title": "Insert or update on conflict",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/concepts/sql/upsert.md",
              "sourceDirName": "concepts/sql",
              "slug": "/concepts/sql/upsert",
              "permalink": "/concepts/sql/upsert",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/concepts/sql/upsert.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Insert or update on conflict",
                "sidebar_label": "UPSERT",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "sql",
              "previous": {
                "title": "UPDATE",
                "permalink": "/concepts/sql/update"
              },
              "next": {
                "title": "DELETE",
                "permalink": "/concepts/sql/delete"
              }
            },
            {
              "unversionedId": "contribute/maintainers",
              "id": "contribute/maintainers",
              "title": "Maintainers",
              "description": "Core contributors to the Tableland protocol's documentation.",
              "source": "@site/docs/contribute/maintainers.md",
              "sourceDirName": "contribute",
              "slug": "/contribute/maintainers",
              "permalink": "/contribute/maintainers",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/contribute/maintainers.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Maintainers",
                "description": "Core contributors to the Tableland protocol's documentation.",
                "keywords": [
                  "docs",
                  "tableland",
                  "maintainers",
                  "contributors"
                ]
              },
              "sidebar": "contribute",
              "previous": {
                "title": "Style guide",
                "permalink": "/contribute/style-guide"
              }
            },
            {
              "unversionedId": "contribute/README",
              "id": "contribute/README",
              "title": "How to contribute",
              "description": "Get involved and contribute to the Tableland ecosystem.",
              "source": "@site/docs/contribute/README.md",
              "sourceDirName": "contribute",
              "slug": "/contribute/",
              "permalink": "/contribute/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/contribute/README.md",
              "tags": [
                {
                  "label": "contributing",
                  "permalink": "/tags/contributing"
                }
              ],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "How to contribute",
                "sidebar_label": "Contributor guidelines",
                "description": "Get involved and contribute to the Tableland ecosystem.",
                "synopsis": "Tableland welcomes new collaborators and contributions. The protocol is constantly growing and looking for help from community members, and we've open sourced all of our code, documentation, and tutorials to make this possible. Learn more about where to begin and stylistic guidelines & features about the docs site, in particular.",
                "keywords": [
                  "docs",
                  "tableland",
                  "contribute",
                  "contributor",
                  "contributing"
                ],
                "tags": [
                  "contributing"
                ]
              },
              "sidebar": "contribute",
              "next": {
                "title": "Style guide",
                "permalink": "/contribute/style-guide"
              }
            },
            {
              "unversionedId": "contribute/style-guide",
              "id": "contribute/style-guide",
              "title": "Style guide",
              "description": "Learn the ins and outs of contributing to the Tableland docs site.",
              "source": "@site/docs/contribute/style-guide.md",
              "sourceDirName": "contribute",
              "slug": "/contribute/style-guide",
              "permalink": "/contribute/style-guide",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/contribute/style-guide.md",
              "tags": [
                {
                  "label": "contributing",
                  "permalink": "/tags/contributing"
                }
              ],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Style guide",
                "description": "Learn the ins and outs of contributing to the Tableland docs site.",
                "synopsis": "The docs site is built using Docusaurus, a static site generator developed by Meta that is specifically designed for documentation. It offers a number of features, including MDX support (embed JSX in markdown) and various content-friendly plugins. Please ensure you follow the guidelines on writing style as well.",
                "keywords": [
                  "docs",
                  "tableland",
                  "contribute",
                  "contributor",
                  "contributing"
                ],
                "tags": [
                  "contributing"
                ]
              },
              "sidebar": "contribute",
              "previous": {
                "title": "Contributor guidelines",
                "permalink": "/contribute/"
              },
              "next": {
                "title": "Maintainers",
                "permalink": "/contribute/maintainers"
              }
            },
            {
              "unversionedId": "develop/chains/arbitrum",
              "id": "develop/chains/arbitrum",
              "title": "Arbitrum",
              "description": "An overview of using Arbitrum with Tableland.",
              "source": "@site/docs/develop/chains/arbitrum.md",
              "sourceDirName": "develop/chains",
              "slug": "/develop/chains/arbitrum",
              "permalink": "/develop/chains/arbitrum",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/chains/arbitrum.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Arbitrum",
                "description": "An overview of using Arbitrum with Tableland.",
                "synopsis": "Arbitrum is one of the EVM-compatible Layer 2 solutions that Tableland currently supports. Check out the overview of what this network is and relevant information when using it.",
                "keywords": [
                  "arbitrum"
                ]
              }
            },
            {
              "unversionedId": "develop/chains/ethereum",
              "id": "develop/chains/ethereum",
              "title": "Ethereum",
              "description": "An overview of using Ethereum with Tableland.",
              "source": "@site/docs/develop/chains/ethereum.md",
              "sourceDirName": "develop/chains",
              "slug": "/develop/chains/ethereum",
              "permalink": "/develop/chains/ethereum",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/chains/ethereum.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Ethereum",
                "description": "An overview of using Ethereum with Tableland.",
                "synopsis": "Ethereum and its EVM is what drives Tableland's approach for chain compatibility. With its data and network hardness, it's a great case for many projects, but not all use cases can occur here due to cost constraints.",
                "keywords": [
                  "ethereum"
                ]
              }
            },
            {
              "unversionedId": "develop/chains/local",
              "id": "develop/chains/local",
              "title": "Using a local chain",
              "description": "An overview of using a Hardhat node and a local Tableland instance.",
              "source": "@site/docs/develop/chains/local.md",
              "sourceDirName": "develop/chains",
              "slug": "/develop/chains/local",
              "permalink": "/develop/chains/local",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/chains/local.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Using a local chain",
                "sidebar_label": "Local node",
                "description": "An overview of using a Hardhat node and a local Tableland instance.",
                "synopsis": "Developing locally should happen as a step prior to deploying to any testnet and/or mainnet. Developers can use Local Tableland to accomplish this, which spins up a Hardhat node for a local Tableland node to use.",
                "keywords": [
                  "local tableland",
                  "hardhat"
                ]
              }
            },
            {
              "unversionedId": "develop/chains/optimism",
              "id": "develop/chains/optimism",
              "title": "Optimism",
              "description": "An overview of using Optimism with Tableland.",
              "source": "@site/docs/develop/chains/optimism.md",
              "sourceDirName": "develop/chains",
              "slug": "/develop/chains/optimism",
              "permalink": "/develop/chains/optimism",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/chains/optimism.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Optimism",
                "description": "An overview of using Optimism with Tableland.",
                "synopsis": "Optimism is one of the EVM-compatible Layer 2 solutions that Tableland currently supports. Check out the overview of what this network is and relevant information when using it.",
                "keywords": [
                  "optimism"
                ]
              }
            },
            {
              "unversionedId": "develop/chains/polygon",
              "id": "develop/chains/polygon",
              "title": "Polygon",
              "description": "An overview of using Polygon with Tableland.",
              "source": "@site/docs/develop/chains/polygon.md",
              "sourceDirName": "develop/chains",
              "slug": "/develop/chains/polygon",
              "permalink": "/develop/chains/polygon",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/chains/polygon.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Polygon",
                "description": "An overview of using Polygon with Tableland.",
                "synopsis": "Polygon is one of the EVM-compatible Layer 2 solutions that Tableland currently supports. Check out the overview of what this network is and relevant information when using it.",
                "keywords": [
                  "polygon"
                ]
              }
            },
            {
              "unversionedId": "develop/chains/README",
              "id": "develop/chains/README",
              "title": "Choosing a chain",
              "description": "Selecting a base chain is an important step in any applicationâ€™s design and, especially, for tables.",
              "source": "@site/docs/develop/chains/README.md",
              "sourceDirName": "develop/chains",
              "slug": "/develop/chains/",
              "permalink": "/develop/chains/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/chains/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Choosing a chain",
                "description": "Selecting a base chain is an important step in any applicationâ€™s design and, especially, for tables.",
                "synopsis": "Chain selection makes a significant impact on a tableâ€™s usability. Choose a chain thatâ€™s too slow or expensive, and it wonâ€™t be feasible for table writes to occur frequently. Deploy a cross-chain data model for value layering purposes, and certain on-chain access control features are lost.",
                "keywords": [
                  "evm",
                  "chains"
                ]
              }
            },
            {
              "unversionedId": "develop/integrations/chainlink",
              "id": "develop/integrations/chainlink",
              "title": "Chainlink",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/develop/integrations/chainlink.md",
              "sourceDirName": "develop/integrations",
              "slug": "/develop/integrations/chainlink",
              "permalink": "/develop/integrations/chainlink",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/integrations/chainlink.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Chainlink",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "develop/integrations/filecoin",
              "id": "develop/integrations/filecoin",
              "title": "Filecoin",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/develop/integrations/filecoin.md",
              "sourceDirName": "develop/integrations",
              "slug": "/develop/integrations/filecoin",
              "permalink": "/develop/integrations/filecoin",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/integrations/filecoin.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Filecoin",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "develop/integrations/ipfs",
              "id": "develop/integrations/ipfs",
              "title": "IPFS",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/develop/integrations/ipfs.md",
              "sourceDirName": "develop/integrations",
              "slug": "/develop/integrations/ipfs",
              "permalink": "/develop/integrations/ipfs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/integrations/ipfs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "IPFS",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "develop/integrations/lit-protocol",
              "id": "develop/integrations/lit-protocol",
              "title": "Lit Protocol",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/develop/integrations/lit-protocol.md",
              "sourceDirName": "develop/integrations",
              "slug": "/develop/integrations/lit-protocol",
              "permalink": "/develop/integrations/lit-protocol",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/integrations/lit-protocol.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Lit Protocol",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "develop/integrations/nucypher",
              "id": "develop/integrations/nucypher",
              "title": "NyCypher",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/develop/integrations/nucypher.md",
              "sourceDirName": "develop/integrations",
              "slug": "/develop/integrations/nucypher",
              "permalink": "/develop/integrations/nucypher",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/integrations/nucypher.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "NyCypher",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "develop/integrations/overview",
              "id": "develop/integrations/overview",
              "title": "Protocol integrations",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/develop/integrations/overview.md",
              "sourceDirName": "develop/integrations",
              "slug": "/develop/integrations/overview",
              "permalink": "/develop/integrations/overview",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/integrations/overview.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Protocol integrations",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "develop/integrations/toucan",
              "id": "develop/integrations/toucan",
              "title": "Toucan Protocol",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/develop/integrations/toucan.md",
              "sourceDirName": "develop/integrations",
              "slug": "/develop/integrations/toucan",
              "permalink": "/develop/integrations/toucan",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/integrations/toucan.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Toucan Protocol",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "develop/README",
              "id": "develop/README",
              "title": "Overview",
              "description": "Learn the ins and outs of contributing to the Tableland docs site.",
              "source": "@site/docs/develop/README.md",
              "sourceDirName": "develop",
              "slug": "/develop/",
              "permalink": "/develop/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Learn the ins and outs of contributing to the Tableland docs site.",
                "synopsis": "The docs site is built using Docusaurus, a static site generator developed by Meta that is specifically designed for documentation. It offers a number of features, including MDX support (embed JSX in markdown) and various content-friendly plugins. Please ensure you follow the guidelines on writing style as well."
              }
            },
            {
              "unversionedId": "develop/tools/local-tableland",
              "id": "develop/tools/local-tableland",
              "title": "Local development & testing",
              "description": "Build with Local Tableland to quickly iterate with Tableland using a local environment.",
              "source": "@site/docs/develop/tools/local-tableland.md",
              "sourceDirName": "develop/tools",
              "slug": "/develop/tools/local-tableland",
              "permalink": "/develop/tools/local-tableland",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/tools/local-tableland.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Local development & testing",
                "sidebar_label": "Local Tableland",
                "description": "Build with Local Tableland to quickly iterate with Tableland using a local environment.",
                "synopsis": "Developers can leverage a local-only instance of the Tableland network that spins up a local Hardhat node in the process. This allows for quickly iterating while developing (create, write, and read local tables) and also allows for integrating Local Tableland into your testing flow.",
                "keywords": [
                  "local tableland",
                  "hardhat"
                ]
              }
            },
            {
              "unversionedId": "develop/tools/README",
              "id": "develop/tools/README",
              "title": "Development tools",
              "description": "Leverage various tooling to ease the developer experience.",
              "source": "@site/docs/develop/tools/README.md",
              "sourceDirName": "develop/tools",
              "slug": "/develop/tools/",
              "permalink": "/develop/tools/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/develop/tools/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Development tools",
                "sidebar_label": "Tools",
                "description": "Leverage various tooling to ease the developer experience.",
                "synopsis": "There are quite a few different tools that can be used while developing with Tableland. Each of these are intended to further smooth the developer experience and make it easier to use the various APIs and clients built on top of the protocol.",
                "keywords": [
                  "tooling"
                ]
              }
            },
            {
              "unversionedId": "guides/README",
              "id": "guides/README",
              "title": "Get started",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/guides/README.md",
              "sourceDirName": "guides",
              "slug": "/guides/",
              "permalink": "/guides/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/guides/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Get started",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "next": {
                "title": "Quick start",
                "permalink": "/sdk/"
              }
            },
            {
              "unversionedId": "landing",
              "id": "landing",
              "title": "landing",
              "description": "",
              "source": "@site/docs/README.md",
              "sourceDirName": ".",
              "slug": "/",
              "permalink": "/",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "id": "landing",
                "sidebar_label": "Home",
                "hide_title": true,
                "hide_bread_crumb": true,
                "hide_table_of_contents": true,
                "pagination_prev": null,
                "pagination_next": null,
                "custom_edit_url": null,
                "slug": "/",
                "keywords": [
                  "tableland",
                  "docs",
                  "documentation"
                ]
              },
              "sidebar": "home"
            },
            {
              "unversionedId": "products/rigs/README",
              "id": "products/rigs/README",
              "title": "Tableland Rigs",
              "description": "A developer-first NFT, inherently rewarding builders and community members of the Tableland network.",
              "source": "@site/docs/products/rigs/README.md",
              "sourceDirName": "products/rigs",
              "slug": "/products/rigs/",
              "permalink": "/products/rigs/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/products/rigs/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Tableland Rigs",
                "description": "A developer-first NFT, inherently rewarding builders and community members of the Tableland network.",
                "synopsis": "Rigs are a generative collection of 3k NFTs designed for those who build on Tableland. They set a foundation to help reward developers for building high value applications and to those contributing to the ecosystem as a whole.",
                "keywords": [
                  "rigs",
                  "the garage"
                ]
              }
            },
            {
              "unversionedId": "products/rigs/rigs-discord",
              "id": "products/rigs/rigs-discord",
              "title": "Rigs in Discord",
              "description": "Learn about the basics of SQL.",
              "source": "@site/docs/products/rigs/rigs-discord.md",
              "sourceDirName": "products/rigs",
              "slug": "/products/rigs/rigs-discord",
              "permalink": "/products/rigs/rigs-discord",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/products/rigs/rigs-discord.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Rigs in Discord",
                "description": "Learn about the basics of SQL.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "SQL",
                  "SQLite",
                  "about"
                ]
              }
            },
            {
              "unversionedId": "products/rigs/the-garage",
              "id": "products/rigs/the-garage",
              "title": "The Garage",
              "description": "Learn about the basics of SQL.",
              "source": "@site/docs/products/rigs/the-garage.md",
              "sourceDirName": "products/rigs",
              "slug": "/products/rigs/the-garage",
              "permalink": "/products/rigs/the-garage",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/products/rigs/the-garage.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "The Garage",
                "description": "Learn about the basics of SQL.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "SQL",
                  "SQLite",
                  "about"
                ]
              }
            },
            {
              "unversionedId": "products/rigs/what-are-rigs",
              "id": "products/rigs/what-are-rigs",
              "title": "What are Rigs?",
              "description": "Learn about the basics of SQL.",
              "source": "@site/docs/products/rigs/what-are-rigs.md",
              "sourceDirName": "products/rigs",
              "slug": "/products/rigs/what-are-rigs",
              "permalink": "/products/rigs/what-are-rigs",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/products/rigs/what-are-rigs.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "What are Rigs?",
                "description": "Learn about the basics of SQL.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "SQL",
                  "SQLite",
                  "about"
                ]
              }
            },
            {
              "unversionedId": "protocol/validator-spec",
              "id": "protocol/validator-spec",
              "title": "validator-spec",
              "description": "The Tableland protocol validator specification.",
              "source": "@site/docs/protocol/validator-spec.md",
              "sourceDirName": "protocol",
              "slug": "/protocol/validator-spec",
              "permalink": "/protocol/validator-spec",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/protocol/validator-spec.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "hide_title": true,
                "sidebar_label": "Validator specification",
                "description": "The Tableland protocol validator specification.",
                "synopsis": "The Tableland protocol is ran by validator nodes.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "reference/contracts",
              "id": "reference/contracts",
              "title": "Chains & contracts",
              "description": "A list of deployed contracts for each supported chain.",
              "source": "@site/docs/reference/contracts.md",
              "sourceDirName": "reference",
              "slug": "/reference/contracts",
              "permalink": "/reference/contracts",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/reference/contracts.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Chains & contracts",
                "sidebar_label": "Contracts",
                "description": "A list of deployed contracts for each supported chain.",
                "synopsis": "The following table highlight which chains Tableland has smart contracts deployed on, which is currently Ethereum and a subset of its scaling solutions. Over time, additional EVM compatible chains will be added based on developer demand.",
                "keywords": [
                  "chains",
                  "contract"
                ]
              },
              "sidebar": "reference",
              "previous": {
                "title": "Tableland protocol",
                "permalink": "/reference/"
              },
              "next": {
                "title": "Limits",
                "permalink": "/reference/limits"
              }
            },
            {
              "unversionedId": "reference/limits",
              "id": "reference/limits",
              "title": "Limits",
              "description": "A listing of the table/data limits and smart contract deployment locations on supported chains.",
              "source": "@site/docs/reference/limits.md",
              "sourceDirName": "reference",
              "slug": "/reference/limits",
              "permalink": "/reference/limits",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/reference/limits.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Limits",
                "description": "A listing of the table/data limits and smart contract deployment locations on supported chains.",
                "synopsis": "Since Tableland is still in open beta, each table is limited to the following constraints while the full production network is further clarified. These are temporary limits while the production mainnet is further researched.",
                "keywords": [
                  "limits",
                  "cell limit",
                  "row limit",
                  "column limit"
                ]
              },
              "sidebar": "reference",
              "previous": {
                "title": "Contracts",
                "permalink": "/reference/contracts"
              },
              "next": {
                "title": "Tableland protocol",
                "permalink": "/reference/"
              }
            },
            {
              "unversionedId": "reference/README",
              "id": "reference/README",
              "title": "Tableland protocol",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/reference/README.md",
              "sourceDirName": "reference",
              "slug": "/reference/",
              "permalink": "/reference/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/reference/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Tableland protocol",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "reference",
              "next": {
                "title": "Contracts",
                "permalink": "/reference/contracts"
              }
            },
            {
              "unversionedId": "reference/repos",
              "id": "reference/repos",
              "title": "Repos",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/reference/repos.md",
              "sourceDirName": "reference",
              "slug": "/reference/repos",
              "permalink": "/reference/repos",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/reference/repos.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Repos",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "reference",
              "previous": {
                "title": "Table names",
                "permalink": "/reference/table-names"
              }
            },
            {
              "unversionedId": "reference/response-times",
              "id": "reference/response-times",
              "title": "Response times",
              "description": "Processing times for creates & writes are largely dependent on the base chain, but read responses are standard.",
              "source": "@site/docs/reference/response-times.md",
              "sourceDirName": "reference",
              "slug": "/reference/response-times",
              "permalink": "/reference/response-times",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/reference/response-times.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Response times",
                "description": "Processing times for creates & writes are largely dependent on the base chain, but read responses are standard.",
                "synopsis": "Tableland is always dependent on the base chain for the speed at which transactions are finalized. For each chan, nodes listen and process emitted events. When that data is materialized in Tableland node's SQLite databases, it becomes immediately accessible and queryable with high responsiveness.",
                "keywords": [
                  "response times"
                ]
              },
              "sidebar": "reference",
              "previous": {
                "title": "Tableland protocol",
                "permalink": "/reference/"
              },
              "next": {
                "title": "Table names",
                "permalink": "/reference/table-names"
              }
            },
            {
              "unversionedId": "reference/table-names",
              "id": "reference/table-names",
              "title": "Table names",
              "description": "Learn about what Tableland is.",
              "source": "@site/docs/reference/table-names.md",
              "sourceDirName": "reference",
              "slug": "/reference/table-names",
              "permalink": "/reference/table-names",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/reference/table-names.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Table names",
                "description": "Learn about what Tableland is.",
                "synopsis": "Structured Query Language (SQL) is a language that allows developers to interact with databases for extracting and mutating values.",
                "keywords": [
                  "protocol"
                ]
              },
              "sidebar": "reference",
              "previous": {
                "title": "Response times",
                "permalink": "/reference/response-times"
              },
              "next": {
                "title": "Repos",
                "permalink": "/reference/repos"
              }
            },
            {
              "unversionedId": "sdk/connect",
              "id": "sdk/connect",
              "title": "Connecting to Tableland",
              "description": "Access the Tableland network by first connecting to the base chain.",
              "source": "@site/docs/sdk/connect.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/connect",
              "permalink": "/sdk/connect",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/connect.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Connecting to Tableland",
                "description": "Access the Tableland network by first connecting to the base chain.",
                "synopsis": "Tableland is an extension of the chains it supports. Namely, every table creation and write occurs through on-chain actions, so it is a requirement for every developer to connect and interact with a supported blockchain. From there, reads happen off-chain by way of directly accessing the Tableland node network.",
                "keywords": [
                  "read table",
                  "SQL query"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Getting started",
                "permalink": "/sdk/getting-started"
              },
              "next": {
                "title": "Creating tables",
                "permalink": "/sdk/create"
              }
            },
            {
              "unversionedId": "sdk/create",
              "id": "sdk/create",
              "title": "Creating tables",
              "description": "Learn how to create tables from the SDK.",
              "source": "@site/docs/sdk/create.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/create",
              "permalink": "/sdk/create",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/create.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Creating tables",
                "description": "Learn how to create tables from the SDK.",
                "synopsis": "All tables are created through on-chain actions that create a table (ERC721 token). The SDK abstracts this from the developer's point of view, but it's important to understand this context for why a chain connection is required for table creation.",
                "keywords": [
                  "create table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Connecting to Tableland",
                "permalink": "/sdk/connect"
              },
              "next": {
                "title": "Writing to tables",
                "permalink": "/sdk/write"
              }
            },
            {
              "unversionedId": "sdk/getting-started",
              "id": "sdk/getting-started",
              "title": "Getting started",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/sdk/getting-started.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/getting-started",
              "permalink": "/sdk/getting-started",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/getting-started.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Getting started",
                "description": "Get up an running with the Tableland SDK.",
                "synopsis": "The JavaScript / TypeScript SDK allows developers to create tables on their chain of choice. Connect, create, and then interact with your tables thereafter with table writes and reads. Dive into the basics for connecting, creating, writing, and reading from tables.",
                "keywords": [
                  "SQL query",
                  "Tableland SDK"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Quick start",
                "permalink": "/sdk/"
              },
              "next": {
                "title": "Connecting to Tableland",
                "permalink": "/sdk/connect"
              }
            },
            {
              "unversionedId": "sdk/read",
              "id": "sdk/read",
              "title": "Reading tables",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/sdk/read.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/read",
              "permalink": "/sdk/read",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/read.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Reading tables",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Writing to tables",
                "permalink": "/sdk/write"
              },
              "next": {
                "title": "Quick start",
                "permalink": "/validator-api/"
              }
            },
            {
              "unversionedId": "sdk/README",
              "id": "sdk/README",
              "title": "Quick start",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/sdk/README.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/",
              "permalink": "/sdk/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Quick start",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Get started",
                "permalink": "/guides/"
              },
              "next": {
                "title": "Getting started",
                "permalink": "/sdk/getting-started"
              }
            },
            {
              "unversionedId": "sdk/write",
              "id": "sdk/write",
              "title": "Writing to tables",
              "description": "Mutate your table values with additional access control.",
              "source": "@site/docs/sdk/write.md",
              "sourceDirName": "sdk",
              "slug": "/sdk/write",
              "permalink": "/sdk/write",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sdk/write.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Writing to tables",
                "description": "Mutate your table values with additional access control.",
                "synopsis": "Table values can be mutated by the table owner or provisioned actors.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Creating tables",
                "permalink": "/sdk/create"
              },
              "next": {
                "title": "Reading tables",
                "permalink": "/sdk/read"
              }
            },
            {
              "unversionedId": "smart-contracts/connect",
              "id": "smart-contracts/connect",
              "title": "Connecting to Tableland",
              "description": "Access the Tableland network by first connecting to the base chain.",
              "source": "@site/docs/smart-contracts/connect.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/connect",
              "permalink": "/smart-contracts/connect",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/connect.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Connecting to Tableland",
                "description": "Access the Tableland network by first connecting to the base chain.",
                "synopsis": "Tableland is an extension of the chains it supports. Namely, every table creation and write occurs through on-chain actions, so it is a requirement for every developer to connect and interact with a supported blockchain. From there, reads happen off-chain by way of directly accessing the Tableland node network.",
                "keywords": [
                  "read table",
                  "SQL query"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Getting started",
                "permalink": "/smart-contracts/getting-started"
              },
              "next": {
                "title": "Creating tables",
                "permalink": "/smart-contracts/create"
              }
            },
            {
              "unversionedId": "smart-contracts/create",
              "id": "smart-contracts/create",
              "title": "Creating tables",
              "description": "Learn how to create tables from the SDK.",
              "source": "@site/docs/smart-contracts/create.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/create",
              "permalink": "/smart-contracts/create",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/create.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Creating tables",
                "description": "Learn how to create tables from the SDK.",
                "synopsis": "All tables are created through on-chain actions that create a table (ERC721 token). The SDK abstracts this from the developer's point of view, but it's important to understand this context for why a chain connection is required for table creation.",
                "keywords": [
                  "create table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Connecting to Tableland",
                "permalink": "/smart-contracts/connect"
              },
              "next": {
                "title": "Writing to tables",
                "permalink": "/smart-contracts/write"
              }
            },
            {
              "unversionedId": "smart-contracts/getting-started",
              "id": "smart-contracts/getting-started",
              "title": "Getting started",
              "description": "Get up an running with the Tableland SDK.",
              "source": "@site/docs/smart-contracts/getting-started.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/getting-started",
              "permalink": "/smart-contracts/getting-started",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/getting-started.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Getting started",
                "description": "Get up an running with the Tableland SDK.",
                "synopsis": "Dive into the basics for connecting, creating, writing, and reading from tables. More detailed information is provided in subsequent overviews, but the details provided here should allow developers to quickly understand where to start.",
                "keywords": [
                  "SQL query",
                  "Tableland SDK"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Overview",
                "permalink": "/smart-contracts/"
              },
              "next": {
                "title": "Connecting to Tableland",
                "permalink": "/smart-contracts/connect"
              }
            },
            {
              "unversionedId": "smart-contracts/read",
              "id": "smart-contracts/read",
              "title": "Reading tables",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/smart-contracts/read.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/read",
              "permalink": "/smart-contracts/read",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/read.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Reading tables",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Writing to tables",
                "permalink": "/smart-contracts/write"
              }
            },
            {
              "unversionedId": "smart-contracts/README",
              "id": "smart-contracts/README",
              "title": "Overview",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/smart-contracts/README.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/",
              "permalink": "/smart-contracts/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Openly readable tables by your applications.",
                "synopsis": "The JavaScript / TypeScript SDK allows developers to create tables on their chain of choice. Connect, create, and then interact with your tables thereafter with table writes and reads.",
                "keywords": [
                  "SQL query",
                  "Tableland SDK"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Reading tables",
                "permalink": "/cli/read"
              },
              "next": {
                "title": "Getting started",
                "permalink": "/smart-contracts/getting-started"
              }
            },
            {
              "unversionedId": "smart-contracts/write",
              "id": "smart-contracts/write",
              "title": "Writing to tables",
              "description": "Mutate your table values with additional access control.",
              "source": "@site/docs/smart-contracts/write.md",
              "sourceDirName": "smart-contracts",
              "slug": "/smart-contracts/write",
              "permalink": "/smart-contracts/write",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/smart-contracts/write.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Writing to tables",
                "description": "Mutate your table values with additional access control.",
                "synopsis": "Table values can be mutated by the table owner or provisioned actors.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Creating tables",
                "permalink": "/smart-contracts/create"
              },
              "next": {
                "title": "Reading tables",
                "permalink": "/smart-contracts/read"
              }
            },
            {
              "unversionedId": "sql/access-control",
              "id": "sql/access-control",
              "title": "access-control",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/access-control.md",
              "sourceDirName": "sql",
              "slug": "/sql/access-control",
              "permalink": "/sql/access-control",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/access-control.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/creating-tables",
              "id": "sql/creating-tables",
              "title": "creating-tables",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/creating-tables.md",
              "sourceDirName": "sql",
              "slug": "/sql/creating-tables",
              "permalink": "/sql/creating-tables",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/creating-tables.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/overview",
              "id": "sql/overview",
              "title": "overview",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/overview.md",
              "sourceDirName": "sql",
              "slug": "/sql/overview",
              "permalink": "/sql/overview",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/overview.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/read-queries",
              "id": "sql/read-queries",
              "title": "read-queries",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/read-queries.md",
              "sourceDirName": "sql",
              "slug": "/sql/read-queries",
              "permalink": "/sql/read-queries",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/read-queries.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/sql-spec",
              "id": "sql/sql-spec",
              "title": "sql-spec",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/sql-spec.md",
              "sourceDirName": "sql",
              "slug": "/sql/sql-spec",
              "permalink": "/sql/sql-spec",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/sql-spec.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "hide_title": true,
                "sidebar_label": "SQL specification",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "sql/write-queries",
              "id": "sql/write-queries",
              "title": "write-queries",
              "description": "The Tableland SQL language specification.",
              "source": "@site/docs/sql/write-queries.md",
              "sourceDirName": "sql",
              "slug": "/sql/write-queries",
              "permalink": "/sql/write-queries",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/sql/write-queries.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "sidebar_label": "Overview",
                "description": "The Tableland SQL language specification.",
                "synopsis": "Tableland offers a unique set of SQL that is a subset of the SQLite language.",
                "keywords": [
                  "sql",
                  "sqlite",
                  "specification"
                ]
              }
            },
            {
              "unversionedId": "tutorials/dynamic-nft-chainlink",
              "id": "tutorials/dynamic-nft-chainlink",
              "title": "Dynamic NFT with Chainlink Automation",
              "description": "Leverage Chainlink for automated NFT mutations.",
              "source": "@site/docs/tutorials/dynamic-nft-chainlink.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/dynamic-nft-chainlink",
              "permalink": "/tutorials/dynamic-nft-chainlink",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-chainlink.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Dynamic NFT with Chainlink Automation",
                "sidebar_label": "Dynamic NFT with Chainlink Automation",
                "description": "Leverage Chainlink for automated NFT mutations.",
                "synopsis": "The Chainlink network can help make autonomous on-chain calls and enable truly dynamic NFTs. All of the logic can be created with smart contracts and registered in the Chainlink automation portal, enabling dynamic NFTs using on-chain logic, only.",
                "keywords": [
                  "chainlink",
                  "dynamic nft"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Creating a dynamic NFT with p5.js",
                "permalink": "/tutorials/dynamic-nft-p5js"
              }
            },
            {
              "unversionedId": "tutorials/dynamic-nft-p5js",
              "id": "tutorials/dynamic-nft-p5js",
              "title": "Creating a dynamic NFT with p5.js",
              "description": "Use p5.js to render data from an NFT that holds global game state in a table.",
              "source": "@site/docs/tutorials/dynamic-nft-p5js.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/dynamic-nft-p5js",
              "permalink": "/tutorials/dynamic-nft-p5js",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-p5js.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Creating a dynamic NFT with p5.js",
                "description": "Use p5.js to render data from an NFT that holds global game state in a table.",
                "synopsis": "We want to now write a simple web app that will be used to dynamically render a single NFT in our collection. When the NFT renders, the web app should check the requested token, grab the latest data from Tableland, and render some dynamic content.",
                "keywords": [
                  "tutorial",
                  "solidity",
                  "dynamic NFT"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Build a dynamic NFT in Solidity",
                "permalink": "/tutorials/dynamic-nft-solidity"
              },
              "next": {
                "title": "Dynamic NFT with Chainlink Automation",
                "permalink": "/tutorials/dynamic-nft-chainlink"
              }
            },
            {
              "unversionedId": "tutorials/dynamic-nft-solidity",
              "id": "tutorials/dynamic-nft-solidity",
              "title": "Build a dynamic NFT in Solidity",
              "description": "Create an on-chain game that uses SQL queries to create and populate a table of game state.",
              "source": "@site/docs/tutorials/dynamic-nft-solidity.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/dynamic-nft-solidity",
              "permalink": "/tutorials/dynamic-nft-solidity",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-solidity.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Build a dynamic NFT in Solidity",
                "description": "Create an on-chain game that uses SQL queries to create and populate a table of game state.",
                "synopsis": "Tableland enables ownership & on-chain rules to dictate table state mutation. For every mutation, the data is accessible with off-chain queries that can be displayed in an interface, such as an NFT-based game board. This tutorial walks through the basics of Solidity ERC721s and an app with shared state.",
                "keywords": [
                  "tutorial",
                  "solidity",
                  "dynamic NFT",
                  "p5.js"
                ]
              },
              "sidebar": "tutorials",
              "previous": {
                "title": "Overview",
                "permalink": "/tutorials/"
              },
              "next": {
                "title": "Creating a dynamic NFT with p5.js",
                "permalink": "/tutorials/dynamic-nft-p5js"
              }
            },
            {
              "unversionedId": "tutorials/overview",
              "id": "tutorials/overview",
              "title": "Overview",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/tutorials/overview.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/overview",
              "permalink": "/tutorials/overview",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/overview.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              }
            },
            {
              "unversionedId": "tutorials/README",
              "id": "tutorials/README",
              "title": "Overview",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/tutorials/README.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/",
              "permalink": "/tutorials/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Overview",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "tutorials",
              "next": {
                "title": "Build a dynamic NFT in Solidity",
                "permalink": "/tutorials/dynamic-nft-solidity"
              }
            },
            {
              "unversionedId": "validator-api/endpoints",
              "id": "validator-api/endpoints",
              "title": "Endpoints",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/validator-api/endpoints.md",
              "sourceDirName": "validator-api",
              "slug": "/validator-api/endpoints",
              "permalink": "/validator-api/endpoints",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/validator-api/endpoints.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Endpoints",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Gateways",
                "permalink": "/validator-api/gateways"
              },
              "next": {
                "title": "Errors",
                "permalink": "/validator-api/errors"
              }
            },
            {
              "unversionedId": "validator-api/errors",
              "id": "validator-api/errors",
              "title": "Errors",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/validator-api/errors.md",
              "sourceDirName": "validator-api",
              "slug": "/validator-api/errors",
              "permalink": "/validator-api/errors",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/validator-api/errors.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Errors",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Endpoints",
                "permalink": "/validator-api/endpoints"
              },
              "next": {
                "title": "Quick start",
                "permalink": "/cli/"
              }
            },
            {
              "unversionedId": "validator-api/gateways",
              "id": "validator-api/gateways",
              "title": "Gateways",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/validator-api/gateways.md",
              "sourceDirName": "validator-api",
              "slug": "/validator-api/gateways",
              "permalink": "/validator-api/gateways",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/validator-api/gateways.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Gateways",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Quick start",
                "permalink": "/validator-api/"
              },
              "next": {
                "title": "Endpoints",
                "permalink": "/validator-api/endpoints"
              }
            },
            {
              "unversionedId": "validator-api/README",
              "id": "validator-api/README",
              "title": "Quick start",
              "description": "Openly readable tables by your applications.",
              "source": "@site/docs/validator-api/README.md",
              "sourceDirName": "validator-api",
              "slug": "/validator-api/",
              "permalink": "/validator-api/",
              "draft": false,
              "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/validator-api/README.md",
              "tags": [],
              "version": "current",
              "lastUpdatedBy": "Author",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "Oct 14, 2018",
              "frontMatter": {
                "title": "Quick start",
                "description": "Openly readable tables by your applications.",
                "synopsis": "Reading from tables is entirely open (for anyone), allowing for true composability. Write SQL qeuriesâ€”but with some limitations that are due to the nature of decentralized networks and deterministic requirements.",
                "keywords": [
                  "write to table",
                  "mutate table"
                ]
              },
              "sidebar": "guides",
              "previous": {
                "title": "Reading tables",
                "permalink": "/sdk/read"
              },
              "next": {
                "title": "Gateways",
                "permalink": "/validator-api/gateways"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "home": [
              {
                "type": "doc",
                "id": "landing",
                "className": "sidebar-landing"
              },
              {
                "type": "doc",
                "id": "concepts/README",
                "label": "Get started",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "concepts/README",
                "label": "Concepts",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "guides/README",
                "label": "Guides",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "tutorials/README",
                "label": "Tutorials",
                "className": "sidebar-landing",
                "translatable": true
              },
              {
                "type": "doc",
                "id": "reference/README",
                "label": "Reference",
                "className": "sidebar-landing",
                "translatable": true
              }
            ],
            "concepts": [
              {
                "type": "link",
                "label": "Back to Home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Concepts</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "concepts/README"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">CONCEPTS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "concepts/network/what-is-tableland"
              },
              {
                "type": "doc",
                "id": "concepts/network/considerations-tradeoffs"
              },
              {
                "type": "doc",
                "id": "concepts/network/tableland-state"
              },
              {
                "type": "doc",
                "id": "concepts/network/use-cases"
              },
              {
                "type": "doc",
                "id": "concepts/network/open-beta"
              }
            ],
            "sdk": [
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">SDK</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "sdk/README"
              },
              {
                "type": "doc",
                "id": "sdk/getting-started"
              },
              {
                "type": "doc",
                "id": "sdk/connect"
              },
              {
                "type": "doc",
                "id": "sdk/create"
              },
              {
                "type": "doc",
                "id": "sdk/write"
              },
              {
                "type": "doc",
                "id": "sdk/read"
              }
            ],
            "cli": [
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">CLI</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "cli/README"
              },
              {
                "type": "doc",
                "id": "cli/getting-started"
              },
              {
                "type": "doc",
                "id": "cli/connect"
              },
              {
                "type": "doc",
                "id": "cli/create"
              },
              {
                "type": "doc",
                "id": "cli/write"
              },
              {
                "type": "doc",
                "id": "cli/read"
              }
            ],
            "validatorApi": [
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">VALIDATOR API</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "validator-api/README"
              },
              {
                "type": "doc",
                "id": "validator-api/gateways"
              },
              {
                "type": "doc",
                "id": "validator-api/endpoints"
              },
              {
                "type": "doc",
                "id": "validator-api/errors"
              }
            ],
            "smartContracts": [
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">SMART CONTRACTS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "smart-contracts/README"
              },
              {
                "type": "doc",
                "id": "smart-contracts/getting-started"
              },
              {
                "type": "doc",
                "id": "smart-contracts/connect"
              },
              {
                "type": "doc",
                "id": "smart-contracts/create"
              },
              {
                "type": "doc",
                "id": "smart-contracts/write"
              },
              {
                "type": "doc",
                "id": "smart-contracts/read"
              }
            ],
            "sql": [
              {
                "type": "link",
                "label": "Back to Home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">SQL</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "concepts/sql/README"
              },
              {
                "type": "doc",
                "id": "concepts/sql/create-a-table"
              },
              {
                "type": "category",
                "label": "Mutating table data",
                "link": {
                  "type": "doc",
                  "id": "concepts/sql/mutating-data"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "concepts/sql/insert"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/sql/update"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/sql/upsert"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/sql/delete"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "doc",
                "id": "concepts/sql/read"
              },
              {
                "type": "doc",
                "id": "concepts/sql/access-control"
              },
              {
                "type": "doc",
                "id": "concepts/sql/incrementing-values"
              },
              {
                "type": "doc",
                "id": "concepts/sql/sql-spec"
              }
            ],
            "guides": [
              {
                "type": "link",
                "label": "Back to Home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Guides</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "guides/README"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">SDK</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "sdk/README"
              },
              {
                "type": "doc",
                "id": "sdk/getting-started"
              },
              {
                "type": "doc",
                "id": "sdk/connect"
              },
              {
                "type": "doc",
                "id": "sdk/create"
              },
              {
                "type": "doc",
                "id": "sdk/write"
              },
              {
                "type": "doc",
                "id": "sdk/read"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">VALIDATOR API</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "validator-api/README"
              },
              {
                "type": "doc",
                "id": "validator-api/gateways"
              },
              {
                "type": "doc",
                "id": "validator-api/endpoints"
              },
              {
                "type": "doc",
                "id": "validator-api/errors"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">CLI</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "cli/README"
              },
              {
                "type": "doc",
                "id": "cli/getting-started"
              },
              {
                "type": "doc",
                "id": "cli/connect"
              },
              {
                "type": "doc",
                "id": "cli/create"
              },
              {
                "type": "doc",
                "id": "cli/write"
              },
              {
                "type": "doc",
                "id": "cli/read"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">SMART CONTRACTS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "smart-contracts/README"
              },
              {
                "type": "doc",
                "id": "smart-contracts/getting-started"
              },
              {
                "type": "doc",
                "id": "smart-contracts/connect"
              },
              {
                "type": "doc",
                "id": "smart-contracts/create"
              },
              {
                "type": "doc",
                "id": "smart-contracts/write"
              },
              {
                "type": "doc",
                "id": "smart-contracts/read"
              }
            ],
            "reference": [
              {
                "type": "link",
                "label": "Back to Home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Reference</h4>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">PROTOCOL</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "reference/README"
              },
              {
                "type": "doc",
                "id": "reference/contracts"
              },
              {
                "type": "doc",
                "id": "reference/limits"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">PROTOCOL</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "reference/README"
              },
              {
                "type": "doc",
                "id": "reference/response-times"
              },
              {
                "type": "doc",
                "id": "reference/table-names"
              },
              {
                "type": "doc",
                "id": "reference/repos"
              }
            ],
            "tutorials": [
              {
                "type": "link",
                "label": "Back to Home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Tutorials</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "tutorials/README"
              },
              {
                "type": "html",
                "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">DYNAMIC NFTS</h6>",
                "defaultStyle": true
              },
              {
                "type": "html",
                "value": "<hr />",
                "defaultStyle": true,
                "className": "sidebar-hr"
              },
              {
                "type": "doc",
                "id": "tutorials/dynamic-nft-solidity"
              },
              {
                "type": "doc",
                "id": "tutorials/dynamic-nft-p5js"
              },
              {
                "type": "doc",
                "id": "tutorials/dynamic-nft-chainlink"
              }
            ],
            "contribute": [
              {
                "type": "link",
                "label": "Back to Home",
                "className": "sidepage-back-home",
                "href": "/"
              },
              {
                "type": "html",
                "value": "<h4 class=\"margin-top--md margin-bottom--sm sidepage-heading\">Contribute</h4>",
                "defaultStyle": true
              },
              {
                "type": "doc",
                "id": "contribute/README"
              },
              {
                "type": "doc",
                "id": "contribute/style-guide"
              },
              {
                "type": "doc",
                "id": "contribute/maintainers"
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "welcome",
          "metadata": {
            "permalink": "/blog/welcome",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2021-08-26-welcome/index.md",
            "source": "@site/blog/2021-08-26-welcome/index.md",
            "title": "Welcome",
            "description": "Docusaurus blogging features are powered by the blog plugin.",
            "date": "2021-08-26T00:00:00.000Z",
            "formattedDate": "August 26, 2021",
            "tags": [
              {
                "label": "facebook",
                "permalink": "/blog/tags/facebook"
              },
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.405,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "SÃ©bastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              },
              {
                "name": "Yangshun Tay",
                "title": "Front End Engineer @ Facebook",
                "url": "https://github.com/yangshun",
                "imageURL": "https://github.com/yangshun.png",
                "key": "yangshun"
              }
            ],
            "frontMatter": {
              "slug": "welcome",
              "title": "Welcome",
              "authors": [
                "slorber",
                "yangshun"
              ],
              "tags": [
                "facebook",
                "hello",
                "docusaurus"
              ]
            },
            "nextItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            }
          },
          "content": "[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\n\nSimply add Markdown files (or folders) to the `blog` directory.\n\nRegular blog authors can be added to `authors.yml`.\n\nThe blog post date can be extracted from filenames, such as:\n\n- `2019-05-30-welcome.md`\n- `2019-05-30-welcome/index.md`\n\nA blog post folder can be convenient to co-locate blog post images:\n\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\n\nThe blog supports tags as well!\n\n**And if you don't want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."
        },
        {
          "id": "mdx-blog-post",
          "metadata": {
            "permalink": "/blog/mdx-blog-post",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2021-08-01-mdx-blog-post.mdx",
            "source": "@site/blog/2021-08-01-mdx-blog-post.mdx",
            "title": "MDX Blog Post",
            "description": "Blog posts support Docusaurus Markdown features, such as MDX.",
            "date": "2021-08-01T00:00:00.000Z",
            "formattedDate": "August 1, 2021",
            "tags": [
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.175,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "SÃ©bastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              }
            ],
            "frontMatter": {
              "slug": "mdx-blog-post",
              "title": "MDX Blog Post",
              "authors": [
                "slorber"
              ],
              "tags": [
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Welcome",
              "permalink": "/blog/welcome"
            },
            "nextItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\n\n:::tip\n\nUse the power of React to create interactive blog posts.\n\n```js\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n```\n\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n\n:::"
        },
        {
          "id": "long-blog-post",
          "metadata": {
            "permalink": "/blog/long-blog-post",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2019-05-29-long-blog-post.md",
            "source": "@site/blog/2019-05-29-long-blog-post.md",
            "title": "Long Blog Post",
            "description": "This is the summary of a very long blog post,",
            "date": "2019-05-29T00:00:00.000Z",
            "formattedDate": "May 29, 2019",
            "tags": [
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 2.05,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Endilie Yacop Sucipto",
                "title": "Maintainer of Docusaurus",
                "url": "https://github.com/endiliey",
                "imageURL": "https://github.com/endiliey.png",
                "key": "endi"
              }
            ],
            "frontMatter": {
              "slug": "long-blog-post",
              "title": "Long Blog Post",
              "authors": "endi",
              "tags": [
                "hello",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            },
            "nextItem": {
              "title": "First Blog Post",
              "permalink": "/blog/first-blog-post"
            }
          },
          "content": "This is the summary of a very long blog post,\n\nUse a `<!--` `truncate` `-->` comment to limit blog post size in the list view.\n\n<!--truncate-->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        },
        {
          "id": "first-blog-post",
          "metadata": {
            "permalink": "/blog/first-blog-post",
            "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/blog/2019-05-28-first-blog-post.md",
            "source": "@site/blog/2019-05-28-first-blog-post.md",
            "title": "First Blog Post",
            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet",
            "date": "2019-05-28T00:00:00.000Z",
            "formattedDate": "May 28, 2019",
            "tags": [
              {
                "label": "hola",
                "permalink": "/blog/tags/hola"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.12,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              }
            ],
            "frontMatter": {
              "slug": "first-blog-post",
              "title": "First Blog Post",
              "authors": {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              },
              "tags": [
                "hola",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 4,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/blog/tags/facebook": {
          "label": "facebook",
          "items": [
            "welcome"
          ],
          "permalink": "/blog/tags/facebook",
          "pages": [
            {
              "items": [
                "welcome"
              ],
              "metadata": {
                "permalink": "/blog/tags/facebook",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hello": {
          "label": "hello",
          "items": [
            "welcome",
            "long-blog-post"
          ],
          "permalink": "/blog/tags/hello",
          "pages": [
            {
              "items": [
                "welcome",
                "long-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hello",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/docusaurus": {
          "label": "docusaurus",
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "permalink": "/blog/tags/docusaurus",
          "pages": [
            {
              "items": [
                "welcome",
                "mdx-blog-post",
                "long-blog-post",
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/docusaurus",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 4,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hola": {
          "label": "hola",
          "items": [
            "first-blog-post"
          ],
          "permalink": "/blog/tags/hola",
          "pages": [
            {
              "items": [
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hola",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": null
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-theme-live-codeblock": {},
  "docusaurus-plugin-dotenv": {},
  "@easyops-cn/docusaurus-search-local": {},
  "docusaurus-theme-mermaid": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}