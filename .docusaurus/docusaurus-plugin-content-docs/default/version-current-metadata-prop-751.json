{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "home": [
      {
        "type": "link",
        "label": "Home",
        "href": "/",
        "className": "sidebar-landing",
        "docId": "landing"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none landing-section\">LEARN</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Fundamentals",
        "href": "/fundamentals/",
        "className": "sidebar-landing",
        "docId": "fundamentals/README"
      },
      {
        "type": "link",
        "label": "Playbooks",
        "href": "/playbooks/",
        "className": "sidebar-landing",
        "docId": "playbooks/README"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none landing-section\">DEVELOP</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Quickstarts",
        "href": "/quickstarts/",
        "className": "sidebar-landing",
        "docId": "quickstarts/README"
      },
      {
        "type": "link",
        "label": "SDK",
        "href": "/sdk/",
        "className": "sidebar-landing",
        "docId": "sdk/README"
      },
      {
        "type": "link",
        "label": "Smart contracts",
        "href": "/smart-contracts/",
        "className": "sidebar-landing",
        "docId": "smart-contracts/README"
      },
      {
        "type": "link",
        "label": "Gateway API",
        "href": "/gateway-api/",
        "className": "sidebar-landing",
        "docId": "gateway-api/README"
      },
      {
        "type": "link",
        "label": "CLI",
        "href": "/cli/",
        "className": "sidebar-landing",
        "docId": "cli/README"
      },
      {
        "type": "link",
        "label": "Tutorials",
        "href": "/tutorials/",
        "className": "sidebar-landing",
        "docId": "tutorials/README"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none landing-section\">INFRA & PROTOCOL</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Validator node",
        "href": "/validator/",
        "className": "sidebar-landing",
        "docId": "validator/README"
      },
      {
        "type": "link",
        "label": "SQL specification",
        "href": "/specs/sql/",
        "className": "sidebar-landing",
        "docId": "specs/sql/README"
      }
    ],
    "fundamentals": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Fundamentals</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "category",
        "label": "Introduction",
        "items": [
          {
            "type": "link",
            "label": "What is Tableland?",
            "href": "/fundamentals/what-is-tableland",
            "docId": "fundamentals/what-is-tableland"
          },
          {
            "type": "link",
            "label": "Why use Tableland?",
            "href": "/fundamentals/considerations-tradeoffs",
            "docId": "fundamentals/considerations-tradeoffs"
          },
          {
            "type": "link",
            "label": "Databases & SQL",
            "href": "/fundamentals/databases",
            "docId": "fundamentals/databases"
          }
        ],
        "collapsed": true,
        "collapsible": true,
        "href": "/fundamentals/"
      },
      {
        "type": "link",
        "label": "Use cases",
        "href": "/fundamentals/use-cases/",
        "docId": "fundamentals/use-cases/README"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">ARCHITECTURE</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Protocol design",
        "href": "/fundamentals/architecture/protocol-design",
        "docId": "fundamentals/architecture/protocol-design"
      },
      {
        "type": "link",
        "label": "Table uniqueness",
        "href": "/fundamentals/architecture/table-token",
        "docId": "fundamentals/architecture/table-token"
      },
      {
        "type": "link",
        "label": "Limits",
        "href": "/fundamentals/architecture/limits",
        "docId": "fundamentals/architecture/limits"
      },
      {
        "type": "link",
        "label": "Gateway",
        "href": "/fundamentals/architecture/gateway",
        "docId": "fundamentals/architecture/gateway"
      },
      {
        "type": "category",
        "label": "Chains",
        "items": [
          {
            "type": "link",
            "label": "Ethereum",
            "href": "/fundamentals/chains/ethereum",
            "docId": "fundamentals/chains/ethereum"
          },
          {
            "type": "link",
            "label": "Arbitrum",
            "href": "/fundamentals/chains/arbitrum",
            "docId": "fundamentals/chains/arbitrum"
          },
          {
            "type": "link",
            "label": "Optimism",
            "href": "/fundamentals/chains/optimism",
            "docId": "fundamentals/chains/optimism"
          },
          {
            "type": "link",
            "label": "Polygon",
            "href": "/fundamentals/chains/polygon",
            "docId": "fundamentals/chains/polygon"
          },
          {
            "type": "link",
            "label": "Local node",
            "href": "/fundamentals/chains/local",
            "docId": "fundamentals/chains/local"
          }
        ],
        "collapsed": true,
        "collapsible": true,
        "href": "/fundamentals/chains/"
      },
      {
        "type": "link",
        "label": "Queries & gas",
        "href": "/fundamentals/architecture/query-optimization",
        "docId": "fundamentals/architecture/query-optimization"
      },
      {
        "type": "link",
        "label": "Cost estimator",
        "href": "/fundamentals/architecture/cost-estimator",
        "docId": "fundamentals/architecture/cost-estimator"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">CONCEPTS</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "NFT metadata",
        "href": "/fundamentals/concepts/nft-metadata",
        "docId": "fundamentals/concepts/nft-metadata"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">ABOUT</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "General FAQs",
        "href": "/fundamentals/about/general-faqs",
        "docId": "fundamentals/about/general-faqs"
      },
      {
        "type": "link",
        "label": "Glossary",
        "href": "/fundamentals/about/glossary",
        "docId": "fundamentals/about/glossary"
      },
      {
        "type": "link",
        "label": "Open beta",
        "href": "/fundamentals/about/open-beta",
        "docId": "fundamentals/about/open-beta"
      },
      {
        "type": "link",
        "label": "Roadmap",
        "href": "/fundamentals/about/roadmap",
        "docId": "fundamentals/about/roadmap"
      },
      {
        "type": "link",
        "label": "Repos",
        "href": "/fundamentals/about/repos",
        "docId": "fundamentals/about/repos"
      }
    ],
    "playbooks": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Playbooks</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Overview",
        "href": "/playbooks/",
        "docId": "playbooks/README"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">SQL BASICS</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Get started",
        "href": "/playbooks/sql/",
        "docId": "playbooks/sql/README"
      },
      {
        "type": "link",
        "label": "Creating a table",
        "href": "/playbooks/sql/create",
        "docId": "playbooks/sql/create"
      },
      {
        "type": "link",
        "label": "Reading data",
        "href": "/playbooks/sql/read",
        "docId": "playbooks/sql/read"
      },
      {
        "type": "link",
        "label": "Writing data",
        "href": "/playbooks/sql/write",
        "docId": "playbooks/sql/write"
      },
      {
        "type": "link",
        "label": "Composing data",
        "href": "/playbooks/sql/composing-data",
        "docId": "playbooks/sql/composing-data"
      },
      {
        "type": "link",
        "label": "SQL functions",
        "href": "/playbooks/sql/functions",
        "docId": "playbooks/sql/functions"
      },
      {
        "type": "link",
        "label": "Access control",
        "href": "/playbooks/sql/access-control",
        "docId": "playbooks/sql/access-control"
      },
      {
        "type": "link",
        "label": "Auto-incrementing",
        "href": "/playbooks/sql/incrementing-values",
        "docId": "playbooks/sql/incrementing-values"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">WALKTHROUGHS</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "NFT metadata",
        "href": "/playbooks/walkthroughs/nft-metadata",
        "docId": "playbooks/walkthroughs/nft-metadata"
      },
      {
        "type": "link",
        "label": "Key-value store",
        "href": "/playbooks/walkthroughs/key-value",
        "docId": "playbooks/walkthroughs/key-value"
      },
      {
        "type": "link",
        "label": "FAQs",
        "href": "/playbooks/walkthroughs/sql-faqs",
        "docId": "playbooks/walkthroughs/sql-faqs"
      }
    ],
    "quickstarts": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Quickstarts</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Overview",
        "href": "/quickstarts/",
        "docId": "quickstarts/README"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">CORE</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "SDK",
        "href": "/quickstarts/sdk-quickstart",
        "docId": "quickstarts/sdk-quickstart"
      },
      {
        "type": "link",
        "label": "Smart contracts",
        "href": "/quickstarts/smart-contract-quickstart",
        "docId": "quickstarts/smart-contract-quickstart"
      },
      {
        "type": "link",
        "label": "CLI",
        "href": "/quickstarts/cli-quickstart",
        "docId": "quickstarts/cli-quickstart"
      },
      {
        "type": "link",
        "label": "Gateway API",
        "href": "/quickstarts/api-quickstart",
        "docId": "quickstarts/api-quickstart"
      },
      {
        "type": "link",
        "label": "Local Tableland",
        "href": "/quickstarts/local-tableland",
        "docId": "quickstarts/local-tableland"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">WEB APP FRAMEWORKS</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "React",
        "href": "/quickstarts/reactjs",
        "docId": "quickstarts/reactjs"
      },
      {
        "type": "link",
        "label": "wagmi",
        "href": "/quickstarts/wagmi",
        "docId": "quickstarts/wagmi"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">CONTRACT FRAMEWORKS</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Hardhat",
        "href": "/quickstarts/hardhat",
        "docId": "quickstarts/hardhat"
      }
    ],
    "sdk": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">SDK</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Overview",
        "href": "/sdk/",
        "docId": "sdk/README"
      },
      {
        "type": "link",
        "label": "Get started",
        "href": "/sdk/core/",
        "docId": "sdk/core/README"
      },
      {
        "type": "link",
        "label": "Signers",
        "href": "/sdk/core/signers",
        "docId": "sdk/core/signers"
      },
      {
        "type": "link",
        "label": "Prepared statements",
        "href": "/sdk/core/prepared-statements",
        "docId": "sdk/core/prepared-statements"
      },
      {
        "type": "link",
        "label": "Query statement methods",
        "href": "/sdk/core/query-statement-methods",
        "docId": "sdk/core/query-statement-methods"
      },
      {
        "type": "link",
        "label": "Batching",
        "href": "/sdk/core/batching",
        "docId": "sdk/core/batching"
      },
      {
        "type": "link",
        "label": "Error handling",
        "href": "/sdk/core/timeouts-error-handling",
        "docId": "sdk/core/timeouts-error-handling"
      },
      {
        "type": "link",
        "label": "Validator API",
        "href": "/sdk/core/validator-api",
        "docId": "sdk/core/validator-api"
      },
      {
        "type": "link",
        "label": "Registry API",
        "href": "/sdk/core/registry-api",
        "docId": "sdk/core/registry-api"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">REFERENCE</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Type conversion",
        "href": "/sdk/reference/type-conversion",
        "docId": "sdk/reference/type-conversion"
      },
      {
        "type": "link",
        "label": "Testing",
        "href": "/sdk/reference/testing",
        "docId": "sdk/reference/testing"
      },
      {
        "type": "link",
        "label": "ORM support",
        "href": "/sdk/reference/orm",
        "docId": "sdk/reference/orm"
      }
    ],
    "smartContracts": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Smart contracts</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Overview",
        "href": "/smart-contracts/",
        "docId": "smart-contracts/README"
      },
      {
        "type": "link",
        "label": "Get started",
        "href": "/smart-contracts/get-started",
        "docId": "smart-contracts/get-started"
      },
      {
        "type": "link",
        "label": "Contract owned tables",
        "href": "/smart-contracts/contract-owned-tables",
        "docId": "smart-contracts/contract-owned-tables"
      },
      {
        "type": "category",
        "label": "Configure write access",
        "items": [
          {
            "type": "link",
            "label": "Controller contract",
            "href": "/smart-contracts/controller/contract-anatomy",
            "docId": "smart-contracts/controller/contract-anatomy"
          },
          {
            "type": "link",
            "label": "Creating controllers",
            "href": "/smart-contracts/controller/creating-controllers",
            "docId": "smart-contracts/controller/creating-controllers"
          },
          {
            "type": "link",
            "label": "Setting controllers",
            "href": "/smart-contracts/controller/setting-controllers",
            "docId": "smart-contracts/controller/setting-controllers"
          }
        ],
        "collapsed": true,
        "collapsible": true,
        "href": "/smart-contracts/controller/"
      },
      {
        "type": "link",
        "label": "Using SQL helpers",
        "href": "/smart-contracts/using-sql-helpers",
        "docId": "smart-contracts/using-sql-helpers"
      },
      {
        "type": "category",
        "label": "Example contracts",
        "items": [
          {
            "type": "link",
            "label": "Allow all controller",
            "href": "/smart-contracts/examples/allow-all-controller",
            "docId": "smart-contracts/examples/allow-all-controller"
          },
          {
            "type": "link",
            "label": "Complex controller",
            "href": "/smart-contracts/examples/complex-controller",
            "docId": "smart-contracts/examples/complex-controller"
          },
          {
            "type": "link",
            "label": "Raw controller",
            "href": "/smart-contracts/examples/raw-controller",
            "docId": "smart-contracts/examples/raw-controller"
          },
          {
            "type": "link",
            "label": "Gated voting",
            "href": "/smart-contracts/examples/gated-voting",
            "docId": "smart-contracts/examples/gated-voting"
          },
          {
            "type": "link",
            "label": "Create from contract",
            "href": "/smart-contracts/examples/create-from-contract",
            "docId": "smart-contracts/examples/create-from-contract"
          }
        ],
        "collapsed": true,
        "collapsible": true,
        "href": "/smart-contracts/examples/"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">WALKTHROUGHS</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Serve NFT metadata",
        "href": "/smart-contracts/serving-nft-metadata",
        "docId": "smart-contracts/serving-nft-metadata"
      },
      {
        "type": "link",
        "label": "Create an immutable table",
        "href": "/smart-contracts/immutable-table",
        "docId": "smart-contracts/immutable-table"
      },
      {
        "type": "link",
        "label": "URI encoding",
        "href": "/smart-contracts/uri-encoding",
        "docId": "smart-contracts/uri-encoding"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">REFERENCE</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Solidity to SQL types",
        "href": "/smart-contracts/solidity-to-sql-types",
        "docId": "smart-contracts/solidity-to-sql-types"
      },
      {
        "type": "link",
        "label": "Error handling",
        "href": "/smart-contracts/error-handling",
        "docId": "smart-contracts/error-handling"
      },
      {
        "type": "link",
        "label": "Deployed contracts",
        "href": "/smart-contracts/deployed-contracts",
        "docId": "smart-contracts/deployed-contracts"
      },
      {
        "type": "link",
        "label": "Using Remix",
        "href": "/smart-contracts/using-remix",
        "docId": "smart-contracts/using-remix"
      }
    ],
    "cli": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">CLI</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Installation",
        "href": "/cli/",
        "docId": "cli/README"
      },
      {
        "type": "link",
        "label": "Commands",
        "href": "/cli/commands",
        "docId": "cli/commands"
      },
      {
        "type": "link",
        "label": "Errors",
        "href": "/cli/errors",
        "docId": "cli/errors"
      }
    ],
    "validatorApi": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Gateway API</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Get started",
        "href": "/gateway-api/",
        "docId": "gateway-api/README"
      },
      {
        "type": "link",
        "label": "Endpoints",
        "href": "/gateway-api/endpoints",
        "docId": "gateway-api/endpoints"
      },
      {
        "type": "link",
        "label": "Query formatting",
        "href": "/gateway-api/query-formatting",
        "docId": "gateway-api/query-formatting"
      }
    ],
    "tutorials": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Tutorials</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Overview",
        "href": "/tutorials/",
        "docId": "tutorials/README"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">NFTS & GAMING</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Build a dynamic NFT in Solidity",
        "href": "/tutorials/dynamic-nft-solidity",
        "docId": "tutorials/dynamic-nft-solidity"
      },
      {
        "type": "link",
        "label": "Create a dynamic NFT with p5.js",
        "href": "/tutorials/dynamic-nft-p5js",
        "docId": "tutorials/dynamic-nft-p5js"
      },
      {
        "type": "link",
        "label": "Build a game on Arbitrum",
        "href": "/tutorials/building-games-on-arbitrum",
        "docId": "tutorials/building-games-on-arbitrum"
      },
      {
        "type": "link",
        "label": "Dynamic NFT with Chainlink",
        "href": "/tutorials/dynamic-nft-chainlink",
        "docId": "tutorials/dynamic-nft-chainlink"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">DATA & STORAGE</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Build a Data DAO",
        "href": "/tutorials/data-dao-polygon",
        "docId": "tutorials/data-dao-polygon"
      },
      {
        "type": "link",
        "label": "Key-value store as NFT",
        "href": "/tutorials/key-value-store-nft",
        "docId": "tutorials/key-value-store-nft"
      },
      {
        "type": "html",
        "value": "<h6 class=\"margin-top--md margin-bottom--none sidebar-section\">UTILITY</h6>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "On-chain reads with Chainlink",
        "href": "/tutorials/table-reads-chainlink",
        "docId": "tutorials/table-reads-chainlink"
      },
      {
        "type": "link",
        "label": "JSON files to tables & NFTs",
        "href": "/tutorials/json-files-nft-polygon",
        "docId": "tutorials/json-files-nft-polygon"
      }
    ],
    "validator": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Reference</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Validator node",
        "href": "/validator/",
        "docId": "validator/README"
      }
    ],
    "sqlSpecification": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Reference</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "SQL specification",
        "href": "/specs/sql/",
        "docId": "specs/sql/README"
      }
    ],
    "contribute": [
      {
        "type": "link",
        "label": "Back to home",
        "className": "sidepage-back-home",
        "href": "/"
      },
      {
        "type": "html",
        "value": "<h4 class=\"margin-top--md margin-bottom--none sidepage-heading\">Contribute</h4>",
        "defaultStyle": true
      },
      {
        "type": "html",
        "value": "<hr />",
        "defaultStyle": true,
        "className": "sidebar-hr"
      },
      {
        "type": "link",
        "label": "Contributor guidelines",
        "href": "/contribute/",
        "docId": "contribute/README"
      },
      {
        "type": "link",
        "label": "Style guide",
        "href": "/contribute/style-guide",
        "docId": "contribute/style-guide"
      },
      {
        "type": "link",
        "label": "Maintainers",
        "href": "/contribute/maintainers",
        "docId": "contribute/maintainers"
      }
    ]
  },
  "docs": {
    "cli/commands": {
      "id": "cli/commands",
      "title": "CLI commands",
      "description": "The Tableland CLI comes with purpose built commands, which slightly differs from the convention in other clients.",
      "sidebar": "cli"
    },
    "cli/errors": {
      "id": "cli/errors",
      "title": "CLI errors",
      "description": "Understand commons errors that occur when using the Tableland CLI.",
      "sidebar": "cli"
    },
    "cli/README": {
      "id": "cli/README",
      "title": "Installation",
      "description": "Experiment with creating, editing, and querying tables from the comfort of the command line.",
      "sidebar": "cli"
    },
    "contribute/maintainers": {
      "id": "contribute/maintainers",
      "title": "Maintainers",
      "description": "Core contributors to the Tableland protocol's documentation.",
      "sidebar": "contribute"
    },
    "contribute/README": {
      "id": "contribute/README",
      "title": "How to contribute",
      "description": "Get involved and contribute to the Tableland ecosystem.",
      "sidebar": "contribute"
    },
    "contribute/style-guide": {
      "id": "contribute/style-guide",
      "title": "Style guide",
      "description": "Learn the ins and outs of contributing to the Tableland docs site.",
      "sidebar": "contribute"
    },
    "fundamentals/about/general-faqs": {
      "id": "fundamentals/about/general-faqs",
      "title": "General FAQs",
      "description": "Review commonly asked questions about the Tableland network and community.",
      "sidebar": "fundamentals"
    },
    "fundamentals/about/glossary": {
      "id": "fundamentals/about/glossary",
      "title": "Glossary",
      "description": "Get familiar with common words and phrases in web3, databases, and Tableland.",
      "sidebar": "fundamentals"
    },
    "fundamentals/about/open-beta": {
      "id": "fundamentals/about/open-beta",
      "title": "Open beta",
      "description": "Use Tableland on testnet and mainnet chains while the protocol is in development.",
      "sidebar": "fundamentals"
    },
    "fundamentals/about/repos": {
      "id": "fundamentals/about/repos",
      "title": "Repositories",
      "description": "Open source reference for all official Tableland network software.",
      "sidebar": "fundamentals"
    },
    "fundamentals/about/roadmap": {
      "id": "fundamentals/about/roadmap",
      "title": "Vision & roadmap",
      "description": "The protocol is still being developed and progressively decentralized.",
      "sidebar": "fundamentals"
    },
    "fundamentals/architecture/cost-estimator": {
      "id": "fundamentals/architecture/cost-estimator",
      "title": "Cost estimator",
      "description": "Understand cost approximations for table creates and writes based on statement size.",
      "sidebar": "fundamentals"
    },
    "fundamentals/architecture/gateway": {
      "id": "fundamentals/architecture/gateway",
      "title": "Gateway & response times",
      "description": "Read responses follow typical HTTPS response expectation, but keep in mind that mutation processing (creates & writes) must occur before the data is made available.",
      "sidebar": "fundamentals"
    },
    "fundamentals/architecture/limits": {
      "id": "fundamentals/architecture/limits",
      "title": "Limits",
      "description": "A listing of table, data, and query limits.",
      "sidebar": "fundamentals"
    },
    "fundamentals/architecture/protocol-design": {
      "id": "fundamentals/architecture/protocol-design",
      "title": "Protocol design",
      "description": "The Tableland protocol operates as a data scaling solution using chain-powered database mutations and a parallel adjacent network.",
      "sidebar": "fundamentals"
    },
    "fundamentals/architecture/query-optimization": {
      "id": "fundamentals/architecture/query-optimization",
      "title": "Query optimization & gas",
      "description": "Gas is paid for any on-chain query, so statement structure has an impact on cost.",
      "sidebar": "fundamentals"
    },
    "fundamentals/architecture/table-token": {
      "id": "fundamentals/architecture/table-token",
      "title": "TABLE token & identification",
      "description": "Tables are guaranteed unique across all chains based on a combination of developer and environment defined information.",
      "sidebar": "fundamentals"
    },
    "fundamentals/chains/arbitrum": {
      "id": "fundamentals/chains/arbitrum",
      "title": "Arbitrum",
      "description": "An overview of using Arbitrum with Tableland.",
      "sidebar": "fundamentals"
    },
    "fundamentals/chains/ethereum": {
      "id": "fundamentals/chains/ethereum",
      "title": "Ethereum",
      "description": "An overview of using Ethereum with Tableland.",
      "sidebar": "fundamentals"
    },
    "fundamentals/chains/filecoin": {
      "id": "fundamentals/chains/filecoin",
      "title": "Filecoin",
      "description": "An overview of using Filecoin with Tableland."
    },
    "fundamentals/chains/local": {
      "id": "fundamentals/chains/local",
      "title": "Using a local chain",
      "description": "An overview of using a Hardhat node and a local Tableland instance.",
      "sidebar": "fundamentals"
    },
    "fundamentals/chains/optimism": {
      "id": "fundamentals/chains/optimism",
      "title": "Optimism",
      "description": "An overview of using Optimism with Tableland.",
      "sidebar": "fundamentals"
    },
    "fundamentals/chains/polygon": {
      "id": "fundamentals/chains/polygon",
      "title": "Polygon",
      "description": "An overview of using Polygon with Tableland.",
      "sidebar": "fundamentals"
    },
    "fundamentals/chains/README": {
      "id": "fundamentals/chains/README",
      "title": "Choosing a chain",
      "description": "Selecting a base chain is an important step in any application’s design and, especially, for tables.",
      "sidebar": "fundamentals"
    },
    "fundamentals/concepts/nft-metadata": {
      "id": "fundamentals/concepts/nft-metadata",
      "title": "NFT metadata",
      "description": "Understand the basics of storing and querying ERC721 metadata in table.",
      "sidebar": "fundamentals"
    },
    "fundamentals/considerations-tradeoffs": {
      "id": "fundamentals/considerations-tradeoffs",
      "title": "Considerations & tradeoffs",
      "description": "Tableland offers a new solution to suboptimal web3 data storage standards.",
      "sidebar": "fundamentals"
    },
    "fundamentals/databases": {
      "id": "fundamentals/databases",
      "title": "Databases & SQL",
      "description": "Briefly look under the hood at relational databases.",
      "sidebar": "fundamentals"
    },
    "fundamentals/README": {
      "id": "fundamentals/README",
      "title": "Introduction",
      "description": "Figure out where to begin with Tableland, whether that's starting to build or figuring out how it all works.",
      "sidebar": "fundamentals"
    },
    "fundamentals/use-cases/README": {
      "id": "fundamentals/use-cases/README",
      "title": "Use cases",
      "description": "A series of general use cases to consider.",
      "sidebar": "fundamentals"
    },
    "fundamentals/what-is-tableland": {
      "id": "fundamentals/what-is-tableland",
      "title": "What is Tableland?",
      "description": "A brief overview of what the Tableland network is and how it works.",
      "sidebar": "fundamentals"
    },
    "gateway-api/endpoints": {
      "id": "gateway-api/endpoints",
      "title": "Endpoints",
      "description": "Make API calls to get table and validator information.",
      "sidebar": "validatorApi"
    },
    "gateway-api/errors": {
      "id": "gateway-api/errors",
      "title": "Errors",
      "description": "Openly readable tables by your applications."
    },
    "gateway-api/query-formatting": {
      "id": "gateway-api/query-formatting",
      "title": "Query formatting",
      "description": "Transform the output of a read query into your desired format.",
      "sidebar": "validatorApi"
    },
    "gateway-api/README": {
      "id": "gateway-api/README",
      "title": "Get started",
      "description": "Leverage REST APIs to interact directly with Tableland validator nodes at a gateway.",
      "sidebar": "validatorApi"
    },
    "landing": {
      "id": "landing",
      "title": "Home",
      "description": "",
      "sidebar": "home"
    },
    "playbooks/README": {
      "id": "playbooks/README",
      "title": "Overview",
      "description": "Get started with playbooks that outline how to use Tableland SQL and other common concepts.",
      "sidebar": "playbooks"
    },
    "playbooks/sql/access-control": {
      "id": "playbooks/sql/access-control",
      "title": "Grant & revoke access",
      "description": "Grant or revoke access to table writes using SQL statements.",
      "sidebar": "playbooks"
    },
    "playbooks/sql/composing-data": {
      "id": "playbooks/sql/composing-data",
      "title": "Composing data across tables",
      "description": "Extract data across multiple tables by joining them together.",
      "sidebar": "playbooks"
    },
    "playbooks/sql/create": {
      "id": "playbooks/sql/create",
      "title": "Creating a table",
      "description": "Define a set of columns, their types, and constraints for a table.",
      "sidebar": "playbooks"
    },
    "playbooks/sql/functions": {
      "id": "playbooks/sql/functions",
      "title": "SQL functions",
      "description": "Use built-in SQL functions to transform query data.",
      "sidebar": "playbooks"
    },
    "playbooks/sql/incrementing-values": {
      "id": "playbooks/sql/incrementing-values",
      "title": "Incrementing values automatically",
      "description": "Tableland allows developers to automatically increment a cell, with some restrictions.",
      "sidebar": "playbooks"
    },
    "playbooks/sql/read": {
      "id": "playbooks/sql/read",
      "title": "Reading a table's data",
      "description": "Extract data from a table and organize it however you'd like.",
      "sidebar": "playbooks"
    },
    "playbooks/sql/README": {
      "id": "playbooks/sql/README",
      "title": "Get started",
      "description": "Dive into SQL and start using it to build web3 applications.",
      "sidebar": "playbooks"
    },
    "playbooks/sql/write": {
      "id": "playbooks/sql/write",
      "title": "Writing table data",
      "description": "Mutate values through table inserts (plus upserts), updates, and deletes.",
      "sidebar": "playbooks"
    },
    "playbooks/walkthroughs/key-value": {
      "id": "playbooks/walkthroughs/key-value",
      "title": "Key-value store",
      "description": "Store arbitrary key-value data in a table.",
      "sidebar": "playbooks"
    },
    "playbooks/walkthroughs/nft-metadata": {
      "id": "playbooks/walkthroughs/nft-metadata",
      "title": "Crafting NFT metadata",
      "description": "Turn table data into JSON objects and array for ERC721 compliant metadata.",
      "sidebar": "playbooks"
    },
    "playbooks/walkthroughs/sql-faqs": {
      "id": "playbooks/walkthroughs/sql-faqs",
      "title": "SQL FAQs",
      "description": "Check out helpful pointers when dealing with SQL.",
      "sidebar": "playbooks"
    },
    "quickstarts/api-quickstart": {
      "id": "quickstarts/api-quickstart",
      "title": "Gateway API quickstart",
      "description": "Learn how to read table data or retrieve relevant validator information.",
      "sidebar": "quickstarts"
    },
    "quickstarts/cli-quickstart": {
      "id": "quickstarts/cli-quickstart",
      "title": "CLI quickstart",
      "description": "Learn how to create a table, add some sample data, and query the data using the CLI.",
      "sidebar": "quickstarts"
    },
    "quickstarts/hardhat": {
      "id": "quickstarts/hardhat",
      "title": "Hardhat",
      "description": "Use Tableland smart contracts with Hardhat.",
      "sidebar": "quickstarts"
    },
    "quickstarts/local-tableland": {
      "id": "quickstarts/local-tableland",
      "title": "Local development & testing",
      "description": "Build with Local Tableland to quickly iterate with Tableland using a local environment.",
      "sidebar": "quickstarts"
    },
    "quickstarts/reactjs": {
      "id": "quickstarts/reactjs",
      "title": "Use Tableland with React",
      "description": "Quickly set up a React application with Tableland via an account and database connection.",
      "sidebar": "quickstarts"
    },
    "quickstarts/README": {
      "id": "quickstarts/README",
      "title": "Overview",
      "description": "Make sure you're ready to start building by properly setting up your development environment.",
      "sidebar": "quickstarts"
    },
    "quickstarts/sdk-quickstart": {
      "id": "quickstarts/sdk-quickstart",
      "title": "SDK quickstart",
      "description": "Learn how to create a table, add some sample data, and query the data using the SDK.",
      "sidebar": "quickstarts"
    },
    "quickstarts/smart-contract-quickstart": {
      "id": "quickstarts/smart-contract-quickstart",
      "title": "Smart contract quickstart",
      "description": "Learn how to create a table and insert add some sample data using the Solidity.",
      "sidebar": "quickstarts"
    },
    "quickstarts/wagmi": {
      "id": "quickstarts/wagmi",
      "title": "Use Tableland with wagmi",
      "description": "Quickly add and use wagmi with Tableland and React.",
      "sidebar": "quickstarts"
    },
    "sdk/core/batching": {
      "id": "sdk/core/batching",
      "title": "Batching statement & operations",
      "description": "Get up an running with the Tableland SDK.",
      "sidebar": "sdk"
    },
    "sdk/core/prepared-statements": {
      "id": "sdk/core/prepared-statements",
      "title": "Prepared statements",
      "description": "Use a single method for all table creates, reads, and writes.",
      "sidebar": "sdk"
    },
    "sdk/core/query-statement-methods": {
      "id": "sdk/core/query-statement-methods",
      "title": "Query statement methods",
      "description": "Mutate your table values with additional access control.",
      "sidebar": "sdk"
    },
    "sdk/core/README": {
      "id": "sdk/core/README",
      "title": "Get started",
      "description": "Get up an running with the Tableland SDK.",
      "sidebar": "sdk"
    },
    "sdk/core/registry-api": {
      "id": "sdk/core/registry-api",
      "title": "Registry API",
      "description": "Use the Registry API for directly calling the Tableland registry smart contract.",
      "sidebar": "sdk"
    },
    "sdk/core/signers": {
      "id": "sdk/core/signers",
      "title": "Signers",
      "description": "Access the Tableland network by first connecting to the base chain.",
      "sidebar": "sdk"
    },
    "sdk/core/timeouts-error-handling": {
      "id": "sdk/core/timeouts-error-handling",
      "title": "Error handling",
      "description": "Review SDK error handling setup and what types of messages will bubble up.",
      "sidebar": "sdk"
    },
    "sdk/core/validator-api": {
      "id": "sdk/core/validator-api",
      "title": "Validator API",
      "description": "The Validator API allows for direct access to a Tableland Validator node. This does not involve any on-chain actions and directly connects to a validator node.",
      "sidebar": "sdk"
    },
    "sdk/README": {
      "id": "sdk/README",
      "title": "Overview",
      "description": "Use the Tableland SDK in your JavaScript / TypeScript projects, with full Cloudflare D1 client compatibility.",
      "sidebar": "sdk"
    },
    "sdk/reference/orm": {
      "id": "sdk/reference/orm",
      "title": "ORM support",
      "description": "Simplify working with data and writing SQL statements using an Object-Relational Mapping (ORM) tool.",
      "sidebar": "sdk"
    },
    "sdk/reference/sdk-faqs": {
      "id": "sdk/reference/sdk-faqs",
      "title": "SDK FAQs",
      "description": "Review commonly asked questions about the Tableland SDK."
    },
    "sdk/reference/testing": {
      "id": "sdk/reference/testing",
      "title": "Testing",
      "description": "Learn how to create test scripts that use Local Tableland under the hood.",
      "sidebar": "sdk"
    },
    "sdk/reference/type-conversion": {
      "id": "sdk/reference/type-conversion",
      "title": "Type conversion",
      "description": "Review converting from JavaScript to SQL types.",
      "sidebar": "sdk"
    },
    "smart-contracts/contract-owned-tables": {
      "id": "smart-contracts/contract-owned-tables",
      "title": "Contract owned tables",
      "description": "Learn how to create tables from and owned by a smart contract.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/controller/contract-anatomy": {
      "id": "smart-contracts/controller/contract-anatomy",
      "title": "Controller contract anatomy",
      "description": "Dive into into the Tableland controller contract's design.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/controller/creating-controllers": {
      "id": "smart-contracts/controller/creating-controllers",
      "title": "Creating controllers",
      "description": "Understand how to create a controller contract.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/controller/README": {
      "id": "smart-contracts/controller/README",
      "title": "Configure table write access",
      "description": "Everything you need to know to control access for programmable tables.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/controller/setting-controllers": {
      "id": "smart-contracts/controller/setting-controllers",
      "title": "Setting controllers",
      "description": "Understand how to set or unset a controller contract.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/deployed-contracts": {
      "id": "smart-contracts/deployed-contracts",
      "title": "Deployed contracts",
      "description": "A list of deployed Tableland registry contracts for each supported chain.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/error-handling": {
      "id": "smart-contracts/error-handling",
      "title": "Error handling",
      "description": "Look at some error handling strategies when writing on-chain SQL.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/examples/allow-all-controller": {
      "id": "smart-contracts/examples/allow-all-controller",
      "title": "Allow all controller",
      "description": "Provision access so that any account can perform any action on a table.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/examples/complex-controller": {
      "id": "smart-contracts/examples/complex-controller",
      "title": "Complex controller",
      "description": "Create a controller with balance and token ownership checks.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/examples/create-from-contract": {
      "id": "smart-contracts/examples/create-from-contract",
      "title": "Create from contract",
      "description": "Create a table from a contract.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/examples/gated-voting": {
      "id": "smart-contracts/examples/gated-voting",
      "title": "Gated voting",
      "description": "Create a contract that gates writes to a voting table based on ERC721 token ownership.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/examples/raw-controller": {
      "id": "smart-contracts/examples/raw-controller",
      "title": "Raw controller",
      "description": "Create an raw Tableland controller.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/examples/README": {
      "id": "smart-contracts/examples/README",
      "title": "Example contracts",
      "description": "Check out any of the starter contracts for Tableland controllers or registry interactions.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/get-started": {
      "id": "smart-contracts/get-started",
      "title": "Get started",
      "description": "Get up an running with smart contracts and Tableland.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/immutable-table": {
      "id": "smart-contracts/immutable-table",
      "title": "Create an immutable table",
      "description": "Permanently freeze a table's data by sending it to the dead address.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/README": {
      "id": "smart-contracts/README",
      "title": "Overview",
      "description": "Interact with Tableland using smart contracts.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/serving-nft-metadata": {
      "id": "smart-contracts/serving-nft-metadata",
      "title": "Serve NFT metadata from smart contracts",
      "description": "Learn how to write, format, and deploy SQL in your smart contracts to produce NFT JSON metadata.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/solidity-to-sql-types": {
      "id": "smart-contracts/solidity-to-sql-types",
      "title": "Solidity to SQL types",
      "description": "Review the best practices for Solidity types and SQL compatibility.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/uri-encoding": {
      "id": "smart-contracts/uri-encoding",
      "title": "URI encoding",
      "description": "SQL queries written at the query endpoint must have the proper encoding.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/using-remix": {
      "id": "smart-contracts/using-remix",
      "title": "Using Remix",
      "description": "An online IDE that makes it easy to tinker with and deploy smart contracts.",
      "sidebar": "smartContracts"
    },
    "smart-contracts/using-sql-helpers": {
      "id": "smart-contracts/using-sql-helpers",
      "title": "Using SQL helpers",
      "description": "Use the SQL helpers library to make it easier write SQL in Solidity.",
      "sidebar": "smartContracts"
    },
    "specs/sql/README": {
      "id": "specs/sql/README",
      "title": "SQL specification",
      "description": "The Tableland SQL language specification offers a unique set of SQL that is a subset of the SQLite language.",
      "sidebar": "sqlSpecification"
    },
    "tutorials/building-games-on-arbitrum": {
      "id": "tutorials/building-games-on-arbitrum",
      "title": "Build a game on Arbitrum",
      "description": "Deploy a smart contract-based game and interact with it a React app.",
      "sidebar": "tutorials"
    },
    "tutorials/data-dao-polygon": {
      "id": "tutorials/data-dao-polygon",
      "title": "Build a Data DAO on Polygon",
      "description": "Create a DAO that mints Tableland tables and makes them mutable only through successful DAO votes.",
      "sidebar": "tutorials"
    },
    "tutorials/dynamic-nft-chainlink": {
      "id": "tutorials/dynamic-nft-chainlink",
      "title": "Dynamic NFT with Chainlink automation",
      "description": "Leverage Chainlink for automated NFT mutations.",
      "sidebar": "tutorials"
    },
    "tutorials/dynamic-nft-p5js": {
      "id": "tutorials/dynamic-nft-p5js",
      "title": "Create a dynamic NFT with p5.js",
      "description": "Use p5.js to render data from an NFT that holds global game state in a table.",
      "sidebar": "tutorials"
    },
    "tutorials/dynamic-nft-solidity": {
      "id": "tutorials/dynamic-nft-solidity",
      "title": "Build a dynamic NFT in Solidity",
      "description": "Create an on-chain game that uses SQL queries to create and populate a table of game state.",
      "sidebar": "tutorials"
    },
    "tutorials/json-files-nft-polygon": {
      "id": "tutorials/json-files-nft-polygon",
      "title": "Parse JSON into tables for NFTs",
      "description": "Take local JSON files, parse them into tables, and deploy the data as an NFT collection on Polygon.",
      "sidebar": "tutorials"
    },
    "tutorials/key-value-store-nft": {
      "id": "tutorials/key-value-store-nft",
      "title": "Key-value store database",
      "description": "Create a key-value store database that is actually an NFT with collaborative features.",
      "sidebar": "tutorials"
    },
    "tutorials/README": {
      "id": "tutorials/README",
      "title": "Overview",
      "description": "Tutorials and example apps to help kickstart your development process.",
      "sidebar": "tutorials"
    },
    "tutorials/table-reads-chainlink": {
      "id": "tutorials/table-reads-chainlink",
      "title": "On-Chain reads with Chainlink + Arbitrum",
      "description": "Use Chainlink’s node operator network to get table state back on-chain to the Arbitrum network.",
      "sidebar": "tutorials"
    },
    "validator/README": {
      "id": "validator/README",
      "title": "Validator node",
      "description": "Learn how to run you own Tableland validator node.",
      "sidebar": "validator"
    }
  }
}