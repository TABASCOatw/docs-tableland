{
  "unversionedId": "tutorials/dynamic-nft-p5js",
  "id": "tutorials/dynamic-nft-p5js",
  "title": "Creating a dynamic NFT with p5.js",
  "description": "Use p5.js to render data from an NFT that holds global game state in a table.",
  "source": "@site/docs/tutorials/dynamic-nft-p5js.md",
  "sourceDirName": "tutorials",
  "slug": "/tutorials/dynamic-nft-p5js",
  "permalink": "/tutorials/dynamic-nft-p5js",
  "draft": false,
  "editUrl": "https://github.com/tablelandnetwork/docs/tree/main/docs/tutorials/dynamic-nft-p5js.md",
  "tags": [],
  "version": "current",
  "lastUpdatedBy": "Author",
  "lastUpdatedAt": 1539502055,
  "formattedLastUpdatedAt": "Oct 14, 2018",
  "frontMatter": {
    "title": "Creating a dynamic NFT with p5.js",
    "description": "Use p5.js to render data from an NFT that holds global game state in a table.",
    "synopsis": "We want to now write a simple web app that will be used to dynamically render a single NFT in our collection. When the NFT renders, the web app should check the requested token, grab the latest data from Tableland, and render some dynamic content.",
    "keywords": [
      "tutorial",
      "solidity",
      "dynamic NFT"
    ]
  },
  "sidebar": "tutorials",
  "previous": {
    "title": "Build a dynamic NFT in Solidity",
    "permalink": "/tutorials/dynamic-nft-solidity"
  },
  "next": {
    "title": "JSON files to NFT metadata",
    "permalink": "/tutorials/deploying-nft-polygon"
  }
}